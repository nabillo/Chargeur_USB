

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 03 23:20:36 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	dabs	1,0x400,48,_BDT
   109                           	dabs	1,0x500,64,_cdc_data_tx
   110                           	dabs	1,0x438,8,_CtrlTrfData
   111                           	dabs	1,0x430,8,_SetupPkt
   112                           	dabs	1,0x540,64,_cdc_data_rx
   113  0000                     
   114                           	psect	idataBANK1
   115  004046                     __pidataBANK1:
   116                           	opt stack 0
   117                           
   118                           ;initializer for _algo_Name
   119  004046  4C                 	db	76
   120  004047  49                 	db	73
   121  004048  50                 	db	80
   122  004049  4F                 	db	79
   123  00404A  00                 	db	0
   124  00404B  4E                 	db	78
   125  00404C  49                 	db	73
   126  00404D  4D                 	db	77
   127  00404E  48                 	db	72
   128  00404F  00                 	db	0
   129  004050  50                 	db	80
   130  004051  42                 	db	66
   131  004052  00                 	db	0
   132  004053  00                 	db	0
   133  004054  00                 	db	0
   134                           
   135                           	psect	mediumconst
   136  007D2E                     __pmediumconst:
   137                           	opt stack 0
   138  007D2E  00                 	db	0
   139  007D2F                     _strDate:
   140                           	opt stack 0
   141  007D2F  32                 	db	50
   142  007D30  34                 	db	52
   143  007D31  2E                 	db	46
   144  007D32  20                 	db	32
   145  007D33  4A                 	db	74
   146  007D34  75                 	db	117
   147  007D35  69                 	db	105
   148  007D36  6C                 	db	108
   149  007D37  2E                 	db	46
   150  007D38  20                 	db	32
   151  007D39  32                 	db	50
   152  007D3A  30                 	db	48
   153  007D3B  31                 	db	49
   154  007D3C  35                 	db	53
   155  007D3D  00                 	db	0
   156  007D3E                     __end_of_strDate:
   157                           	opt stack 0
   158  007D3E                     _strVersion:
   159                           	opt stack 0
   160  007D3E  56                 	db	86
   161  007D3F  65                 	db	101
   162  007D40  72                 	db	114
   163  007D41  73                 	db	115
   164  007D42  69                 	db	105
   165  007D43  6F                 	db	111
   166  007D44  6E                 	db	110
   167  007D45  20                 	db	32
   168  007D46  31                 	db	49
   169  007D47  2E                 	db	46
   170  007D48  30                 	db	48
   171  007D49  00                 	db	0
   172  007D4A                     __end_of_strVersion:
   173                           	opt stack 0
   174  007D4A                     _hexpowers:
   175                           	opt stack 0
   176  007D4A  0001               	dw	1
   177  007D4C  0010               	dw	16
   178  007D4E  0100               	dw	256
   179  007D50  1000               	dw	4096
   180  007D52                     __end_of_hexpowers:
   181                           	opt stack 0
   182  007D52                     _strDevice:
   183                           	opt stack 0
   184  007D52  43                 	db	67
   185  007D53  48                 	db	72
   186  007D54  41                 	db	65
   187  007D55  52                 	db	82
   188  007D56  47                 	db	71
   189  007D57  45                 	db	69
   190  007D58  52                 	db	82
   191  007D59  00                 	db	0
   192  007D5A                     __end_of_strDevice:
   193                           	opt stack 0
   194  007D5A                     _strMisc:
   195                           	opt stack 0
   196  007D5A  42                 	db	66
   197  007D5B  54                 	db	84
   198  007D5C  4E                 	db	78
   199  007D5D  2D                 	db	45
   200  007D5E  43                 	db	67
   201  007D5F  52                 	db	82
   202  007D60  47                 	db	71
   203  007D61  00                 	db	0
   204  007D62                     __end_of_strMisc:
   205                           	opt stack 0
   206  007D62                     _USB_SD_Ptr:
   207                           	opt stack 0
   208  007D62  29                 	db	low _sd000
   209  007D63  7E                 	db	high _sd000
   210  007D64  B1                 	db	low _sd001
   211  007D65  7D                 	db	high _sd001
   212  007D66  E9                 	db	low _sd002
   213  007D67  7D                 	db	high _sd002
   214  007D68                     __end_of_USB_SD_Ptr:
   215                           	opt stack 0
   216  007D68                     _strManu:
   217                           	opt stack 0
   218  007D68  42                 	db	66
   219  007D69  54                 	db	84
   220  007D6A  4E                 	db	78
   221  007D6B  00                 	db	0
   222  007D6C                     __end_of_strManu:
   223                           	opt stack 0
   224  007D6C                     _USB_CD_Ptr:
   225                           	opt stack 0
   226  007D6C  6E                 	db	low _configDescriptor1
   227  007D6D  7D                 	db	high _configDescriptor1
   228  007D6E                     __end_of_USB_CD_Ptr:
   229                           	opt stack 0
   230  007D6E                     _configDescriptor1:
   231                           	opt stack 0
   232  007D6E  09                 	db	9
   233  007D6F  02                 	db	2
   234  007D70  43                 	db	67
   235  007D71  00                 	db	0
   236  007D72  02                 	db	2
   237  007D73  01                 	db	1
   238  007D74  00                 	db	0
   239  007D75  C0                 	db	192
   240  007D76  32                 	db	50
   241  007D77  09                 	db	9
   242  007D78  04                 	db	4
   243  007D79  00                 	db	0
   244  007D7A  00                 	db	0
   245  007D7B  01                 	db	1
   246  007D7C  02                 	db	2
   247  007D7D  02                 	db	2
   248  007D7E  01                 	db	1
   249  007D7F  00                 	db	0
   250  007D80  05                 	db	5
   251  007D81  24                 	db	36
   252  007D82  00                 	db	0
   253  007D83  10                 	db	16
   254  007D84  01                 	db	1
   255  007D85  04                 	db	4
   256  007D86  24                 	db	36
   257  007D87  02                 	db	2
   258  007D88  02                 	db	2
   259  007D89  05                 	db	5
   260  007D8A  24                 	db	36
   261  007D8B  06                 	db	6
   262  007D8C  00                 	db	0
   263  007D8D  01                 	db	1
   264  007D8E  05                 	db	5
   265  007D8F  24                 	db	36
   266  007D90  01                 	db	1
   267  007D91  00                 	db	0
   268  007D92  01                 	db	1
   269  007D93  07                 	db	7
   270  007D94  05                 	db	5
   271  007D95  81                 	db	129
   272  007D96  03                 	db	3
   273  007D97  08                 	db	8
   274  007D98  00                 	db	0
   275  007D99  02                 	db	2
   276  007D9A  09                 	db	9
   277  007D9B  04                 	db	4
   278  007D9C  01                 	db	1
   279  007D9D  00                 	db	0
   280  007D9E  02                 	db	2
   281  007D9F  0A                 	db	10
   282  007DA0  00                 	db	0
   283  007DA1  00                 	db	0
   284  007DA2  00                 	db	0
   285  007DA3  07                 	db	7
   286  007DA4  05                 	db	5
   287  007DA5  02                 	db	2
   288  007DA6  02                 	db	2
   289  007DA7  40                 	db	64
   290  007DA8  00                 	db	0
   291  007DA9  00                 	db	0
   292  007DAA  07                 	db	7
   293  007DAB  05                 	db	5
   294  007DAC  82                 	db	130
   295  007DAD  02                 	db	2
   296  007DAE  40                 	db	64
   297  007DAF  00                 	db	0
   298  007DB0  00                 	db	0
   299  007DB1                     __end_of_configDescriptor1:
   300                           	opt stack 0
   301  007DB1                     _sd001:
   302                           	opt stack 0
   303  007DB1  38                 	db	56
   304  007DB2  03                 	db	3
   305  007DB3  0041               	dw	65
   306  007DB5  0020               	dw	32
   307  007DB7  004D               	dw	77
   308  007DB9  0069               	dw	105
   309  007DBB  0063               	dw	99
   310  007DBD  0072               	dw	114
   311  007DBF  006F               	dw	111
   312  007DC1  0063               	dw	99
   313  007DC3  0068               	dw	104
   314  007DC5  0069               	dw	105
   315  007DC7  0070               	dw	112
   316  007DC9  0020               	dw	32
   317  007DCB  0054               	dw	84
   318  007DCD  0065               	dw	101
   319  007DCF  0063               	dw	99
   320  007DD1  0068               	dw	104
   321  007DD3  006E               	dw	110
   322  007DD5  006F               	dw	111
   323  007DD7  006C               	dw	108
   324  007DD9  006F               	dw	111
   325  007DDB  0067               	dw	103
   326  007DDD  0079               	dw	121
   327  007DDF  0020               	dw	32
   328  007DE1  0049               	dw	73
   329  007DE3  006E               	dw	110
   330  007DE5  0063               	dw	99
   331  007DE7  002E               	dw	46
   332  007DE9                     __end_of_sd001:
   333                           	opt stack 0
   334  007DE9                     _sd002:
   335                           	opt stack 0
   336  007DE9  2E                 	db	46
   337  007DEA  03                 	db	3
   338  007DEB  0043               	dw	67
   339  007DED  0048               	dw	72
   340  007DEF  0041               	dw	65
   341  007DF1  0052               	dw	82
   342  007DF3  0047               	dw	71
   343  007DF5  0045               	dw	69
   344  007DF7  0052               	dw	82
   345  007DF9  0020               	dw	32
   346  007DFB  0020               	dw	32
   347  007DFD  0020               	dw	32
   348  007DFF  0028               	dw	40
   349  007E01  002D               	dw	45
   350  007E03  003E               	dw	62
   351  007E05  0020               	dw	32
   352  007E07  0031               	dw	49
   353  007E09  0038               	dw	56
   354  007E0B  0046               	dw	70
   355  007E0D  0032               	dw	50
   356  007E0F  0035               	dw	53
   357  007E11  0035               	dw	53
   358  007E13  0030               	dw	48
   359  007E15  0029               	dw	41
   360  007E17                     __end_of_sd002:
   361                           	opt stack 0
   362  007E17                     _device_dsc:
   363                           	opt stack 0
   364  007E17  12                 	db	18
   365  007E18  01                 	db	1
   366  007E19  0200               	dw	512
   367  007E1B  02                 	db	2
   368  007E1C  00                 	db	0
   369  007E1D  00                 	db	0
   370  007E1E  08                 	db	8
   371  007E1F  04D8               	dw	1240
   372  007E21  000A               	dw	10
   373  007E23  0001               	dw	1
   374  007E25  01                 	db	1
   375  007E26  02                 	db	2
   376  007E27  00                 	db	0
   377  007E28  01                 	db	1
   378  007E29                     __end_of_device_dsc:
   379                           	opt stack 0
   380  007E29                     _sd000:
   381                           	opt stack 0
   382  007E29  04                 	db	4
   383  007E2A  03                 	db	3
   384  007E2B  0409               	dw	1033
   385  007E2D                     __end_of_sd000:
   386                           	opt stack 0
   387  0000                     _ADCON0	set	4034
   388  0000                     _ADCON0bits	set	4034
   389  0000                     _ADCON1	set	4033
   390  0000                     _ADCON2	set	4032
   391  0000                     _ADRESH	set	4036
   392  0000                     _ADRESL	set	4035
   393  0000                     _INTCONbits	set	4082
   394  0000                     _IPR2bits	set	4002
   395  0000                     _PIE1bits	set	3997
   396  0000                     _PIE2bits	set	4000
   397  0000                     _PIR1bits	set	3998
   398  0000                     _PIR2bits	set	4001
   399  0000                     _RCONbits	set	4048
   400  0000                     _T1CON	set	4045
   401  0000                     _T1CONbits	set	4045
   402  0000                     _TMR1H	set	4047
   403  0000                     _TMR1L	set	4046
   404  0000                     _UADDR	set	3950
   405  0000                     _UCFG	set	3951
   406  0000                     _UCON	set	3949
   407  0000                     _UCONbits	set	3949
   408  0000                     _UEIE	set	3947
   409  0000                     _UEIR	set	3946
   410  0000                     _UEP0bits	set	3952
   411  0000                     _UIE	set	3945
   412  0000                     _UIEbits	set	3945
   413  0000                     _UIR	set	3944
   414  0000                     _UIRbits	set	3944
   415  0000                     _USTAT	set	3948
   416  0000                     _UEP0	set	3952
   417  0000                     _UEP1	set	3953
   418  007E2D                     STR_11:
   419  007E2D  70                 	db	112	;'p'
   420  007E2E  72                 	db	114	;'r'
   421  007E2F  65                 	db	101	;'e'
   422  007E30  63                 	db	99	;'c'
   423  007E31  6F                 	db	111	;'o'
   424  007E32  6E                 	db	110	;'n'
   425  007E33  64                 	db	100	;'d'
   426  007E34  69                 	db	105	;'i'
   427  007E35  74                 	db	116	;'t'
   428  007E36  69                 	db	105	;'i'
   429  007E37  6F                 	db	111	;'o'
   430  007E38  6E                 	db	110	;'n'
   431  007E39  20                 	db	32
   432  007E3A  76                 	db	118	;'v'
   433  007E3B  65                 	db	101	;'e'
   434  007E3C  72                 	db	114	;'r'
   435  007E3D  69                 	db	105	;'i'
   436  007E3E  66                 	db	102	;'f'
   437  007E3F  69                 	db	105	;'i'
   438  007E40  63                 	db	99	;'c'
   439  007E41  61                 	db	97	;'a'
   440  007E42  74                 	db	116	;'t'
   441  007E43  69                 	db	105	;'i'
   442  007E44  6F                 	db	111	;'o'
   443  007E45  6E                 	db	110	;'n'
   444  007E46  20                 	db	32
   445  007E47  66                 	db	102	;'f'
   446  007E48  61                 	db	97	;'a'
   447  007E49  69                 	db	105	;'i'
   448  007E4A  6C                 	db	108	;'l'
   449  007E4B  75                 	db	117	;'u'
   450  007E4C  72                 	db	114	;'r'
   451  007E4D  65                 	db	101	;'e'
   452  007E4E  00                 	db	0
   453  007E4F                     STR_30:
   454  007E4F  76                 	db	118	;'v'
   455  007E50  6F                 	db	111	;'o'
   456  007E51  6C                 	db	108	;'l'
   457  007E52  74                 	db	116	;'t'
   458  007E53  61                 	db	97	;'a'
   459  007E54  67                 	db	103	;'g'
   460  007E55  65                 	db	101	;'e'
   461  007E56  20                 	db	32
   462  007E57  3A                 	db	58	;':'
   463  007E58  20                 	db	32
   464  007E59  25                 	db	37
   465  007E5A  66                 	db	102	;'f'
   466  007E5B  2C                 	db	44
   467  007E5C  20                 	db	32
   468  007E5D  70                 	db	112	;'p'
   469  007E5E  72                 	db	114	;'r'
   470  007E5F  65                 	db	101	;'e'
   471  007E60  63                 	db	99	;'c'
   472  007E61  6F                 	db	111	;'o'
   473  007E62  6E                 	db	110	;'n'
   474  007E63  64                 	db	100	;'d'
   475  007E64  69                 	db	105	;'i'
   476  007E65  74                 	db	116	;'t'
   477  007E66  69                 	db	105	;'i'
   478  007E67  6F                 	db	111	;'o'
   479  007E68  6E                 	db	110	;'n'
   480  007E69  20                 	db	32
   481  007E6A  3A                 	db	58	;':'
   482  007E6B  20                 	db	32
   483  007E6C  25                 	db	37
   484  007E6D  68                 	db	104	;'h'
   485  007E6E  64                 	db	100	;'d'
   486  007E6F  00                 	db	0
   487  007E70                     STR_14:
   488  007E70  50                 	db	80	;'P'
   489  007E71  72                 	db	114	;'r'
   490  007E72  65                 	db	101	;'e'
   491  007E73  63                 	db	99	;'c'
   492  007E74  6F                 	db	111	;'o'
   493  007E75  6E                 	db	110	;'n'
   494  007E76  64                 	db	100	;'d'
   495  007E77  69                 	db	105	;'i'
   496  007E78  74                 	db	116	;'t'
   497  007E79  69                 	db	105	;'i'
   498  007E7A  6F                 	db	111	;'o'
   499  007E7B  6E                 	db	110	;'n'
   500  007E7C  20                 	db	32
   501  007E7D  73                 	db	115	;'s'
   502  007E7E  61                 	db	97	;'a'
   503  007E7F  66                 	db	102	;'f'
   504  007E80  65                 	db	101	;'e'
   505  007E81  74                 	db	116	;'t'
   506  007E82  79                 	db	121	;'y'
   507  007E83  20                 	db	32
   508  007E84  74                 	db	116	;'t'
   509  007E85  69                 	db	105	;'i'
   510  007E86  6D                 	db	109	;'m'
   511  007E87  65                 	db	101	;'e'
   512  007E88  72                 	db	114	;'r'
   513  007E89  20                 	db	32
   514  007E8A  65                 	db	101	;'e'
   515  007E8B  6E                 	db	110	;'n'
   516  007E8C  64                 	db	100	;'d'
   517  007E8D  65                 	db	101	;'e'
   518  007E8E  64                 	db	100	;'d'
   519  007E8F  00                 	db	0
   520  007E90                     STR_9:
   521  007E90  50                 	db	80	;'P'
   522  007E91  72                 	db	114	;'r'
   523  007E92  65                 	db	101	;'e'
   524  007E93  63                 	db	99	;'c'
   525  007E94  6F                 	db	111	;'o'
   526  007E95  6E                 	db	110	;'n'
   527  007E96  64                 	db	100	;'d'
   528  007E97  69                 	db	105	;'i'
   529  007E98  74                 	db	116	;'t'
   530  007E99  69                 	db	105	;'i'
   531  007E9A  6F                 	db	111	;'o'
   532  007E9B  6E                 	db	110	;'n'
   533  007E9C  20                 	db	32
   534  007E9D  73                 	db	115	;'s'
   535  007E9E  74                 	db	116	;'t'
   536  007E9F  61                 	db	97	;'a'
   537  007EA0  72                 	db	114	;'r'
   538  007EA1  74                 	db	116	;'t'
   539  007EA2  69                 	db	105	;'i'
   540  007EA3  6E                 	db	110	;'n'
   541  007EA4  67                 	db	103	;'g'
   542  007EA5  20                 	db	32
   543  007EA6  66                 	db	102	;'f'
   544  007EA7  61                 	db	97	;'a'
   545  007EA8  69                 	db	105	;'i'
   546  007EA9  6C                 	db	108	;'l'
   547  007EAA  75                 	db	117	;'u'
   548  007EAB  72                 	db	114	;'r'
   549  007EAC  65                 	db	101	;'e'
   550  007EAD  00                 	db	0
   551  007EAE                     STR_8:
   552  007EAE  50                 	db	80	;'P'
   553  007EAF  72                 	db	114	;'r'
   554  007EB0  65                 	db	101	;'e'
   555  007EB1  63                 	db	99	;'c'
   556  007EB2  6F                 	db	111	;'o'
   557  007EB3  6E                 	db	110	;'n'
   558  007EB4  64                 	db	100	;'d'
   559  007EB5  69                 	db	105	;'i'
   560  007EB6  74                 	db	116	;'t'
   561  007EB7  69                 	db	105	;'i'
   562  007EB8  6F                 	db	111	;'o'
   563  007EB9  6E                 	db	110	;'n'
   564  007EBA  20                 	db	32
   565  007EBB  63                 	db	99	;'c'
   566  007EBC  68                 	db	104	;'h'
   567  007EBD  65                 	db	101	;'e'
   568  007EBE  63                 	db	99	;'c'
   569  007EBF  6B                 	db	107	;'k'
   570  007EC0  20                 	db	32
   571  007EC1  66                 	db	102	;'f'
   572  007EC2  61                 	db	97	;'a'
   573  007EC3  69                 	db	105	;'i'
   574  007EC4  6C                 	db	108	;'l'
   575  007EC5  75                 	db	117	;'u'
   576  007EC6  72                 	db	114	;'r'
   577  007EC7  65                 	db	101	;'e'
   578  007EC8  00                 	db	0
   579  007EC9                     STR_2:
   580  007EC9  41                 	db	65	;'A'
   581  007ECA  70                 	db	112	;'p'
   582  007ECB  70                 	db	112	;'p'
   583  007ECC  6C                 	db	108	;'l'
   584  007ECD  69                 	db	105	;'i'
   585  007ECE  63                 	db	99	;'c'
   586  007ECF  61                 	db	97	;'a'
   587  007ED0  74                 	db	116	;'t'
   588  007ED1  69                 	db	105	;'i'
   589  007ED2  6F                 	db	111	;'o'
   590  007ED3  6E                 	db	110	;'n'
   591  007ED4  20                 	db	32
   592  007ED5  69                 	db	105	;'i'
   593  007ED6  6E                 	db	110	;'n'
   594  007ED7  69                 	db	105	;'i'
   595  007ED8  74                 	db	116	;'t'
   596  007ED9  69                 	db	105	;'i'
   597  007EDA  61                 	db	97	;'a'
   598  007EDB  6C                 	db	108	;'l'
   599  007EDC  69                 	db	105	;'i'
   600  007EDD  7A                 	db	122	;'z'
   601  007EDE  65                 	db	101	;'e'
   602  007EDF  64                 	db	100	;'d'
   603  007EE0  00                 	db	0
   604  007EE1                     STR_17:
   605  007EE1  43                 	db	67	;'C'
   606  007EE2  43                 	db	67	;'C'
   607  007EE3  20                 	db	32
   608  007EE4  76                 	db	118	;'v'
   609  007EE5  65                 	db	101	;'e'
   610  007EE6  72                 	db	114	;'r'
   611  007EE7  69                 	db	105	;'i'
   612  007EE8  66                 	db	102	;'f'
   613  007EE9  69                 	db	105	;'i'
   614  007EEA  63                 	db	99	;'c'
   615  007EEB  61                 	db	97	;'a'
   616  007EEC  74                 	db	116	;'t'
   617  007EED  69                 	db	105	;'i'
   618  007EEE  6F                 	db	111	;'o'
   619  007EEF  6E                 	db	110	;'n'
   620  007EF0  20                 	db	32
   621  007EF1  66                 	db	102	;'f'
   622  007EF2  61                 	db	97	;'a'
   623  007EF3  69                 	db	105	;'i'
   624  007EF4  6C                 	db	108	;'l'
   625  007EF5  75                 	db	117	;'u'
   626  007EF6  72                 	db	114	;'r'
   627  007EF7  65                 	db	101	;'e'
   628  007EF8  00                 	db	0
   629  007EF9                     STR_23:
   630  007EF9  43                 	db	67	;'C'
   631  007EFA  56                 	db	86	;'V'
   632  007EFB  20                 	db	32
   633  007EFC  76                 	db	118	;'v'
   634  007EFD  65                 	db	101	;'e'
   635  007EFE  72                 	db	114	;'r'
   636  007EFF  69                 	db	105	;'i'
   637  007F00  66                 	db	102	;'f'
   638  007F01  69                 	db	105	;'i'
   639  007F02  63                 	db	99	;'c'
   640  007F03  61                 	db	97	;'a'
   641  007F04  74                 	db	116	;'t'
   642  007F05  69                 	db	105	;'i'
   643  007F06  6F                 	db	111	;'o'
   644  007F07  6E                 	db	110	;'n'
   645  007F08  20                 	db	32
   646  007F09  66                 	db	102	;'f'
   647  007F0A  61                 	db	97	;'a'
   648  007F0B  69                 	db	105	;'i'
   649  007F0C  6C                 	db	108	;'l'
   650  007F0D  75                 	db	117	;'u'
   651  007F0E  72                 	db	114	;'r'
   652  007F0F  65                 	db	101	;'e'
   653  007F10  00                 	db	0
   654  007F11                     STR_20:
   655  007F11  43                 	db	67	;'C'
   656  007F12  43                 	db	67	;'C'
   657  007F13  20                 	db	32
   658  007F14  73                 	db	115	;'s'
   659  007F15  61                 	db	97	;'a'
   660  007F16  66                 	db	102	;'f'
   661  007F17  65                 	db	101	;'e'
   662  007F18  74                 	db	116	;'t'
   663  007F19  79                 	db	121	;'y'
   664  007F1A  20                 	db	32
   665  007F1B  74                 	db	116	;'t'
   666  007F1C  69                 	db	105	;'i'
   667  007F1D  6D                 	db	109	;'m'
   668  007F1E  65                 	db	101	;'e'
   669  007F1F  72                 	db	114	;'r'
   670  007F20  20                 	db	32
   671  007F21  65                 	db	101	;'e'
   672  007F22  6E                 	db	110	;'n'
   673  007F23  64                 	db	100	;'d'
   674  007F24  65                 	db	101	;'e'
   675  007F25  64                 	db	100	;'d'
   676  007F26  00                 	db	0
   677  007F27                     STR_26:
   678  007F27  43                 	db	67	;'C'
   679  007F28  56                 	db	86	;'V'
   680  007F29  20                 	db	32
   681  007F2A  73                 	db	115	;'s'
   682  007F2B  61                 	db	97	;'a'
   683  007F2C  66                 	db	102	;'f'
   684  007F2D  65                 	db	101	;'e'
   685  007F2E  74                 	db	116	;'t'
   686  007F2F  79                 	db	121	;'y'
   687  007F30  20                 	db	32
   688  007F31  74                 	db	116	;'t'
   689  007F32  69                 	db	105	;'i'
   690  007F33  6D                 	db	109	;'m'
   691  007F34  65                 	db	101	;'e'
   692  007F35  72                 	db	114	;'r'
   693  007F36  20                 	db	32
   694  007F37  65                 	db	101	;'e'
   695  007F38  6E                 	db	110	;'n'
   696  007F39  64                 	db	100	;'d'
   697  007F3A  65                 	db	101	;'e'
   698  007F3B  64                 	db	100	;'d'
   699  007F3C  00                 	db	0
   700  007F3D                     STR_10:
   701  007F3D  43                 	db	67	;'C'
   702  007F3E  43                 	db	67	;'C'
   703  007F3F  20                 	db	32
   704  007F40  73                 	db	115	;'s'
   705  007F41  74                 	db	116	;'t'
   706  007F42  61                 	db	97	;'a'
   707  007F43  72                 	db	114	;'r'
   708  007F44  74                 	db	116	;'t'
   709  007F45  69                 	db	105	;'i'
   710  007F46  6E                 	db	110	;'n'
   711  007F47  67                 	db	103	;'g'
   712  007F48  20                 	db	32
   713  007F49  66                 	db	102	;'f'
   714  007F4A  61                 	db	97	;'a'
   715  007F4B  69                 	db	105	;'i'
   716  007F4C  6C                 	db	108	;'l'
   717  007F4D  75                 	db	117	;'u'
   718  007F4E  72                 	db	114	;'r'
   719  007F4F  65                 	db	101	;'e'
   720  007F50  00                 	db	0
   721  007F51                     STR_22:
   722  007F51  43                 	db	67	;'C'
   723  007F52  56                 	db	86	;'V'
   724  007F53  20                 	db	32
   725  007F54  73                 	db	115	;'s'
   726  007F55  74                 	db	116	;'t'
   727  007F56  61                 	db	97	;'a'
   728  007F57  72                 	db	114	;'r'
   729  007F58  74                 	db	116	;'t'
   730  007F59  69                 	db	105	;'i'
   731  007F5A  6E                 	db	110	;'n'
   732  007F5B  67                 	db	103	;'g'
   733  007F5C  20                 	db	32
   734  007F5D  66                 	db	102	;'f'
   735  007F5E  61                 	db	97	;'a'
   736  007F5F  69                 	db	105	;'i'
   737  007F60  6C                 	db	108	;'l'
   738  007F61  75                 	db	117	;'u'
   739  007F62  72                 	db	114	;'r'
   740  007F63  65                 	db	101	;'e'
   741  007F64  00                 	db	0
   742  007F65                     STR_28:
   743  007F65  43                 	db	67	;'C'
   744  007F66  56                 	db	86	;'V'
   745  007F67  20                 	db	32
   746  007F68  73                 	db	115	;'s'
   747  007F69  74                 	db	116	;'t'
   748  007F6A  6F                 	db	111	;'o'
   749  007F6B  70                 	db	112	;'p'
   750  007F6C  69                 	db	105	;'i'
   751  007F6D  6E                 	db	110	;'n'
   752  007F6E  67                 	db	103	;'g'
   753  007F6F  20                 	db	32
   754  007F70  66                 	db	102	;'f'
   755  007F71  61                 	db	97	;'a'
   756  007F72  69                 	db	105	;'i'
   757  007F73  6C                 	db	108	;'l'
   758  007F74  75                 	db	117	;'u'
   759  007F75  72                 	db	114	;'r'
   760  007F76  65                 	db	101	;'e'
   761  007F77  00                 	db	0
   762  007F78                     STR_7:
   763  007F78  4C                 	db	76	;'L'
   764  007F79  69                 	db	105	;'i'
   765  007F7A  6F                 	db	111	;'o'
   766  007F7B  70                 	db	112	;'p'
   767  007F7C  20                 	db	32
   768  007F7D  63                 	db	99	;'c'
   769  007F7E  68                 	db	104	;'h'
   770  007F7F  65                 	db	101	;'e'
   771  007F80  63                 	db	99	;'c'
   772  007F81  6B                 	db	107	;'k'
   773  007F82  20                 	db	32
   774  007F83  66                 	db	102	;'f'
   775  007F84  61                 	db	97	;'a'
   776  007F85  69                 	db	105	;'i'
   777  007F86  6C                 	db	108	;'l'
   778  007F87  75                 	db	117	;'u'
   779  007F88  72                 	db	114	;'r'
   780  007F89  65                 	db	101	;'e'
   781  007F8A  00                 	db	0
   782  007F8B                     STR_6:
   783  007F8B  50                 	db	80	;'P'
   784  007F8C  72                 	db	114	;'r'
   785  007F8D  6F                 	db	111	;'o'
   786  007F8E  67                 	db	103	;'g'
   787  007F8F  72                 	db	114	;'r'
   788  007F90  61                 	db	97	;'a'
   789  007F91  6D                 	db	109	;'m'
   790  007F92  20                 	db	32
   791  007F93  6C                 	db	108	;'l'
   792  007F94  69                 	db	105	;'i'
   793  007F95  73                 	db	115	;'s'
   794  007F96  74                 	db	116	;'t'
   795  007F97  20                 	db	32
   796  007F98  45                 	db	69	;'E'
   797  007F99  72                 	db	114	;'r'
   798  007F9A  72                 	db	114	;'r'
   799  007F9B  6F                 	db	111	;'o'
   800  007F9C  72                 	db	114	;'r'
   801  007F9D  00                 	db	0
   802  007F9E                     STR_4:
   803  007F9E  42                 	db	66	;'B'
   804  007F9F  61                 	db	97	;'a'
   805  007FA0  74                 	db	116	;'t'
   806  007FA1  74                 	db	116	;'t'
   807  007FA2  65                 	db	101	;'e'
   808  007FA3  72                 	db	114	;'r'
   809  007FA4  79                 	db	121	;'y'
   810  007FA5  20                 	db	32
   811  007FA6  6C                 	db	108	;'l'
   812  007FA7  69                 	db	105	;'i'
   813  007FA8  73                 	db	115	;'s'
   814  007FA9  74                 	db	116	;'t'
   815  007FAA  20                 	db	32
   816  007FAB  45                 	db	69	;'E'
   817  007FAC  72                 	db	114	;'r'
   818  007FAD  72                 	db	114	;'r'
   819  007FAE  6F                 	db	111	;'o'
   820  007FAF  72                 	db	114	;'r'
   821  007FB0  00                 	db	0
   822  007FB1                     STR_5:
   823  007FB1  41                 	db	65	;'A'
   824  007FB2  63                 	db	99	;'c'
   825  007FB3  74                 	db	116	;'t'
   826  007FB4  69                 	db	105	;'i'
   827  007FB5  6F                 	db	111	;'o'
   828  007FB6  6E                 	db	110	;'n'
   829  007FB7  20                 	db	32
   830  007FB8  6C                 	db	108	;'l'
   831  007FB9  69                 	db	105	;'i'
   832  007FBA  73                 	db	115	;'s'
   833  007FBB  74                 	db	116	;'t'
   834  007FBC  20                 	db	32
   835  007FBD  45                 	db	69	;'E'
   836  007FBE  72                 	db	114	;'r'
   837  007FBF  72                 	db	114	;'r'
   838  007FC0  6F                 	db	111	;'o'
   839  007FC1  72                 	db	114	;'r'
   840  007FC2  00                 	db	0
   841  007FC3                     STR_40:
   842  007FC3  30                 	db	48	;'0'
   843  007FC4  31                 	db	49	;'1'
   844  007FC5  32                 	db	50	;'2'
   845  007FC6  33                 	db	51	;'3'
   846  007FC7  34                 	db	52	;'4'
   847  007FC8  35                 	db	53	;'5'
   848  007FC9  36                 	db	54	;'6'
   849  007FCA  37                 	db	55	;'7'
   850  007FCB  38                 	db	56	;'8'
   851  007FCC  39                 	db	57	;'9'
   852  007FCD  61                 	db	97	;'a'
   853  007FCE  62                 	db	98	;'b'
   854  007FCF  63                 	db	99	;'c'
   855  007FD0  64                 	db	100	;'d'
   856  007FD1  65                 	db	101	;'e'
   857  007FD2  66                 	db	102	;'f'
   858  007FD3  00                 	db	0
   859  007FD4                     STR_3:
   860  007FD4  43                 	db	67	;'C'
   861  007FD5  68                 	db	104	;'h'
   862  007FD6  61                 	db	97	;'a'
   863  007FD7  72                 	db	114	;'r'
   864  007FD8  67                 	db	103	;'g'
   865  007FD9  65                 	db	101	;'e'
   866  007FDA  72                 	db	114	;'r'
   867  007FDB  20                 	db	32
   868  007FDC  45                 	db	69	;'E'
   869  007FDD  72                 	db	114	;'r'
   870  007FDE  72                 	db	114	;'r'
   871  007FDF  6F                 	db	111	;'o'
   872  007FE0  72                 	db	114	;'r'
   873  007FE1  00                 	db	0
   874  007FE2                     STR_15:
   875  007FE2  50                 	db	80	;'P'
   876  007FE3  52                 	db	82	;'R'
   877  007FE4  4F                 	db	79	;'O'
   878  007FE5  47                 	db	71	;'G'
   879  007FE6  52                 	db	82	;'R'
   880  007FE7  45                 	db	69	;'E'
   881  007FE8  53                 	db	83	;'S'
   882  007FE9  53                 	db	83	;'S'
   883  007FEA  00                 	db	0
   884  007FEB                     STR_29:
   885  007FEB  4C                 	db	76	;'L'
   886  007FEC  49                 	db	73	;'I'
   887  007FED  50                 	db	80	;'P'
   888  007FEE  4F                 	db	79	;'O'
   889  007FEF  00                 	db	0
   890  007FF0  00                 	db	0
   891  007FF1                     STR_13:
   892  007FF1  54                 	db	84	;'T'
   893  007FF2  49                 	db	73	;'I'
   894  007FF3  4D                 	db	77	;'M'
   895  007FF4  45                 	db	69	;'E'
   896  007FF5  52                 	db	82	;'R'
   897  007FF6  00                 	db	0
   898  007FF7                     STR_12:
   899  007FF7  45                 	db	69	;'E'
   900  007FF8  4E                 	db	78	;'N'
   901  007FF9  44                 	db	68	;'D'
   902  007FFA  00                 	db	0
   903  007FFB                     STR_1:
   904  007FFB  25                 	db	37
   905  007FFC  73                 	db	115	;'s'
   906  007FFD  00                 	db	0
   907  0000                     
   908                           ; #config settings
   909  007FFE  00                 	db	0	; dummy byte at the end
   910  0000                     
   911                           	psect	cinit
   912  003B3C                     __pcinit:
   913                           	opt stack 0
   914  003B3C                     start_initialization:
   915                           	opt stack 0
   916  003B3C                     __initialization:
   917                           	opt stack 0
   918                           
   919                           ; Clear objects allocated to BANK2 (128 bytes)
   920  003B3C  EE02  F000         	lfsr	0,__pbssBANK2
   921  003B40  0E80               	movlw	128
   922  003B42                     clear_0:
   923  003B42  6AEE               	clrf	postinc0,c
   924  003B44  06E8               	decf	wreg,f,c
   925  003B46  E1FD               	bnz	clear_0
   926                           
   927                           ; Clear objects allocated to BANK1 (111 bytes)
   928  003B48  EE01  F000         	lfsr	0,__pbssBANK1
   929  003B4C  0E6F               	movlw	111
   930  003B4E                     clear_1:
   931  003B4E  6AEE               	clrf	postinc0,c
   932  003B50  06E8               	decf	wreg,f,c
   933  003B52  E1FD               	bnz	clear_1
   934                           
   935                           ; Clear objects allocated to BANK0 (86 bytes)
   936  003B54  EE00  F060         	lfsr	0,__pbssBANK0
   937  003B58  0E56               	movlw	86
   938  003B5A                     clear_2:
   939  003B5A  6AEE               	clrf	postinc0,c
   940  003B5C  06E8               	decf	wreg,f,c
   941  003B5E  E1FD               	bnz	clear_2
   942                           
   943                           ; Clear objects allocated to COMRAM (33 bytes)
   944  003B60  EE00  F02D         	lfsr	0,__pbssCOMRAM
   945  003B64  0E21               	movlw	33
   946  003B66                     clear_3:
   947  003B66  6AEE               	clrf	postinc0,c
   948  003B68  06E8               	decf	wreg,f,c
   949  003B6A  E1FD               	bnz	clear_3
   950                           
   951                           ; Initialize objects allocated to BANK1 (15 bytes)
   952                           ; load TBLPTR registers with __pidataBANK1
   953  003B6C  0E46               	movlw	low __pidataBANK1
   954  003B6E  6EF6               	movwf	tblptrl,c
   955  003B70  0E40               	movlw	high __pidataBANK1
   956  003B72  6EF7               	movwf	tblptrh,c
   957  003B74  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   958  003B76  6EF8               	movwf	tblptru,c
   959  003B78  EE01  F092         	lfsr	0,__pdataBANK1
   960  003B7C  EE10 F00F          	lfsr	1,15
   961  003B80                     copy_data0:
   962  003B80  0009               	tblrd		*+
   963  003B82  CFF5 FFEE          	movff	tablat,postinc0
   964  003B86  50E5               	movf	postdec1,w,c
   965  003B88  50E1               	movf	fsr1l,w,c
   966  003B8A  E1FA               	bnz	copy_data0
   967  003B8C                     end_of_initialization:
   968                           	opt stack 0
   969  003B8C                     __end_of__initialization:
   970                           	opt stack 0
   971  003B8C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   972  003B8E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   973  003B90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   974  003B92  6EF8               	movwf	tblptru,c
   975  003B94  0100               	movlb	0
   976  003B96  EF0E  F020         	goto	_main	;jump to C main() function
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986                           	psect	bssCOMRAM
   987  00002D                     __pbssCOMRAM:
   988                           	opt stack 0
   989  00002D                     USBCBSendResume@delay_count:
   990                           	opt stack 0
   991  00002D                     	ds	2
   992  00002F                     _pBDTEntryEP0OutCurrent:
   993                           	opt stack 0
   994  00002F                     	ds	2
   995  000031                     _pBDTEntryEP0OutNext:
   996                           	opt stack 0
   997  000031                     	ds	2
   998  000033                     _pDst:
   999                           	opt stack 0
  1000  000033                     	ds	2
  1001  000035                     _BothEP0OutUOWNsSet:
  1002                           	opt stack 0
  1003  000035                     	ds	1
  1004  000036                     _RemoteWakeup:
  1005                           	opt stack 0
  1006  000036                     	ds	1
  1007  000037                     _USBBusIsSuspended:
  1008                           	opt stack 0
  1009  000037                     	ds	1
  1010  000038                     _USBDeferINDataStagePackets:
  1011                           	opt stack 0
  1012  000038                     	ds	1
  1013  000039                     _USBDeferOUTDataStagePackets:
  1014                           	opt stack 0
  1015  000039                     	ds	1
  1016  00003A                     _USBDeferStatusStagePacket:
  1017                           	opt stack 0
  1018  00003A                     	ds	1
  1019  00003B                     _USBStatusStageEnabledFlag1:
  1020                           	opt stack 0
  1021  00003B                     	ds	1
  1022  00003C                     _USBStatusStageEnabledFlag2:
  1023                           	opt stack 0
  1024  00003C                     	ds	1
  1025  00003D                     _USBStatusStageTimeoutCounter:
  1026                           	opt stack 0
  1027  00003D                     	ds	1
  1028  00003E                     _controlTransferState:
  1029                           	opt stack 0
  1030  00003E                     	ds	1
  1031  00003F                     _control_signal_bitmap:
  1032                           	opt stack 0
  1033  00003F                     	ds	1
  1034  000040                     _endpoint_number:
  1035                           	opt stack 0
  1036  000040                     	ds	1
  1037  000041                     _shortPacketStatus:
  1038                           	opt stack 0
  1039  000041                     	ds	1
  1040  000042                     	ds	1
  1041  000043                     _line_coding:
  1042                           	opt stack 0
  1043  000043                     	ds	7
  1044  00004A                     _USBAlternateInterface:
  1045                           	opt stack 0
  1046  00004A                     	ds	2
  1047  00004C                     _USBActiveConfiguration:
  1048                           	opt stack 0
  1049  00004C                     	ds	1
  1050  00004D                     _USTATcopy:
  1051                           	opt stack 0
  1052  00004D                     	ds	1
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           postdec1	equ	0xFE5
  1060                           fsr1l	equ	0xFE1
  1061                           
  1062                           	psect	bssBANK0
  1063  000060                     __pbssBANK0:
  1064                           	opt stack 0
  1065  000060                     _outPipes:
  1066                           	opt stack 0
  1067  000060                     	ds	8
  1068  000068                     _inPipes:
  1069                           	opt stack 0
  1070  000068                     	ds	6
  1071  00006E                     _pBDTEntryIn:
  1072                           	opt stack 0
  1073  00006E                     	ds	6
  1074  000074                     _pBDTEntryOut:
  1075                           	opt stack 0
  1076  000074                     	ds	6
  1077  00007A                     _BaudRateGen:
  1078                           	opt stack 0
  1079  00007A                     	ds	4
  1080  00007E                     _seconds:
  1081                           	opt stack 0
  1082  00007E                     	ds	4
  1083  000082                     _charge_Time:
  1084                           	opt stack 0
  1085  000082                     	ds	3
  1086  000085                     _ep_data_in:
  1087                           	opt stack 0
  1088  000085                     	ds	3
  1089  000088                     _ep_data_out:
  1090                           	opt stack 0
  1091  000088                     	ds	3
  1092  00008B                     _pCDCDst:
  1093                           	opt stack 0
  1094  00008B                     	ds	3
  1095  00008E                     _pCDCSrc:
  1096                           	opt stack 0
  1097  00008E                     	ds	3
  1098  000091                     _precondition_Time:
  1099                           	opt stack 0
  1100  000091                     	ds	3
  1101  000094                     _CDCDataInHandle:
  1102                           	opt stack 0
  1103  000094                     	ds	2
  1104  000096                     _CDCDataOutHandle:
  1105                           	opt stack 0
  1106  000096                     	ds	2
  1107  000098                     _timeout:
  1108                           	opt stack 0
  1109  000098                     	ds	2
  1110  00009A                     _USBDeviceState:
  1111                           	opt stack 0
  1112  00009A                     	ds	1
  1113  00009B                     _cdc_mem_type:
  1114                           	opt stack 0
  1115  00009B                     	ds	1
  1116  00009C                     _cdc_rx_len:
  1117                           	opt stack 0
  1118  00009C                     	ds	1
  1119  00009D                     _cdc_trf_state:
  1120                           	opt stack 0
  1121  00009D                     	ds	1
  1122  00009E                     _cdc_tx_len:
  1123                           	opt stack 0
  1124  00009E                     	ds	1
  1125  00009F                     _PI:
  1126                           	opt stack 0
  1127  00009F                     	ds	23
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           
  1137                           	psect	bssBANK1
  1138  000100                     __pbssBANK1:
  1139                           	opt stack 0
  1140  000100                     _cdc_notice:
  1141                           	opt stack 0
  1142  000100                     	ds	10
  1143  00010A                     _cur_Action:
  1144                           	opt stack 0
  1145  00010A                     	ds	1
  1146  00010B                     _cur_Program:
  1147                           	opt stack 0
  1148  00010B                     	ds	1
  1149  00010C                     _cur_State:
  1150                           	opt stack 0
  1151  00010C                     	ds	1
  1152  00010D                     _battery:
  1153                           	opt stack 0
  1154  00010D                     	ds	90
  1155  000167                     _dummy_encapsulated_cmd_response:
  1156                           	opt stack 0
  1157  000167                     	ds	8
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           
  1167                           	psect	dataBANK1
  1168  000192                     __pdataBANK1:
  1169                           	opt stack 0
  1170  000192                     _algo_Name:
  1171                           	opt stack 0
  1172  000192                     	ds	15
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           
  1182                           	psect	bssBANK2
  1183  000200                     __pbssBANK2:
  1184                           	opt stack 0
  1185  000200                     	ds	64
  1186  000240                     _usbInBuffer:
  1187                           	opt stack 0
  1188  000240                     	ds	64
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec1	equ	0xFE5
  1196                           fsr1l	equ	0xFE1
  1197                           
  1198                           	psect	cstackBANK2
  1199  000280                     __pcstackBANK2:
  1200                           	opt stack 0
  1201  000280                     APP_CustomCDCTasks@msg_Error:
  1202                           	opt stack 0
  1203                           
  1204                           ; 100 bytes @ 0x0
  1205  000280                     	ds	100
  1206  0002E4                     APP_CustomCDCTasks@end:
  1207                           	opt stack 0
  1208                           
  1209                           ; 10 bytes @ 0x64
  1210  0002E4                     	ds	10
  1211  0002EE                     APP_CustomCDCTasks@precondition:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x6E
  1215  0002EE                     	ds	2
  1216  0002F0                     APP_CustomCDCTasks@res:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x70
  1220  0002F0                     	ds	2
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230                           	psect	cstackBANK1
  1231  00016F                     __pcstackBANK1:
  1232                           	opt stack 0
  1233  00016F                     ?___ftdiv:
  1234                           	opt stack 0
  1235  00016F                     APP_USB_send@args:
  1236                           	opt stack 0
  1237  00016F                     ___ftdiv@f1:
  1238                           	opt stack 0
  1239                           
  1240                           ; 3 bytes @ 0x0
  1241  00016F                     	ds	3
  1242  000172                     ___ftdiv@f2:
  1243                           	opt stack 0
  1244                           
  1245                           ; 3 bytes @ 0x3
  1246  000172                     	ds	3
  1247  000175                     ??___ftdiv:
  1248                           
  1249                           ; 0 bytes @ 0x6
  1250  000175                     	ds	3
  1251  000178                     ___ftdiv@cntr:
  1252                           	opt stack 0
  1253                           
  1254                           ; 1 bytes @ 0x9
  1255  000178                     	ds	1
  1256  000179                     ___ftdiv@f3:
  1257                           	opt stack 0
  1258                           
  1259                           ; 3 bytes @ 0xA
  1260  000179                     	ds	3
  1261  00017C                     ___ftdiv@exp:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0xD
  1265  00017C                     	ds	1
  1266  00017D                     ___ftdiv@sign:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0xE
  1270  00017D                     	ds	1
  1271  00017E                     ?_V_Eval:
  1272                           	opt stack 0
  1273  00017E                     V_Eval@voltage:
  1274                           	opt stack 0
  1275  00017E                     CalcPI@PIdata:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0xF
  1279  00017E                     	ds	2
  1280  000180                     V_Eval@channel:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x11
  1284  000180                     	ds	1
  1285  000181                     V_Eval@temp:
  1286                           	opt stack 0
  1287                           
  1288                           ; 3 bytes @ 0x12
  1289  000181                     	ds	3
  1290  000184                     ?_check_Precondition:
  1291                           	opt stack 0
  1292  000184                     ?_stop_CV:
  1293                           	opt stack 0
  1294  000184                     ?_I_V_Set:
  1295                           	opt stack 0
  1296  000184                     check_Precondition@precondition:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x15
  1300  000184                     	ds	2
  1301  000186                     I_V_Set@channel:
  1302                           	opt stack 0
  1303  000186                     check_Precondition@res:
  1304                           	opt stack 0
  1305  000186                     stop_CV@res:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x17
  1309  000186                     	ds	1
  1310  000187                     I_V_Set@res:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x18
  1314  000187                     	ds	1
  1315  000188                     check_Precondition@voltage:
  1316                           	opt stack 0
  1317  000188                     stop_CV@v_bat:
  1318                           	opt stack 0
  1319                           
  1320                           ; 3 bytes @ 0x19
  1321  000188                     	ds	1
  1322  000189                     I_V_Set@count:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x1A
  1326  000189                     	ds	2
  1327  00018B                     ?_start_Precondition:
  1328                           	opt stack 0
  1329  00018B                     ?_start_CC:
  1330                           	opt stack 0
  1331  00018B                     ?_verifie_Precondition:
  1332                           	opt stack 0
  1333  00018B                     ?_verifie_Vbat:
  1334                           	opt stack 0
  1335  00018B                     ?_start_CV:
  1336                           	opt stack 0
  1337  00018B                     ?_verifie_Ibat:
  1338                           	opt stack 0
  1339  00018B                     verifie_Precondition@end:
  1340                           	opt stack 0
  1341  00018B                     verifie_Vbat@end:
  1342                           	opt stack 0
  1343  00018B                     verifie_Ibat@end:
  1344                           	opt stack 0
  1345  00018B                     stop_CV@voltage:
  1346                           	opt stack 0
  1347                           
  1348                           ; 3 bytes @ 0x1C
  1349  00018B                     	ds	2
  1350  00018D                     start_Precondition@res:
  1351                           	opt stack 0
  1352  00018D                     start_CC@res:
  1353                           	opt stack 0
  1354  00018D                     start_CV@res:
  1355                           	opt stack 0
  1356  00018D                     verifie_Precondition@voltage:
  1357                           	opt stack 0
  1358  00018D                     verifie_Vbat@voltage:
  1359                           	opt stack 0
  1360  00018D                     verifie_Ibat@current:
  1361                           	opt stack 0
  1362                           
  1363                           ; 3 bytes @ 0x1E
  1364  00018D                     	ds	3
  1365  000190                     verifie_Precondition@res:
  1366                           	opt stack 0
  1367  000190                     verifie_Vbat@res:
  1368                           	opt stack 0
  1369  000190                     verifie_Ibat@res:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x21
  1373  000190                     	ds	2
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           postdec1	equ	0xFE5
  1381                           fsr1l	equ	0xFE1
  1382                           
  1383                           	psect	cstackBANK0
  1384  0000B6                     __pcstackBANK0:
  1385                           	opt stack 0
  1386  0000B6                     ??_USBCtrlEPService:
  1387                           
  1388                           ; 0 bytes @ 0x0
  1389  0000B6                     	ds	2
  1390  0000B8                     USBDeviceTasks@i:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x2
  1394  0000B8                     	ds	1
  1395  0000B9                     ??_SYS_InterruptHigh:
  1396                           
  1397                           ; 0 bytes @ 0x3
  1398  0000B9                     	ds	14
  1399  0000C7                     ??_SelChanConvADC:
  1400  0000C7                     ??_isdigit:
  1401  0000C7                     ?_strlen:
  1402                           	opt stack 0
  1403  0000C7                     ?_initialize:
  1404                           	opt stack 0
  1405  0000C7                     ?_list_Battery:
  1406                           	opt stack 0
  1407  0000C7                     ?_list_Action:
  1408                           	opt stack 0
  1409  0000C7                     ?_list_Program:
  1410                           	opt stack 0
  1411  0000C7                     ?_strncmp:
  1412                           	opt stack 0
  1413  0000C7                     ?_check_Lipo:
  1414                           	opt stack 0
  1415  0000C7                     ?_ReadADC:
  1416                           	opt stack 0
  1417  0000C7                     ?_USBTransferOnePacket:
  1418                           	opt stack 0
  1419  0000C7                     ?___wmul:
  1420                           	opt stack 0
  1421  0000C7                     ?___awdiv:
  1422                           	opt stack 0
  1423  0000C7                     ?___lwdiv:
  1424                           	opt stack 0
  1425  0000C7                     ?___ftpack:
  1426                           	opt stack 0
  1427  0000C7                     ?___ftneg:
  1428                           	opt stack 0
  1429  0000C7                     USBTransferOnePacket@dir:
  1430                           	opt stack 0
  1431  0000C7                     OpenADC@config2:
  1432                           	opt stack 0
  1433  0000C7                     OpenTimer1@config:
  1434                           	opt stack 0
  1435  0000C7                     ___wmul@multiplier:
  1436                           	opt stack 0
  1437  0000C7                     ___awdiv@dividend:
  1438                           	opt stack 0
  1439  0000C7                     ___lwdiv@dividend:
  1440                           	opt stack 0
  1441  0000C7                     memset@p1:
  1442                           	opt stack 0
  1443  0000C7                     strcpy@to:
  1444                           	opt stack 0
  1445  0000C7                     strlen@s:
  1446                           	opt stack 0
  1447  0000C7                     strncmp@s1:
  1448                           	opt stack 0
  1449  0000C7                     strncpy@to:
  1450                           	opt stack 0
  1451  0000C7                     ___ftpack@arg:
  1452                           	opt stack 0
  1453  0000C7                     ___ftneg@f1:
  1454                           	opt stack 0
  1455                           
  1456                           ; 3 bytes @ 0x11
  1457  0000C7                     	ds	1
  1458  0000C8                     OpenADC@portconfig:
  1459                           	opt stack 0
  1460  0000C8                     SelChanConvADC@channel:
  1461                           	opt stack 0
  1462  0000C8                     _isdigit$3312:
  1463                           	opt stack 0
  1464  0000C8                     USBTransferOnePacket@data:
  1465                           	opt stack 0
  1466                           
  1467                           ; 2 bytes @ 0x12
  1468  0000C8                     	ds	1
  1469  0000C9                     ??_strlen:
  1470  0000C9                     ??_OpenADC:
  1471  0000C9                     ??_ReadADC:
  1472  0000C9                     isdigit@c:
  1473                           	opt stack 0
  1474  0000C9                     ___wmul@multiplicand:
  1475                           	opt stack 0
  1476  0000C9                     ___awdiv@divisor:
  1477                           	opt stack 0
  1478  0000C9                     ___lwdiv@divisor:
  1479                           	opt stack 0
  1480  0000C9                     memset@c:
  1481                           	opt stack 0
  1482  0000C9                     strcpy@from:
  1483                           	opt stack 0
  1484  0000C9                     strncmp@s2:
  1485                           	opt stack 0
  1486  0000C9                     strncpy@from:
  1487                           	opt stack 0
  1488                           
  1489                           ; 2 bytes @ 0x13
  1490  0000C9                     	ds	1
  1491  0000CA                     USBTransferOnePacket@len:
  1492                           	opt stack 0
  1493  0000CA                     ___ftpack@exp:
  1494                           	opt stack 0
  1495                           
  1496                           ; 1 bytes @ 0x14
  1497  0000CA                     	ds	1
  1498  0000CB                     USBTransferOnePacket@ep:
  1499                           	opt stack 0
  1500  0000CB                     OpenADC@config:
  1501                           	opt stack 0
  1502  0000CB                     ___awdiv@counter:
  1503                           	opt stack 0
  1504  0000CB                     ___ftpack@sign:
  1505                           	opt stack 0
  1506  0000CB                     ___lwdiv@counter:
  1507                           	opt stack 0
  1508  0000CB                     ___wmul@product:
  1509                           	opt stack 0
  1510  0000CB                     memset@n:
  1511                           	opt stack 0
  1512  0000CB                     strcpy@cp:
  1513                           	opt stack 0
  1514  0000CB                     strlen@cp:
  1515                           	opt stack 0
  1516  0000CB                     strncmp@len:
  1517                           	opt stack 0
  1518  0000CB                     strncpy@size:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x15
  1522  0000CB                     	ds	1
  1523  0000CC                     ??___ftpack:
  1524  0000CC                     ___awdiv@sign:
  1525                           	opt stack 0
  1526  0000CC                     USBTransferOnePacket@handle:
  1527                           	opt stack 0
  1528  0000CC                     ___lwdiv@quotient:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x16
  1532  0000CC                     	ds	1
  1533  0000CD                     ??_strncmp:
  1534  0000CD                     putUSBUSART@data:
  1535                           	opt stack 0
  1536  0000CD                     ___awdiv@quotient:
  1537                           	opt stack 0
  1538  0000CD                     memset@p:
  1539                           	opt stack 0
  1540  0000CD                     strncpy@cp:
  1541                           	opt stack 0
  1542                           
  1543                           ; 2 bytes @ 0x17
  1544  0000CD                     	ds	1
  1545  0000CE                     ??_CDCTxService:
  1546  0000CE                     ?_sprintf:
  1547                           	opt stack 0
  1548  0000CE                     sprintf@sp:
  1549                           	opt stack 0
  1550                           
  1551                           ; 2 bytes @ 0x18
  1552  0000CE                     	ds	1
  1553  0000CF                     ?_calc_Time:
  1554                           	opt stack 0
  1555  0000CF                     ?___awtoft:
  1556                           	opt stack 0
  1557  0000CF                     ?___lwtoft:
  1558                           	opt stack 0
  1559  0000CF                     SYSTEM_Initialize@state:
  1560                           	opt stack 0
  1561  0000CF                     USBDeviceInit@i:
  1562                           	opt stack 0
  1563  0000CF                     putUSBUSART@length:
  1564                           	opt stack 0
  1565  0000CF                     _CDCTxService$2649:
  1566                           	opt stack 0
  1567  0000CF                     ___awtoft@c:
  1568                           	opt stack 0
  1569  0000CF                     ___lwtoft@c:
  1570                           	opt stack 0
  1571  0000CF                     calc_Time@initial:
  1572                           	opt stack 0
  1573                           
  1574                           ; 4 bytes @ 0x19
  1575  0000CF                     	ds	1
  1576  0000D0                     sprintf@f:
  1577                           	opt stack 0
  1578                           
  1579                           ; 2 bytes @ 0x1A
  1580  0000D0                     	ds	1
  1581  0000D1                     CDCTxService@i:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x1B
  1585  0000D1                     	ds	1
  1586  0000D2                     CDCTxService@byte_to_send:
  1587                           	opt stack 0
  1588  0000D2                     ___awtoft@sign:
  1589                           	opt stack 0
  1590                           
  1591                           ; 1 bytes @ 0x1C
  1592  0000D2                     	ds	1
  1593  0000D3                     ??_calc_Time:
  1594  0000D3                     ?___ftmul:
  1595                           	opt stack 0
  1596  0000D3                     ___ftmul@f1:
  1597                           	opt stack 0
  1598                           
  1599                           ; 3 bytes @ 0x1D
  1600  0000D3                     	ds	1
  1601  0000D4                     ??_sprintf:
  1602                           
  1603                           ; 0 bytes @ 0x1E
  1604  0000D4                     	ds	1
  1605  0000D5                     calc_Time@interval:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0x1F
  1609  0000D5                     	ds	1
  1610  0000D6                     ___ftmul@f2:
  1611                           	opt stack 0
  1612                           
  1613                           ; 3 bytes @ 0x20
  1614  0000D6                     	ds	2
  1615  0000D8                     sprintf@idx:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0x22
  1619  0000D8                     	ds	1
  1620  0000D9                     ??___ftmul:
  1621  0000D9                     sprintf@ap:
  1622                           	opt stack 0
  1623                           
  1624                           ; 2 bytes @ 0x23
  1625  0000D9                     	ds	2
  1626  0000DB                     sprintf@cp:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x25
  1630  0000DB                     	ds	1
  1631  0000DC                     ___ftmul@exp:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x26
  1635  0000DC                     	ds	1
  1636  0000DD                     sprintf@val:
  1637                           	opt stack 0
  1638  0000DD                     ___ftmul@f3_as_product:
  1639                           	opt stack 0
  1640                           
  1641                           ; 3 bytes @ 0x27
  1642  0000DD                     	ds	2
  1643  0000DF                     sprintf@len:
  1644                           	opt stack 0
  1645                           
  1646                           ; 2 bytes @ 0x29
  1647  0000DF                     	ds	1
  1648  0000E0                     ___ftmul@cntr:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x2A
  1652  0000E0                     	ds	1
  1653  0000E1                     ___ftmul@sign:
  1654                           	opt stack 0
  1655  0000E1                     sprintf@flag:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x2B
  1659  0000E1                     	ds	1
  1660  0000E2                     ?___ftadd:
  1661                           	opt stack 0
  1662  0000E2                     ___ftadd@f1:
  1663                           	opt stack 0
  1664  0000E2                     ___ftge@ff1:
  1665                           	opt stack 0
  1666                           
  1667                           ; 3 bytes @ 0x2C
  1668  0000E2                     	ds	1
  1669  0000E3                     sprintf@width:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x2D
  1673  0000E3                     	ds	2
  1674  0000E5                     sprintf@prec:
  1675                           	opt stack 0
  1676  0000E5                     ___ftadd@f2:
  1677                           	opt stack 0
  1678  0000E5                     ___ftge@ff2:
  1679                           	opt stack 0
  1680                           
  1681                           ; 3 bytes @ 0x2F
  1682  0000E5                     	ds	1
  1683  0000E6                     sprintf@c:
  1684                           	opt stack 0
  1685                           
  1686                           ; 1 bytes @ 0x30
  1687  0000E6                     	ds	1
  1688  0000E7                     ?_APP_USB_send:
  1689                           	opt stack 0
  1690  0000E7                     APP_USB_send@format:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x31
  1694  0000E7                     	ds	1
  1695  0000E8                     ??___ftadd:
  1696  0000E8                     ??___ftge:
  1697                           
  1698                           ; 0 bytes @ 0x32
  1699  0000E8                     	ds	3
  1700  0000EB                     ___ftadd@sign:
  1701                           	opt stack 0
  1702                           
  1703                           ; 1 bytes @ 0x35
  1704  0000EB                     	ds	1
  1705  0000EC                     ___ftadd@exp2:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x36
  1709  0000EC                     	ds	1
  1710  0000ED                     ___ftadd@exp1:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x37
  1714  0000ED                     	ds	1
  1715  0000EE                     tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1l	equ	0xFE1
  1723                           
  1724                           ; 0 bytes @ 0x38
  1725                           
  1726                           	psect	cstackCOMRAM
  1727  000001                     __pcstackCOMRAM:
  1728                           	opt stack 0
  1729  000001                     ??_SYS_InterruptLow:
  1730  000001                     
  1731                           ; 1 bytes @ 0x0
  1732  000001                     	ds	17
  1733  000012                     ??_USBStdGetDscHandler:
  1734  000012                     ??_USBStdGetStatusHandler:
  1735  000012                     ?i2_USBTransferOnePacket:
  1736                           	opt stack 0
  1737  000012                     USBConfigureEndpoint@direction:
  1738                           	opt stack 0
  1739  000012                     USBCtrlTrfTxService@byteToSend:
  1740                           	opt stack 0
  1741  000012                     USBCtrlTrfRxService@i:
  1742                           	opt stack 0
  1743  000012                     i2USBTransferOnePacket@dir:
  1744                           	opt stack 0
  1745  000012                     i2memset@p1:
  1746                           	opt stack 0
  1747                           
  1748                           ; 2 bytes @ 0x11
  1749  000012                     	ds	1
  1750  000013                     ??_USBConfigureEndpoint:
  1751  000013                     USBCtrlTrfRxService@byteToRead:
  1752                           	opt stack 0
  1753  000013                     USBCtrlTrfInHandler@lastDTS:
  1754                           	opt stack 0
  1755  000013                     USBStdGetStatusHandler@p:
  1756                           	opt stack 0
  1757  000013                     i2USBTransferOnePacket@data:
  1758                           	opt stack 0
  1759                           
  1760                           ; 2 bytes @ 0x12
  1761  000013                     	ds	1
  1762  000014                     i2memset@c:
  1763                           	opt stack 0
  1764                           
  1765                           ; 2 bytes @ 0x13
  1766  000014                     	ds	1
  1767  000015                     i2USBTransferOnePacket@len:
  1768                           	opt stack 0
  1769                           
  1770                           ; 1 bytes @ 0x14
  1771  000015                     	ds	1
  1772  000016                     i2USBTransferOnePacket@ep:
  1773                           	opt stack 0
  1774  000016                     i2memset@n:
  1775                           	opt stack 0
  1776                           
  1777                           ; 2 bytes @ 0x15
  1778  000016                     	ds	1
  1779  000017                     USBConfigureEndpoint@EPNum:
  1780                           	opt stack 0
  1781  000017                     i2USBTransferOnePacket@handle:
  1782                           	opt stack 0
  1783                           
  1784                           ; 2 bytes @ 0x16
  1785  000017                     	ds	1
  1786  000018                     USBConfigureEndpoint@handle:
  1787                           	opt stack 0
  1788  000018                     i2memset@p:
  1789                           	opt stack 0
  1790                           
  1791                           ; 2 bytes @ 0x17
  1792  000018                     	ds	2
  1793  00001A                     USBEnableEndpoint@options:
  1794                           	opt stack 0
  1795  00001A                     i2USBDeviceInit@i:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x19
  1799  00001A                     	ds	1
  1800  00001B                     USBEnableEndpoint@p:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x1A
  1804  00001B                     	ds	2
  1805  00001D                     USBEnableEndpoint@ep:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x1C
  1809  00001D                     	ds	1
  1810  00001E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x1D
  1814  00001E                     	ds	2
  1815  000020                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1816                           	opt stack 0
  1817                           
  1818                           ; 2 bytes @ 0x1F
  1819  000020                     	ds	2
  1820  000022                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1821                           	opt stack 0
  1822                           
  1823                           ; 2 bytes @ 0x21
  1824  000022                     	ds	2
  1825  000024                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1826                           
  1827                           ; 0 bytes @ 0x23
  1828  000024                     	ds	2
  1829  000026                     ??_USBStdFeatureReqHandler:
  1830  000026                     USBStdSetCfgHandler@i:
  1831                           	opt stack 0
  1832                           
  1833                           ; 1 bytes @ 0x25
  1834  000026                     	ds	1
  1835  000027                     USBStdFeatureReqHandler@pUEP:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x26
  1839  000027                     	ds	2
  1840  000029                     USBStdFeatureReqHandler@current_ep_data:
  1841                           	opt stack 0
  1842                           
  1843                           ; 1 bytes @ 0x28
  1844  000029                     	ds	1
  1845  00002A                     USBStdFeatureReqHandler@p:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x29
  1849  00002A                     	ds	2
  1850  00002C                     USBCtrlEPService@setup_cnt:
  1851                           	opt stack 0
  1852                           
  1853                           ; 1 bytes @ 0x2B
  1854  00002C                     	ds	1
  1855  00002D                     tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           
  1864                           ; 0 bytes @ 0x2C
  1865 ;;
  1866 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1867 ;;
  1868 ;; *************** function _main *****************
  1869 ;; Defined at:
  1870 ;;		line 50 in file "main_cdc.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels required when called:   18
  1890 ;; This function calls:
  1891 ;;		_APP_CustomCDCTasks
  1892 ;;		_CDCTxService
  1893 ;;		_SYSTEM_Initialize
  1894 ;;		_USBDeviceAttach
  1895 ;;		_USBDeviceInit
  1896 ;; This function is called by:
  1897 ;;		Startup code after reset
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text0
  1902  00401C                     __ptext0:
  1903                           	opt stack 0
  1904  00401C                     _main:
  1905                           	opt stack 13
  1906                           
  1907                           ;main_cdc.c: 52: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1908                           
  1909                           ;incstack = 0
  1910  00401C  0E00               	movlw	0
  1911  00401E  ECFE  F01F         	call	_SYSTEM_Initialize
  1912                           
  1913                           ;main_cdc.c: 54: USBDeviceInit();
  1914  004022  ECC2  F00E         	call	_USBDeviceInit	;wreg free
  1915                           
  1916                           ;main_cdc.c: 56: USBDeviceAttach();
  1917  004026  EC0A  F01F         	call	_USBDeviceAttach	;wreg free
  1918  00402A                     l8848:
  1919                           
  1920                           ;main_cdc.c: 60: {
  1921                           ;main_cdc.c: 61: ;
  1922                           ;main_cdc.c: 64: APP_CustomCDCTasks();
  1923  00402A  EC55  F000         	call	_APP_CustomCDCTasks	;wreg free
  1924                           
  1925                           ;main_cdc.c: 66: CDCTxService();
  1926  00402E  EC03  F00B         	call	_CDCTxService	;wreg free
  1927  004032  D7FB               	goto	l8848
  1928  004034                     __end_of_main:
  1929                           	opt stack 0
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           postdec1	equ	0xFE5
  1937                           fsr1l	equ	0xFE1
  1938                           
  1939 ;; *************** function _USBDeviceInit *****************
  1940 ;; Defined at:
  1941 ;;		line 298 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  i               1   25[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:   13
  1962 ;; This function calls:
  1963 ;;		_memset
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text1
  1970  001D84                     __ptext1:
  1971                           	opt stack 0
  1972  001D84                     _USBDeviceInit:
  1973                           	opt stack 17
  1974                           
  1975                           ;usb_device.c: 300: uint8_t i;
  1976                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  1977                           
  1978                           ;incstack = 0
  1979  001D84  9AA0               	bcf	4000,5,c	;volatile
  1980                           
  1981                           ;usb_device.c: 305: {UEIR = 0;};
  1982  001D86  0E00               	movlw	0
  1983  001D88  6E6A               	movwf	3946,c	;volatile
  1984                           
  1985                           ;usb_device.c: 308: {UIR = 0;};
  1986  001D8A  0E00               	movlw	0
  1987  001D8C  6E68               	movwf	3944,c	;volatile
  1988                           
  1989                           ;usb_device.c: 311: UEP0 = 0;
  1990  001D8E  0E00               	movlw	0
  1991  001D90  6E70               	movwf	3952,c	;volatile
  1992                           
  1993                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  1994  001D92  0E71               	movlw	113
  1995  001D94  0100               	movlb	0	; () banked
  1996  001D96  6FC7               	movwf	memset@p1& (0+255),b
  1997  001D98  0E0F               	movlw	15
  1998  001D9A  0100               	movlb	0	; () banked
  1999  001D9C  6FC8               	movwf	(memset@p1+1)& (0+255),b
  2000  001D9E  0E00               	movlw	0
  2001  001DA0  0100               	movlb	0	; () banked
  2002  001DA2  6FCA               	movwf	(memset@c+1)& (0+255),b
  2003  001DA4  0E00               	movlw	0
  2004  001DA6  6FC9               	movwf	memset@c& (0+255),b
  2005  001DA8  0E00               	movlw	0
  2006  001DAA  0100               	movlb	0	; () banked
  2007  001DAC  6FCC               	movwf	(memset@n+1)& (0+255),b
  2008  001DAE  0E02               	movlw	2
  2009  001DB0  6FCB               	movwf	memset@n& (0+255),b
  2010  001DB2  ECF0  F01E         	call	_memset	;wreg free
  2011                           
  2012                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2013  001DB6  0E16               	movlw	22
  2014  001DB8  6E6F               	movwf	3951,c	;volatile
  2015  001DBA  0E9F               	movlw	159
  2016  001DBC  6E6B               	movwf	3947,c	;volatile
  2017  001DBE  0E7B               	movlw	123
  2018  001DC0  6E69               	movwf	3945,c	;volatile
  2019                           
  2020                           ;usb_device.c: 318: ;
  2021                           ;usb_device.c: 321: ;
  2022                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2023  001DC2  0E00               	movlw	0
  2024  001DC4  0100               	movlb	0	; () banked
  2025  001DC6  6FCF               	movwf	USBDeviceInit@i& (0+255),b
  2026  001DC8                     l6386:
  2027                           
  2028                           ; BSR set to: 0
  2029  001DC8  0E0B               	movlw	11
  2030  001DCA  0100               	movlb	0	; () banked
  2031  001DCC  65CF               	cpfsgt	USBDeviceInit@i& (0+255),b
  2032  001DCE  D001               	goto	l6390
  2033  001DD0  D010               	goto	l600
  2034  001DD2                     l6390:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;usb_device.c: 325: {
  2038                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  2039  001DD2  0100               	movlb	0	; () banked
  2040  001DD4  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  2041  001DD6  0D04               	mullw	4
  2042  001DD8  0E00               	movlw	0
  2043  001DDA  24F3               	addwf	prodl,w,c
  2044  001DDC  6ED9               	movwf	fsr2l,c
  2045  001DDE  0E04               	movlw	4
  2046  001DE0  20F4               	addwfc	prodh,w,c
  2047  001DE2  6EDA               	movwf	fsr2h,c
  2048  001DE4  6ADE               	clrf	postinc2,c
  2049  001DE6  6ADE               	clrf	postinc2,c
  2050  001DE8  6ADE               	clrf	postinc2,c
  2051  001DEA  6ADD               	clrf	postdec2,c
  2052                           
  2053                           ; BSR set to: 0
  2054  001DEC  0100               	movlb	0	; () banked
  2055  001DEE  2BCF               	incf	USBDeviceInit@i& (0+255),f,b
  2056  001DF0  D7EB               	goto	l6386
  2057  001DF2                     l600:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;usb_device.c: 327: }
  2061                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  2062  001DF2  8C6D               	bsf	3949,6,c	;volatile
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;usb_device.c: 333: UADDR = 0x00;
  2066  001DF4  0E00               	movlw	0
  2067  001DF6  6E6E               	movwf	3950,c	;volatile
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  2071  001DF8  986D               	bcf	3949,4,c	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  2075  001DFA  9C6D               	bcf	3949,6,c	;volatile
  2076                           
  2077                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  2078  001DFC  D00C               	goto	l6410
  2079  001DFE                     l6402:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;usb_device.c: 343: {
  2083                           ;usb_device.c: 344: (UIR &= 0xF7);
  2084  001DFE  9668               	bcf	3944,3,c	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  2088  001E00  0E00               	movlw	0
  2089  001E02  0100               	movlb	0	; () banked
  2090  001E04  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  2094  001E06  0E00               	movlw	0
  2095  001E08  0100               	movlb	0	; () banked
  2096  001E0A  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  2100  001E0C  0E00               	movlw	0
  2101  001E0E  0100               	movlb	0	; () banked
  2102  001E10  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
  2103  001E12  0E00               	movlw	0
  2104  001E14  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
  2105  001E16                     l6410:
  2106                           
  2107                           ; BSR set to: 0
  2108  001E16  B668               	btfsc	3944,3,c	;volatile
  2109  001E18  D7F2               	goto	l6402
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;usb_device.c: 349: }
  2113                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  2114                           
  2115                           ; BSR set to: 0
  2116  001E1A  0E01               	movlw	1
  2117  001E1C  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  2118                           
  2119                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  2120  001E1E  0E01               	movlw	1
  2121  001E20  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  2122                           
  2123                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  2124  001E22  0E00               	movlw	0
  2125  001E24  6E38               	movwf	_USBDeferINDataStagePackets,c	;volatile
  2126                           
  2127                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  2128  001E26  0E00               	movlw	0
  2129  001E28  6E39               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  2130                           
  2131                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  2132  001E2A  0E00               	movlw	0
  2133  001E2C  6E37               	movwf	_USBBusIsSuspended,c	;volatile
  2134                           
  2135                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  2136  001E2E  0E00               	movlw	0
  2137  001E30  0100               	movlb	0	; () banked
  2138  001E32  6FCF               	movwf	USBDeviceInit@i& (0+255),b
  2139  001E34                     l6414:
  2140                           
  2141                           ; BSR set to: 0
  2142  001E34  0E02               	movlw	2
  2143  001E36  0100               	movlb	0	; () banked
  2144  001E38  65CF               	cpfsgt	USBDeviceInit@i& (0+255),b
  2145  001E3A  D001               	goto	l6418
  2146  001E3C  D033               	goto	l6424
  2147  001E3E                     l6418:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;usb_device.c: 363: {
  2151                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  2152  001E3E  0100               	movlb	0	; () banked
  2153  001E40  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  2154  001E42  0D02               	mullw	2
  2155  001E44  0E6E               	movlw	low _pBDTEntryIn
  2156  001E46  24F3               	addwf	prodl,w,c
  2157  001E48  6ED9               	movwf	fsr2l,c
  2158  001E4A  0E00               	movlw	high _pBDTEntryIn
  2159  001E4C  20F4               	addwfc	prodh,w,c
  2160  001E4E  6EDA               	movwf	fsr2h,c
  2161  001E50  0E00               	movlw	0
  2162  001E52  6EDE               	movwf	postinc2,c
  2163  001E54  0E00               	movlw	0
  2164  001E56  6EDD               	movwf	postdec2,c
  2165                           
  2166                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  2167  001E58  0100               	movlb	0	; () banked
  2168  001E5A  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  2169  001E5C  0D02               	mullw	2
  2170  001E5E  0E74               	movlw	low _pBDTEntryOut
  2171  001E60  24F3               	addwf	prodl,w,c
  2172  001E62  6ED9               	movwf	fsr2l,c
  2173  001E64  0E00               	movlw	high _pBDTEntryOut
  2174  001E66  20F4               	addwfc	prodh,w,c
  2175  001E68  6EDA               	movwf	fsr2h,c
  2176  001E6A  0E00               	movlw	0
  2177  001E6C  6EDE               	movwf	postinc2,c
  2178  001E6E  0E00               	movlw	0
  2179  001E70  6EDD               	movwf	postdec2,c
  2180                           
  2181                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  2182  001E72  0100               	movlb	0	; () banked
  2183  001E74  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  2184  001E76  0D01               	mullw	1
  2185  001E78  0E85               	movlw	low _ep_data_in
  2186  001E7A  24F3               	addwf	prodl,w,c
  2187  001E7C  6ED9               	movwf	fsr2l,c
  2188  001E7E  0E00               	movlw	high _ep_data_in
  2189  001E80  20F4               	addwfc	prodh,w,c
  2190  001E82  6EDA               	movwf	fsr2h,c
  2191  001E84  0E00               	movlw	0
  2192  001E86  6EDF               	movwf	indf2,c
  2193                           
  2194                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  2195  001E88  0100               	movlb	0	; () banked
  2196  001E8A  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  2197  001E8C  0D01               	mullw	1
  2198  001E8E  0E88               	movlw	low _ep_data_out
  2199  001E90  24F3               	addwf	prodl,w,c
  2200  001E92  6ED9               	movwf	fsr2l,c
  2201  001E94  0E00               	movlw	high _ep_data_out
  2202  001E96  20F4               	addwfc	prodh,w,c
  2203  001E98  6EDA               	movwf	fsr2h,c
  2204  001E9A  0E00               	movlw	0
  2205  001E9C  6EDF               	movwf	indf2,c
  2206                           
  2207                           ; BSR set to: 0
  2208  001E9E  0100               	movlb	0	; () banked
  2209  001EA0  2BCF               	incf	USBDeviceInit@i& (0+255),f,b
  2210  001EA2  D7C8               	goto	l6414
  2211  001EA4                     l6424:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;usb_device.c: 368: }
  2215                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2216  001EA4  0E08               	movlw	8
  2217  001EA6  0100               	movlb	0	; () banked
  2218  001EA8  6F6E               	movwf	_pBDTEntryIn& (0+255),b
  2219  001EAA  0E04               	movlw	4
  2220  001EAC  0100               	movlb	0	; () banked
  2221  001EAE  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  2225  001EB0  0E16               	movlw	22
  2226  001EB2  6E70               	movwf	3952,c	;volatile
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  2230  001EB4  0E04               	movlw	4
  2231  001EB6  0104               	movlb	4	; () banked
  2232  001EB8  6F03               	movwf	3,b	;volatile
  2233  001EBA  0E30               	movlw	48
  2234  001EBC  6F02               	movwf	2,b	;volatile
  2235                           
  2236                           ; BSR set to: 4
  2237                           ;usb_device.c: 376: BDT[0].CNT = 8;
  2238  001EBE  0E08               	movlw	8
  2239  001EC0  0104               	movlb	4	; () banked
  2240  001EC2  6F01               	movwf	1,b	;volatile
  2241                           
  2242                           ; BSR set to: 4
  2243                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  2244  001EC4  0E04               	movlw	4
  2245  001EC6  0104               	movlb	4	; () banked
  2246  001EC8  6F00               	movwf	0,b	;volatile
  2247                           
  2248                           ; BSR set to: 4
  2249                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  2250  001ECA  0104               	movlb	4	; () banked
  2251  001ECC  8F00               	bsf	0,7,b	;volatile
  2252                           
  2253                           ; BSR set to: 4
  2254                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  2255  001ECE  0E00               	movlw	0
  2256  001ED0  6E4C               	movwf	_USBActiveConfiguration,c	;volatile
  2257                           
  2258                           ; BSR set to: 4
  2259                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  2260  001ED2  0E00               	movlw	0
  2261  001ED4  0100               	movlb	0	; () banked
  2262  001ED6  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
  2263                           
  2264                           ; BSR set to: 0
  2265  001ED8  0012               	return		;funcret
  2266  001EDA                     __end_of_USBDeviceInit:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           prodh	equ	0xFF4
  2273                           prodl	equ	0xFF3
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           postinc2	equ	0xFDE
  2280                           postdec2	equ	0xFDD
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           
  2284 ;; *************** function _memset *****************
  2285 ;; Defined at:
  2286 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\memset.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  p1              2   17[BANK0 ] PTR void 
  2289 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  2290 ;;  c               2   19[BANK0 ] int 
  2291 ;;  n               2   21[BANK0 ] unsigned int 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  p               2   23[BANK0 ] PTR unsigned char 
  2294 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2   17[BANK0 ] PTR void 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         0       6       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        8 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:   12
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_USBDeviceInit
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text2
  2319  003DE0                     __ptext2:
  2320                           	opt stack 0
  2321  003DE0                     _memset:
  2322                           	opt stack 17
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;incstack = 0
  2326  003DE0  C0C7  F0CD         	movff	memset@p1,memset@p
  2327  003DE4  C0C8  F0CE         	movff	memset@p1+1,memset@p+1
  2328  003DE8  D009               	goto	l5870
  2329  003DEA                     l5866:
  2330  003DEA  C0CD  FFD9         	movff	memset@p,fsr2l
  2331  003DEE  C0CE  FFDA         	movff	memset@p+1,fsr2h
  2332  003DF2  C0C9  FFDF         	movff	memset@c,indf2
  2333  003DF6  0100               	movlb	0	; () banked
  2334  003DF8  4BCD               	infsnz	memset@p& (0+255),f,b
  2335  003DFA  2BCE               	incf	(memset@p+1)& (0+255),f,b
  2336  003DFC                     l5870:
  2337  003DFC  0100               	movlb	0	; () banked
  2338  003DFE  07CB               	decf	memset@n& (0+255),f,b
  2339  003E00  A0D8               	btfss	status,0,c
  2340  003E02  07CC               	decf	(memset@n+1)& (0+255),f,b
  2341  003E04  0100               	movlb	0	; () banked
  2342  003E06  29CB               	incf	memset@n& (0+255),w,b
  2343  003E08  E1F0               	bnz	l5866
  2344  003E0A  0100               	movlb	0	; () banked
  2345  003E0C  29CC               	incf	(memset@n+1)& (0+255),w,b
  2346  003E0E  B4D8               	btfsc	status,2,c
  2347  003E10  0012               	return	
  2348  003E12  D7EB               	goto	l5866
  2349  003E14                     __end_of_memset:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           postinc2	equ	0xFDE
  2363                           postdec2	equ	0xFDD
  2364                           fsr2h	equ	0xFDA
  2365                           fsr2l	equ	0xFD9
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _USBDeviceAttach *****************
  2369 ;; Defined at:
  2370 ;;		line 1352 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, status,2
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:   12
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text3
  2399  003E14                     __ptext3:
  2400                           	opt stack 0
  2401  003E14                     _USBDeviceAttach:
  2402                           	opt stack 18
  2403                           
  2404                           ;usb_device.c: 1356: {
  2405                           ;usb_device.c: 1357: if(1 == 1)
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;incstack = 0
  2409  003E14  0100               	movlb	0	; () banked
  2410  003E16  519A               	movf	_USBDeviceState& (0+255),w,b	;volatile
  2411  003E18  A4D8               	btfss	status,2,c
  2412  003E1A  0012               	return	
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;usb_device.c: 1358: {
  2416                           ;usb_device.c: 1360: UCON = 0;
  2417  003E1C  0E00               	movlw	0
  2418  003E1E  6E6D               	movwf	3949,c	;volatile
  2419                           
  2420                           ;usb_device.c: 1363: UIE = 0;
  2421  003E20  0E00               	movlw	0
  2422  003E22  6E69               	movwf	3945,c	;volatile
  2423                           
  2424                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2425  003E24  0E16               	movlw	22
  2426  003E26  6E6F               	movwf	3951,c	;volatile
  2427  003E28  0E9F               	movlw	159
  2428  003E2A  6E6B               	movwf	3947,c	;volatile
  2429  003E2C  0E7B               	movlw	123
  2430  003E2E  6E69               	movwf	3945,c	;volatile
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  2434  003E30  8ED0               	bsf	4048,7,c	;volatile
  2435                           
  2436                           ; BSR set to: 0
  2437  003E32  8AA2               	bsf	4002,5,c	;volatile
  2438                           
  2439                           ; BSR set to: 0
  2440  003E34  8AA0               	bsf	4000,5,c	;volatile
  2441                           
  2442                           ; BSR set to: 0
  2443  003E36  8EF2               	bsf	intcon,7,c	;volatile
  2444                           
  2445                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2446  003E38  D001               	goto	l661
  2447  003E3A                     l662:
  2448  003E3A  866D               	bsf	3949,3,c	;volatile
  2449  003E3C                     l661:
  2450  003E3C  A66D               	btfss	3949,3,c	;volatile
  2451  003E3E  D7FD               	goto	l662
  2452                           
  2453                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2454  003E40  0E01               	movlw	1
  2455  003E42  0100               	movlb	0	; () banked
  2456  003E44  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
  2457                           
  2458                           ; BSR set to: 0
  2459  003E46  0012               	return	
  2460  003E48                     __end_of_USBDeviceAttach:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodh	equ	0xFF4
  2467                           prodl	equ	0xFF3
  2468                           intcon	equ	0xFF2
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1l	equ	0xFE1
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _SYSTEM_Initialize *****************
  2481 ;; Defined at:
  2482 ;;		line 52 in file "system.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  state           1    wreg     enum E4737
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  state           1   25[BANK0 ] enum E4737
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0
  2497 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:   14
  2503 ;; This function calls:
  2504 ;;		_InitCharger
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text4
  2511  003FFC                     __ptext4:
  2512                           	opt stack 0
  2513  003FFC                     _SYSTEM_Initialize:
  2514                           	opt stack 16
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;incstack = 0
  2518                           ;SYSTEM_Initialize@state stored from wreg
  2519  003FFC  0100               	movlb	0	; () banked
  2520  003FFE  6FCF               	movwf	SYSTEM_Initialize@state& (0+255),b
  2521                           
  2522                           ;system.c: 54: switch(state)
  2523  004000  D003               	goto	l8568
  2524  004002                     l8564:
  2525                           
  2526                           ;system.c: 57: InitCharger();
  2527  004002  ECAD  F01A         	call	_InitCharger	;wreg free
  2528                           
  2529                           ;system.c: 65: }
  2530                           
  2531                           ;system.c: 64: break;
  2532                           
  2533                           ;system.c: 63: case SYSTEM_STATE_USB_RESUME:
  2534                           
  2535                           ;system.c: 61: break;
  2536                           
  2537                           ;system.c: 60: case SYSTEM_STATE_USB_SUSPEND:
  2538                           
  2539                           ;system.c: 58: break;
  2540  004006  0012               	return	
  2541  004008                     l8568:
  2542  004008  0100               	movlb	0	; () banked
  2543  00400A  51CF               	movf	SYSTEM_Initialize@state& (0+255),w,b
  2544                           
  2545                           ; Switch size 1, requested type "space"
  2546                           ; Number of cases is 3, Range of values is 0 to 2
  2547                           ; switch strategies available:
  2548                           ; Name         Instructions Cycles
  2549                           ; simple_byte           10     6 (average)
  2550                           ;	Chosen strategy is simple_byte
  2551  00400C  0A00               	xorlw	0	; case 0
  2552  00400E  B4D8               	btfsc	status,2,c
  2553  004010  D7F8               	goto	l8564
  2554  004012  0A01               	xorlw	1	; case 1
  2555  004014  B4D8               	btfsc	status,2,c
  2556  004016  0012               	return	
  2557  004018  0A03               	xorlw	3	; case 2
  2558  00401A  0012               	return	
  2559  00401C                     __end_of_SYSTEM_Initialize:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           postinc2	equ	0xFDE
  2574                           postdec2	equ	0xFDD
  2575                           fsr2h	equ	0xFDA
  2576                           fsr2l	equ	0xFD9
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _InitCharger *****************
  2580 ;; Defined at:
  2581 ;;		line 51 in file "user.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:   13
  2602 ;; This function calls:
  2603 ;;		_OpenADC
  2604 ;;		_OpenTimer1
  2605 ;;		_strncpy
  2606 ;; This function is called by:
  2607 ;;		_SYSTEM_Initialize
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text5
  2612  00355A                     __ptext5:
  2613                           	opt stack 0
  2614  00355A                     _InitCharger:
  2615                           	opt stack 16
  2616                           
  2617                           ;user.c: 53: cur_State = LIPO_ALGO_STARTED;
  2618                           
  2619                           ;incstack = 0
  2620  00355A  0E0B               	movlw	11
  2621  00355C  0101               	movlb	1	; () banked
  2622  00355E  6F0C               	movwf	_cur_State& (0+255),b
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;user.c: 54: strncpy(battery.battery_type,"LIPO\0",5);
  2626  003560  0E17               	movlw	low (_battery+10)
  2627  003562  0100               	movlb	0	; () banked
  2628  003564  6FC7               	movwf	strncpy@to& (0+255),b
  2629  003566  0E01               	movlw	high (_battery+10)
  2630  003568  0100               	movlb	0	; () banked
  2631  00356A  6FC8               	movwf	(strncpy@to+1)& (0+255),b
  2632  00356C  0EEB               	movlw	low STR_29
  2633  00356E  0100               	movlb	0	; () banked
  2634  003570  6FC9               	movwf	strncpy@from& (0+255),b
  2635  003572  0E7F               	movlw	high STR_29
  2636  003574  0100               	movlb	0	; () banked
  2637  003576  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  2638  003578  0E00               	movlw	0
  2639  00357A  0100               	movlb	0	; () banked
  2640  00357C  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  2641  00357E  0E05               	movlw	5
  2642  003580  6FCB               	movwf	strncpy@size& (0+255),b
  2643  003582  EC89  F01C         	call	_strncpy	;wreg free
  2644                           
  2645                           ;user.c: 55: battery.charge.restore_Lowest_Voltage = 5;
  2646  003586  0E00               	movlw	0
  2647  003588  0101               	movlb	1	; () banked
  2648  00358A  6F36               	movwf	(_battery+41)& (0+255),b
  2649  00358C  0EA0               	movlw	160
  2650  00358E  0101               	movlb	1	; () banked
  2651  003590  6F37               	movwf	(_battery+42)& (0+255),b
  2652  003592  0E40               	movlw	64
  2653  003594  0101               	movlb	1	; () banked
  2654  003596  6F38               	movwf	(_battery+43)& (0+255),b
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;user.c: 56: battery.number_of_cells = 1;
  2658  003598  0E00               	movlw	0
  2659  00359A  0101               	movlb	1	; () banked
  2660  00359C  6F1D               	movwf	(_battery+16)& (0+255),b
  2661  00359E  0E01               	movlw	1
  2662  0035A0  6F1C               	movwf	(_battery+15)& (0+255),b
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;user.c: 57: battery.charge.restore_Charge_Current = 0.5;
  2666  0035A2  0E00               	movlw	0
  2667  0035A4  0101               	movlb	1	; () banked
  2668  0035A6  6F3B               	movwf	(_battery+46)& (0+255),b
  2669  0035A8  0E00               	movlw	0
  2670  0035AA  0101               	movlb	1	; () banked
  2671  0035AC  6F3C               	movwf	(_battery+47)& (0+255),b
  2672  0035AE  0E3F               	movlw	63
  2673  0035B0  0101               	movlb	1	; () banked
  2674  0035B2  6F3D               	movwf	(_battery+48)& (0+255),b
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;user.c: 58: seconds = 0;
  2678  0035B4  0E00               	movlw	0
  2679  0035B6  0100               	movlb	0	; () banked
  2680  0035B8  6F7E               	movwf	_seconds& (0+255),b
  2681  0035BA  0E00               	movlw	0
  2682  0035BC  6F7F               	movwf	(_seconds+1)& (0+255),b
  2683  0035BE  0E00               	movlw	0
  2684  0035C0  6F80               	movwf	(_seconds+2)& (0+255),b
  2685  0035C2  0E00               	movlw	0
  2686  0035C4  6F81               	movwf	(_seconds+3)& (0+255),b
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;user.c: 60: OpenADC( 0b11101111 & 0b11111111 & 0b11110111,
  2690                           ;user.c: 61: 0b10000111 & 0b01111111 & 0b11111100,
  2691                           ;user.c: 62: 0b11111110 );
  2692  0035C6  0E04               	movlw	4
  2693  0035C8  0100               	movlb	0	; () banked
  2694  0035CA  6FC7               	movwf	OpenADC@config2& (0+255),b
  2695  0035CC  0EFE               	movlw	254
  2696  0035CE  0100               	movlb	0	; () banked
  2697  0035D0  6FC8               	movwf	OpenADC@portconfig& (0+255),b
  2698  0035D2  0EE7               	movlw	231
  2699  0035D4  ECD1  F01B         	call	_OpenADC
  2700                           
  2701                           ;user.c: 64: OpenTimer1( 0b11111111 &
  2702                           ;user.c: 65: 0b10111111 &
  2703                           ;user.c: 66: 0b11111111 &
  2704                           ;user.c: 67: 0b11001111 &
  2705                           ;user.c: 68: 0b11111111 &
  2706                           ;user.c: 69: 0b11111111 );
  2707  0035D8  0E8F               	movlw	143
  2708  0035DA  EC3E  F01F         	call	_OpenTimer1
  2709                           
  2710                           ;user.c: 74: PI.Ki = 2;
  2711  0035DE  0E00               	movlw	0
  2712  0035E0  0100               	movlb	0	; () banked
  2713  0035E2  6FA2               	movwf	(_PI+3)& (0+255),b
  2714  0035E4  0E02               	movlw	2
  2715  0035E6  6FA1               	movwf	(_PI+2)& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;user.c: 75: PI.Kp = 35;
  2719  0035E8  0E00               	movlw	0
  2720  0035EA  0100               	movlb	0	; () banked
  2721  0035EC  6FA0               	movwf	(_PI+1)& (0+255),b
  2722  0035EE  0E23               	movlw	35
  2723  0035F0  6F9F               	movwf	_PI& (0+255),b
  2724                           
  2725                           ; BSR set to: 0
  2726  0035F2  0012               	return		;funcret
  2727  0035F4                     __end_of_InitCharger:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1l	equ	0xFE1
  2740                           indf2	equ	0xFDF
  2741                           postinc2	equ	0xFDE
  2742                           postdec2	equ	0xFDD
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _OpenTimer1 *****************
  2748 ;; Defined at:
  2749 ;;		line 16 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\Timers\t1open.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  config          1    wreg     unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  config          1   17[BANK0 ] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;		None               void
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0
  2764 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2766 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2767 ;;Total ram usage:        1 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:   12
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_InitCharger
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text6
  2778  003E7C                     __ptext6:
  2779                           	opt stack 0
  2780  003E7C                     _OpenTimer1:
  2781                           	opt stack 16
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;incstack = 0
  2785                           ;OpenTimer1@config stored from wreg
  2786  003E7C  0100               	movlb	0	; () banked
  2787  003E7E  6FC7               	movwf	OpenTimer1@config& (0+255),b
  2788  003E80  0100               	movlb	0	; () banked
  2789  003E82  51C7               	movf	OpenTimer1@config& (0+255),w,b
  2790  003E84  0B7E               	andlw	126
  2791  003E86  6ECD               	movwf	4045,c	;volatile
  2792                           
  2793                           ; BSR set to: 0
  2794  003E88  0100               	movlb	0	; () banked
  2795  003E8A  ADC7               	btfss	OpenTimer1@config& (0+255),6,b
  2796  003E8C  D002               	goto	l1096
  2797                           
  2798                           ; BSR set to: 0
  2799  003E8E  8ECD               	bsf	4045,7,c	;volatile
  2800  003E90  D001               	goto	l5460
  2801  003E92                     l1096:
  2802                           
  2803                           ; BSR set to: 0
  2804  003E92  9ECD               	bcf	4045,7,c	;volatile
  2805  003E94                     l5460:
  2806                           
  2807                           ; BSR set to: 0
  2808  003E94  0E00               	movlw	0
  2809  003E96  6ECF               	movwf	4047,c	;volatile
  2810  003E98  0E00               	movlw	0
  2811  003E9A  6ECE               	movwf	4046,c	;volatile
  2812                           
  2813                           ; BSR set to: 0
  2814  003E9C  909E               	bcf	3998,0,c	;volatile
  2815                           
  2816                           ; BSR set to: 0
  2817  003E9E  0100               	movlb	0	; () banked
  2818  003EA0  AFC7               	btfss	OpenTimer1@config& (0+255),7,b
  2819  003EA2  D002               	goto	l1098
  2820                           
  2821                           ; BSR set to: 0
  2822  003EA4  809D               	bsf	3997,0,c	;volatile
  2823  003EA6  D001               	goto	l1099
  2824  003EA8                     l1098:
  2825                           
  2826                           ; BSR set to: 0
  2827  003EA8  909D               	bcf	3997,0,c	;volatile
  2828  003EAA                     l1099:
  2829                           
  2830                           ; BSR set to: 0
  2831  003EAA  80CD               	bsf	4045,0,c	;volatile
  2832                           
  2833                           ; BSR set to: 0
  2834  003EAC  0012               	return		;funcret
  2835  003EAE                     __end_of_OpenTimer1:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           postdec1	equ	0xFE5
  2847                           fsr1l	equ	0xFE1
  2848                           indf2	equ	0xFDF
  2849                           postinc2	equ	0xFDE
  2850                           postdec2	equ	0xFDD
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _OpenADC *****************
  2856 ;; Defined at:
  2857 ;;		line 68 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  config          1    wreg     unsigned char 
  2860 ;;  config2         1   17[BANK0 ] unsigned char 
  2861 ;;  portconfig      1   18[BANK0 ] unsigned char 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  config          1   21[BANK0 ] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2873 ;;      Params:         0       2       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2876 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        5 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:   12
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_InitCharger
  2884 ;;		_initADC
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text7
  2889  0037A2                     __ptext7:
  2890                           	opt stack 0
  2891  0037A2                     _OpenADC:
  2892                           	opt stack 16
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;incstack = 0
  2896                           ;OpenADC@config stored from wreg
  2897  0037A2  0100               	movlb	0	; () banked
  2898  0037A4  6FCB               	movwf	OpenADC@config& (0+255),b
  2899  0037A6  0E00               	movlw	0
  2900  0037A8  6EC2               	movwf	4034,c	;volatile
  2901  0037AA  0E00               	movlw	0
  2902  0037AC  6EC0               	movwf	4032,c	;volatile
  2903  0037AE  0100               	movlb	0	; () banked
  2904  0037B0  90D8               	bcf	status,0,c
  2905  0037B2  31C7               	rrcf	OpenADC@config2& (0+255),w,b
  2906  0037B4  0B3C               	andlw	60
  2907  0037B6  6EC2               	movwf	4034,c	;volatile
  2908                           
  2909                           ; BSR set to: 0
  2910  0037B8  C0C7  F0C9         	movff	OpenADC@config2,??_OpenADC
  2911  0037BC  0100               	movlb	0	; () banked
  2912  0037BE  3BC9               	swapf	??_OpenADC& (0+255),f,b
  2913  0037C0  0EF0               	movlw	240
  2914  0037C2  17C9               	andwf	??_OpenADC& (0+255),f,b
  2915  0037C4  0E30               	movlw	48
  2916  0037C6  0100               	movlb	0	; () banked
  2917  0037C8  17C9               	andwf	??_OpenADC& (0+255),f,b
  2918  0037CA  0100               	movlb	0	; () banked
  2919  0037CC  51C8               	movf	OpenADC@portconfig& (0+255),w,b
  2920  0037CE  0B0F               	andlw	15
  2921  0037D0  0100               	movlb	0	; () banked
  2922  0037D2  11C9               	iorwf	??_OpenADC& (0+255),w,b
  2923  0037D4  6EC1               	movwf	4033,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926  0037D6  C0CB  F0C9         	movff	OpenADC@config,??_OpenADC
  2927  0037DA  0100               	movlb	0	; () banked
  2928  0037DC  90D8               	bcf	status,0,c
  2929  0037DE  37C9               	rlcf	??_OpenADC& (0+255),f,b
  2930  0037E0  0100               	movlb	0	; () banked
  2931  0037E2  90D8               	bcf	status,0,c
  2932  0037E4  37C9               	rlcf	??_OpenADC& (0+255),f,b
  2933  0037E6  0E38               	movlw	56
  2934  0037E8  0100               	movlb	0	; () banked
  2935  0037EA  17C9               	andwf	??_OpenADC& (0+255),f,b
  2936  0037EC  C0CB  F0CA         	movff	OpenADC@config,??_OpenADC+1
  2937  0037F0  0100               	movlb	0	; () banked
  2938  0037F2  3BCA               	swapf	(??_OpenADC+1)& (0+255),f,b
  2939  0037F4  0E0F               	movlw	15
  2940  0037F6  17CA               	andwf	(??_OpenADC+1)& (0+255),f,b
  2941  0037F8  0E07               	movlw	7
  2942  0037FA  0100               	movlb	0	; () banked
  2943  0037FC  17CA               	andwf	(??_OpenADC+1)& (0+255),f,b
  2944  0037FE  0100               	movlb	0	; () banked
  2945  003800  51CB               	movf	OpenADC@config& (0+255),w,b
  2946  003802  0B80               	andlw	128
  2947  003804  0100               	movlb	0	; () banked
  2948  003806  11CA               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2949  003808  0100               	movlb	0	; () banked
  2950  00380A  11C9               	iorwf	??_OpenADC& (0+255),w,b
  2951  00380C  6EC0               	movwf	4032,c	;volatile
  2952                           
  2953                           ; BSR set to: 0
  2954  00380E  0100               	movlb	0	; () banked
  2955  003810  AFC7               	btfss	OpenADC@config2& (0+255),7,b
  2956  003812  D003               	goto	l1066
  2957                           
  2958                           ; BSR set to: 0
  2959  003814  9C9E               	bcf	3998,6,c	;volatile
  2960  003816  8C9D               	bsf	3997,6,c	;volatile
  2961  003818  8CF2               	bsf	intcon,6,c	;volatile
  2962  00381A                     l1066:
  2963                           
  2964                           ; BSR set to: 0
  2965  00381A  80C2               	bsf	4034,0,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968  00381C  0012               	return		;funcret
  2969  00381E                     __end_of_OpenADC:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           postdec1	equ	0xFE5
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           postdec2	equ	0xFDD
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _CDCTxService *****************
  2990 ;; Defined at:
  2991 ;;		line 901 in file "../mla/v2014_07_22/framework/usb/src/usb_device_cdc.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  byte_to_send    1   28[BANK0 ] unsigned char 
  2996 ;;  i               1   27[BANK0 ] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0
  3007 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3008 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3009 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        5 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:   13
  3013 ;; This function calls:
  3014 ;;		_USBTransferOnePacket
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text8
  3021  001606                     __ptext8:
  3022                           	opt stack 0
  3023  001606                     _CDCTxService:
  3024                           	opt stack 17
  3025                           
  3026                           ;usb_device_cdc.c: 903: uint8_t byte_to_send;
  3027                           ;usb_device_cdc.c: 904: uint8_t i;
  3028                           ;usb_device_cdc.c: 906: {PIE2bits.USBIE = 0;};
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;incstack = 0
  3032  001606  9AA0               	bcf	4000,5,c	;volatile
  3033                           
  3034                           ;usb_device_cdc.c: 908: {};
  3035                           ;usb_device_cdc.c: 910: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  3036  001608  0100               	movlb	0	; () banked
  3037  00160A  5194               	movf	_CDCDataInHandle& (0+255),w,b
  3038  00160C  0100               	movlb	0	; () banked
  3039  00160E  1195               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  3040  001610  B4D8               	btfsc	status,2,c
  3041  001612  D013               	goto	l6460
  3042                           
  3043                           ; BSR set to: 0
  3044  001614  C094  FFD9         	movff	_CDCDataInHandle,fsr2l
  3045  001618  C095  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  3046  00161C  0100               	movlb	0	; () banked
  3047  00161E  AEDF               	btfss	indf2,7,c
  3048  001620  D004               	goto	u6220
  3049  001622  0100               	movlb	0	; () banked
  3050  001624  6BCE               	clrf	??_CDCTxService& (0+255),b
  3051  001626  2BCE               	incf	??_CDCTxService& (0+255),f,b
  3052  001628  D002               	goto	u6228
  3053  00162A                     u6220:
  3054  00162A  0100               	movlb	0	; () banked
  3055  00162C  6BCE               	clrf	??_CDCTxService& (0+255),b
  3056  00162E                     u6228:
  3057  00162E  0100               	movlb	0	; () banked
  3058  001630  51CE               	movf	??_CDCTxService& (0+255),w,b
  3059  001632  0100               	movlb	0	; () banked
  3060  001634  6FCF               	movwf	_CDCTxService$2649& (0+255),b
  3061  001636  6BD0               	clrf	(_CDCTxService$2649+1)& (0+255),b
  3062  001638  D005               	goto	l6462
  3063  00163A                     l6460:
  3064                           
  3065                           ; BSR set to: 0
  3066  00163A  0E00               	movlw	0
  3067  00163C  0100               	movlb	0	; () banked
  3068  00163E  6FD0               	movwf	(_CDCTxService$2649+1)& (0+255),b
  3069  001640  0E00               	movlw	0
  3070  001642  6FCF               	movwf	_CDCTxService$2649& (0+255),b
  3071  001644                     l6462:
  3072                           
  3073                           ; BSR set to: 0
  3074  001644  0100               	movlb	0	; () banked
  3075  001646  51CF               	movf	_CDCTxService$2649& (0+255),w,b
  3076  001648  0100               	movlb	0	; () banked
  3077  00164A  11D0               	iorwf	(_CDCTxService$2649+1)& (0+255),w,b
  3078  00164C  B4D8               	btfsc	status,2,c
  3079  00164E  D002               	goto	l6466
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;usb_device_cdc.c: 911: {
  3083                           ;usb_device_cdc.c: 912: {PIE2bits.USBIE = 1;};
  3084  001650  8AA0               	bsf	4000,5,c	;volatile
  3085                           
  3086                           ;usb_device_cdc.c: 913: return;
  3087  001652  0012               	return	
  3088  001654                     l6466:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;usb_device_cdc.c: 914: }
  3092                           ;usb_device_cdc.c: 921: if(cdc_trf_state == 3)
  3093  001654  0E03               	movlw	3
  3094  001656  0100               	movlb	0	; () banked
  3095  001658  199D               	xorwf	_cdc_trf_state& (0+255),w,b
  3096  00165A  A4D8               	btfss	status,2,c
  3097  00165C  D003               	goto	l958
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;usb_device_cdc.c: 922: cdc_trf_state = 0;
  3101  00165E  0E00               	movlw	0
  3102  001660  0100               	movlb	0	; () banked
  3103  001662  6F9D               	movwf	_cdc_trf_state& (0+255),b
  3104  001664                     l958:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;usb_device_cdc.c: 927: if(cdc_trf_state == 0)
  3108  001664  0100               	movlb	0	; () banked
  3109  001666  519D               	movf	_cdc_trf_state& (0+255),w,b
  3110  001668  A4D8               	btfss	status,2,c
  3111  00166A  D002               	goto	l6472
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;usb_device_cdc.c: 928: {
  3115                           ;usb_device_cdc.c: 929: {PIE2bits.USBIE = 1;};
  3116  00166C  8AA0               	bsf	4000,5,c	;volatile
  3117                           
  3118                           ;usb_device_cdc.c: 930: return;
  3119  00166E  0012               	return	
  3120  001670                     l6472:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;usb_device_cdc.c: 931: }
  3124                           ;usb_device_cdc.c: 936: if(cdc_trf_state == 2)
  3125  001670  0E02               	movlw	2
  3126  001672  0100               	movlb	0	; () banked
  3127  001674  199D               	xorwf	_cdc_trf_state& (0+255),w,b
  3128  001676  A4D8               	btfss	status,2,c
  3129  001678  D017               	goto	l6478
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;usb_device_cdc.c: 937: {
  3133                           ;usb_device_cdc.c: 938: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3134  00167A  0E01               	movlw	1
  3135  00167C  0100               	movlb	0	; () banked
  3136  00167E  6FC7               	movwf	USBTransferOnePacket@dir& (0+255),b
  3137  001680  0E00               	movlw	0
  3138  001682  0100               	movlb	0	; () banked
  3139  001684  6FC8               	movwf	USBTransferOnePacket@data& (0+255),b
  3140  001686  0E00               	movlw	0
  3141  001688  0100               	movlb	0	; () banked
  3142  00168A  6FC9               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3143  00168C  0E00               	movlw	0
  3144  00168E  0100               	movlb	0	; () banked
  3145  001690  6FCA               	movwf	USBTransferOnePacket@len& (0+255),b
  3146  001692  0E02               	movlw	2
  3147  001694  EC3F  F015         	call	_USBTransferOnePacket
  3148  001698  C0C7  F094         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3149  00169C  C0C8  F095         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3150                           
  3151                           ;usb_device_cdc.c: 940: cdc_trf_state = 3;
  3152  0016A0  0E03               	movlw	3
  3153  0016A2  0100               	movlb	0	; () banked
  3154  0016A4  6F9D               	movwf	_cdc_trf_state& (0+255),b
  3155                           
  3156                           ;usb_device_cdc.c: 941: }
  3157  0016A6  D071               	goto	l6522
  3158  0016A8                     l6478:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;usb_device_cdc.c: 942: else if(cdc_trf_state == 1)
  3162  0016A8  0100               	movlb	0	; () banked
  3163  0016AA  059D               	decf	_cdc_trf_state& (0+255),w,b
  3164  0016AC  A4D8               	btfss	status,2,c
  3165  0016AE  D06D               	goto	l6522
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;usb_device_cdc.c: 943: {
  3169                           ;usb_device_cdc.c: 947: if(cdc_tx_len > sizeof(cdc_data_tx))
  3170  0016B0  0E40               	movlw	64
  3171  0016B2  0100               	movlb	0	; () banked
  3172  0016B4  659E               	cpfsgt	_cdc_tx_len& (0+255),b
  3173  0016B6  D004               	goto	l963
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;usb_device_cdc.c: 948: byte_to_send = sizeof(cdc_data_tx);
  3177  0016B8  0E40               	movlw	64
  3178  0016BA  0100               	movlb	0	; () banked
  3179  0016BC  6FD2               	movwf	CDCTxService@byte_to_send& (0+255),b
  3180  0016BE  D002               	goto	l6484
  3181  0016C0                     l963:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;usb_device_cdc.c: 949: else
  3185                           ;usb_device_cdc.c: 950: byte_to_send = cdc_tx_len;
  3186  0016C0  C09E  F0D2         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  3187  0016C4                     l6484:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;usb_device_cdc.c: 955: cdc_tx_len = cdc_tx_len - byte_to_send;
  3191  0016C4  0100               	movlb	0	; () banked
  3192  0016C6  51D2               	movf	CDCTxService@byte_to_send& (0+255),w,b
  3193  0016C8  0800               	sublw	0
  3194  0016CA  0100               	movlb	0	; () banked
  3195  0016CC  259E               	addwf	_cdc_tx_len& (0+255),w,b
  3196  0016CE  0100               	movlb	0	; () banked
  3197  0016D0  6F9E               	movwf	_cdc_tx_len& (0+255),b
  3198                           
  3199                           ;usb_device_cdc.c: 957: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3200  0016D2  0E00               	movlw	0
  3201  0016D4  0100               	movlb	0	; () banked
  3202  0016D6  6F8B               	movwf	_pCDCDst& (0+255),b
  3203  0016D8  0E05               	movlw	5
  3204  0016DA  0100               	movlb	0	; () banked
  3205  0016DC  6F8C               	movwf	(_pCDCDst+1)& (0+255),b
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;usb_device_cdc.c: 959: i = byte_to_send;
  3209  0016DE  C0D2  F0D1         	movff	CDCTxService@byte_to_send,CDCTxService@i
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;usb_device_cdc.c: 960: if(cdc_mem_type == 0x00)
  3213  0016E2  0100               	movlb	0	; () banked
  3214  0016E4  519B               	movf	_cdc_mem_type& (0+255),w,b
  3215  0016E6  B4D8               	btfsc	status,2,c
  3216  0016E8  D013               	goto	l6500
  3217  0016EA  D02A               	goto	l6510
  3218  0016EC                     l6492:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;usb_device_cdc.c: 963: {
  3222                           ;usb_device_cdc.c: 964: *pCDCDst.bRam = *pCDCSrc.bRom;
  3223  0016EC  C08E  FFD9         	movff	_pCDCSrc,fsr2l
  3224  0016F0  C08F  FFDA         	movff	_pCDCSrc+1,fsr2h
  3225  0016F4  C08B  FFE1         	movff	_pCDCDst,fsr1l
  3226  0016F8  C08C  FFE2         	movff	_pCDCDst+1,fsr1h
  3227  0016FC  CFDF FFE7          	movff	indf2,indf1
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;usb_device_cdc.c: 965: pCDCDst.bRam++;
  3231  001700  0100               	movlb	0	; () banked
  3232  001702  4B8B               	infsnz	_pCDCDst& (0+255),f,b
  3233  001704  2B8C               	incf	(_pCDCDst+1)& (0+255),f,b
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;usb_device_cdc.c: 966: pCDCSrc.bRom++;
  3237  001706  0100               	movlb	0	; () banked
  3238  001708  4B8E               	infsnz	_pCDCSrc& (0+255),f,b
  3239  00170A  2B8F               	incf	(_pCDCSrc+1)& (0+255),f,b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;usb_device_cdc.c: 967: i--;
  3243  00170C  0100               	movlb	0	; () banked
  3244  00170E  07D1               	decf	CDCTxService@i& (0+255),f,b
  3245  001710                     l6500:
  3246                           
  3247                           ; BSR set to: 0
  3248  001710  0100               	movlb	0	; () banked
  3249  001712  51D1               	movf	CDCTxService@i& (0+255),w,b
  3250  001714  0100               	movlb	0	; () banked
  3251  001716  B4D8               	btfsc	status,2,c
  3252  001718  D018               	goto	l6512
  3253  00171A  D7E8               	goto	l6492
  3254  00171C                     l6502:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;usb_device_cdc.c: 973: {
  3258                           ;usb_device_cdc.c: 974: *pCDCDst.bRam = *pCDCSrc.bRam;
  3259  00171C  C08E  FFD9         	movff	_pCDCSrc,fsr2l
  3260  001720  C08F  FFDA         	movff	_pCDCSrc+1,fsr2h
  3261  001724  C08B  FFE1         	movff	_pCDCDst,fsr1l
  3262  001728  C08C  FFE2         	movff	_pCDCDst+1,fsr1h
  3263  00172C  CFDF FFE7          	movff	indf2,indf1
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;usb_device_cdc.c: 975: pCDCDst.bRam++;
  3267  001730  0100               	movlb	0	; () banked
  3268  001732  4B8B               	infsnz	_pCDCDst& (0+255),f,b
  3269  001734  2B8C               	incf	(_pCDCDst+1)& (0+255),f,b
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;usb_device_cdc.c: 976: pCDCSrc.bRam++;
  3273  001736  0100               	movlb	0	; () banked
  3274  001738  4B8E               	infsnz	_pCDCSrc& (0+255),f,b
  3275  00173A  2B8F               	incf	(_pCDCSrc+1)& (0+255),f,b
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;usb_device_cdc.c: 977: i--;
  3279  00173C  0100               	movlb	0	; () banked
  3280  00173E  07D1               	decf	CDCTxService@i& (0+255),f,b
  3281  001740                     l6510:
  3282                           
  3283                           ; BSR set to: 0
  3284  001740  0100               	movlb	0	; () banked
  3285  001742  51D1               	movf	CDCTxService@i& (0+255),w,b
  3286  001744  0100               	movlb	0	; () banked
  3287  001746  A4D8               	btfss	status,2,c
  3288  001748  D7E9               	goto	l6502
  3289  00174A                     l6512:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;usb_device_cdc.c: 978: }
  3293                           ;usb_device_cdc.c: 979: }
  3294                           ;usb_device_cdc.c: 985: if(cdc_tx_len == 0)
  3295  00174A  0100               	movlb	0	; () banked
  3296  00174C  519E               	movf	_cdc_tx_len& (0+255),w,b
  3297  00174E  A4D8               	btfss	status,2,c
  3298  001750  D00A               	goto	l6520
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;usb_device_cdc.c: 986: {
  3302                           ;usb_device_cdc.c: 987: if(byte_to_send == 64)
  3303  001752  0E40               	movlw	64
  3304  001754  0100               	movlb	0	; () banked
  3305  001756  19D2               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  3306  001758  A4D8               	btfss	status,2,c
  3307  00175A  D002               	goto	l6518
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;usb_device_cdc.c: 988: cdc_trf_state = 2;
  3311  00175C  0E02               	movlw	2
  3312  00175E  D001               	goto	L1
  3313  001760                     l6518:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;usb_device_cdc.c: 989: else
  3317                           ;usb_device_cdc.c: 990: cdc_trf_state = 3;
  3318  001760  0E03               	movlw	3
  3319  001762                     L1:
  3320  001762  0100               	movlb	0	; () banked
  3321  001764  6F9D               	movwf	_cdc_trf_state& (0+255),b
  3322  001766                     l6520:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;usb_device_cdc.c: 991: }
  3326                           ;usb_device_cdc.c: 992: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3327  001766  0E01               	movlw	1
  3328  001768  0100               	movlb	0	; () banked
  3329  00176A  6FC7               	movwf	USBTransferOnePacket@dir& (0+255),b
  3330  00176C  0E00               	movlw	0
  3331  00176E  0100               	movlb	0	; () banked
  3332  001770  6FC8               	movwf	USBTransferOnePacket@data& (0+255),b
  3333  001772  0E05               	movlw	5
  3334  001774  0100               	movlb	0	; () banked
  3335  001776  6FC9               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3336  001778  C0D2  F0CA         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  3337  00177C  0E02               	movlw	2
  3338  00177E  EC3F  F015         	call	_USBTransferOnePacket
  3339  001782  C0C7  F094         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  3340  001786  C0C8  F095         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  3341  00178A                     l6522:
  3342                           
  3343                           ;usb_device_cdc.c: 994: }
  3344                           ;usb_device_cdc.c: 996: {PIE2bits.USBIE = 1;};
  3345  00178A  8AA0               	bsf	4000,5,c	;volatile
  3346  00178C  0012               	return		;funcret
  3347  00178E                     __end_of_CDCTxService:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf1	equ	0xFE7
  3359                           postdec1	equ	0xFE5
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _USBTransferOnePacket *****************
  3370 ;; Defined at:
  3371 ;;		line 995 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  ep              1    wreg     unsigned char 
  3374 ;;  dir             1   17[BANK0 ] unsigned char 
  3375 ;;  data            2   18[BANK0 ] PTR unsigned char 
  3376 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  3377 ;;  len             1   20[BANK0 ] unsigned char 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  ep              1   21[BANK0 ] unsigned char 
  3380 ;;  handle          2   22[BANK0 ] PTR volatile struct __BD
  3381 ;;		 -> NULL(0), BDT(48), 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   17[BANK0 ] PTR void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3391 ;;      Params:         0       4       0       0       0       0       0       0       0
  3392 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3394 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3395 ;;Total ram usage:        7 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:   12
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_CDCTxService
  3402 ;;		_USBCDCEventHandler
  3403 ;;		_getsUSBUSART
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text9
  3408  002A7E                     __ptext9:
  3409                           	opt stack 0
  3410  002A7E                     _USBTransferOnePacket:
  3411                           	opt stack 17
  3412                           
  3413                           ;incstack = 0
  3414                           ;USBTransferOnePacket@ep stored from wreg
  3415  002A7E  0100               	movlb	0	; () banked
  3416  002A80  6FCB               	movwf	USBTransferOnePacket@ep& (0+255),b
  3417                           
  3418                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3419                           ;usb_device.c: 1000: if(dir != 0)
  3420  002A82  0100               	movlb	0	; () banked
  3421  002A84  51C7               	movf	USBTransferOnePacket@dir& (0+255),w,b
  3422  002A86  0100               	movlb	0	; () banked
  3423  002A88  B4D8               	btfsc	status,2,c
  3424  002A8A  D008               	goto	l5946
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;usb_device.c: 1001: {
  3428                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3429  002A8C  0100               	movlb	0	; () banked
  3430  002A8E  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  3431  002A90  0D02               	mullw	2
  3432  002A92  0E6E               	movlw	low _pBDTEntryIn
  3433  002A94  24F3               	addwf	prodl,w,c
  3434  002A96  6ED9               	movwf	fsr2l,c
  3435  002A98  0E00               	movlw	high _pBDTEntryIn
  3436  002A9A  D007               	goto	L2
  3437  002A9C                     l5946:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;usb_device.c: 1005: else
  3441                           ;usb_device.c: 1006: {
  3442                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3443  002A9C  0100               	movlb	0	; () banked
  3444  002A9E  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  3445  002AA0  0D02               	mullw	2
  3446  002AA2  0E74               	movlw	low _pBDTEntryOut
  3447  002AA4  24F3               	addwf	prodl,w,c
  3448  002AA6  6ED9               	movwf	fsr2l,c
  3449  002AA8  0E00               	movlw	high _pBDTEntryOut
  3450  002AAA                     L2:
  3451  002AAA  20F4               	addwfc	prodh,w,c
  3452  002AAC  6EDA               	movwf	fsr2h,c
  3453  002AAE  CFDE F0CC          	movff	postinc2,USBTransferOnePacket@handle
  3454  002AB2  CFDD F0CD          	movff	postdec2,USBTransferOnePacket@handle+1
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;usb_device.c: 1009: }
  3458                           ;usb_device.c: 1013: if(handle == 0)
  3459                           
  3460                           ; BSR set to: 0
  3461  002AB6  0100               	movlb	0	; () banked
  3462  002AB8  51CC               	movf	USBTransferOnePacket@handle& (0+255),w,b
  3463  002ABA  0100               	movlb	0	; () banked
  3464  002ABC  11CD               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  3465  002ABE  A4D8               	btfss	status,2,c
  3466  002AC0  D007               	goto	l5954
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;usb_device.c: 1014: {
  3470                           ;usb_device.c: 1015: return 0;
  3471  002AC2  0E00               	movlw	0
  3472  002AC4  0100               	movlb	0	; () banked
  3473  002AC6  6FC7               	movwf	?_USBTransferOnePacket& (0+255),b
  3474  002AC8  0E00               	movlw	0
  3475  002ACA  0100               	movlb	0	; () banked
  3476  002ACC  6FC8               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479  002ACE  0012               	return	
  3480  002AD0                     l5954:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;usb_device.c: 1016: }
  3484                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  3485  002AD0  0100               	movlb	0	; () banked
  3486  002AD2  EE20 F002          	lfsr	2,2
  3487  002AD6  51CC               	movf	USBTransferOnePacket@handle& (0+255),w,b
  3488  002AD8  26D9               	addwf	fsr2l,f,c
  3489  002ADA  51CD               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  3490  002ADC  22DA               	addwfc	fsr2h,f,c
  3491  002ADE  C0C8  FFDE         	movff	USBTransferOnePacket@data,postinc2
  3492  002AE2  C0C9  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  3493                           
  3494                           ;usb_device.c: 1030: handle->CNT = len;
  3495  002AE6  0100               	movlb	0	; () banked
  3496  002AE8  EE20 F001          	lfsr	2,1
  3497  002AEC  51CC               	movf	USBTransferOnePacket@handle& (0+255),w,b
  3498  002AEE  26D9               	addwf	fsr2l,f,c
  3499  002AF0  51CD               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  3500  002AF2  22DA               	addwfc	fsr2h,f,c
  3501  002AF4  C0CA  FFDF         	movff	USBTransferOnePacket@len,indf2
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3505  002AF8  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  3506  002AFC  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  3507  002B00  0E40               	movlw	64
  3508  002B02  16DF               	andwf	indf2,f,c
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3512  002B04  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  3513  002B08  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  3514  002B0C  0E00               	movlw	0
  3515  002B0E  86DB               	bsf	plusw2,3,c
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3519  002B10  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  3520  002B14  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  3521  002B18  0E00               	movlw	0
  3522  002B1A  8EDB               	bsf	plusw2,7,c
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;usb_device.c: 1036: if(dir != 0)
  3526  002B1C  0100               	movlb	0	; () banked
  3527  002B1E  51C7               	movf	USBTransferOnePacket@dir& (0+255),w,b
  3528  002B20  0100               	movlb	0	; () banked
  3529  002B22  B4D8               	btfsc	status,2,c
  3530  002B24  D008               	goto	l5966
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;usb_device.c: 1037: {
  3534                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  3535  002B26  0100               	movlb	0	; () banked
  3536  002B28  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  3537  002B2A  0D02               	mullw	2
  3538  002B2C  0E6E               	movlw	low _pBDTEntryIn
  3539  002B2E  24F3               	addwf	prodl,w,c
  3540  002B30  6ED9               	movwf	fsr2l,c
  3541  002B32  0E00               	movlw	high _pBDTEntryIn
  3542  002B34  D007               	goto	L3
  3543  002B36                     l5966:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;usb_device.c: 1041: else
  3547                           ;usb_device.c: 1042: {
  3548                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  3549  002B36  0100               	movlb	0	; () banked
  3550  002B38  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  3551  002B3A  0D02               	mullw	2
  3552  002B3C  0E74               	movlw	low _pBDTEntryOut
  3553  002B3E  24F3               	addwf	prodl,w,c
  3554  002B40  6ED9               	movwf	fsr2l,c
  3555  002B42  0E00               	movlw	high _pBDTEntryOut
  3556  002B44                     L3:
  3557  002B44  20F4               	addwfc	prodh,w,c
  3558  002B46  6EDA               	movwf	fsr2h,c
  3559  002B48  0E04               	movlw	4
  3560  002B4A  1ADF               	xorwf	indf2,f,c
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;usb_device.c: 1045: }
  3564                           ;usb_device.c: 1046: return (void*)handle;
  3565                           
  3566                           ; BSR set to: 0
  3567  002B4C  C0CC  F0C7         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  3568  002B50  C0CD  F0C8         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  3569  002B54  0012               	return	
  3570  002B56                     __end_of_USBTransferOnePacket:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           indf1	equ	0xFE7
  3582                           postdec1	equ	0xFE5
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           plusw2	equ	0xFDB
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _APP_CustomCDCTasks *****************
  3594 ;; Defined at:
  3595 ;;		line 134 in file "app_custom_cdc.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  msg_Error     100    0[BANK2 ] unsigned char [100]
  3600 ;;  end            10  100[BANK2 ] unsigned char [10]
  3601 ;;  res             2  112[BANK2 ] short 
  3602 ;;  precondition    2  110[BANK2 ] short 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0
  3613 ;;      Locals:         0       0       0     114       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3615 ;;      Totals:         0       0       0     114       0       0       0       0       0
  3616 ;;Total ram usage:      114 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:   17
  3619 ;; This function calls:
  3620 ;;		_APP_USB_send
  3621 ;;		_check_Lipo
  3622 ;;		_check_Precondition
  3623 ;;		_end_Charge
  3624 ;;		_initialize
  3625 ;;		_list_Action
  3626 ;;		_list_Battery
  3627 ;;		_list_Program
  3628 ;;		_select_Action
  3629 ;;		_select_Battery
  3630 ;;		_select_Program
  3631 ;;		_start_CC
  3632 ;;		_start_CV
  3633 ;;		_start_Precondition
  3634 ;;		_stop_CV
  3635 ;;		_strcpy
  3636 ;;		_strncmp
  3637 ;;		_verifie_Ibat
  3638 ;;		_verifie_Precondition
  3639 ;;		_verifie_Vbat
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text10
  3646  0000AA                     __ptext10:
  3647                           	opt stack 0
  3648  0000AA                     _APP_CustomCDCTasks:
  3649                           	opt stack 13
  3650                           
  3651                           ;app_custom_cdc.c: 137: short res;
  3652                           ;app_custom_cdc.c: 138: short precondition;
  3653                           ;app_custom_cdc.c: 139: char end[10];
  3654                           ;app_custom_cdc.c: 140: char msg_Error[100];
  3655                           ;app_custom_cdc.c: 142: APP_USB_send("%s","Application initialized");
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;incstack = 0
  3659  0000AA  0EFB               	movlw	low STR_1
  3660  0000AC  0100               	movlb	0	; () banked
  3661  0000AE  6FE7               	movwf	APP_USB_send@format& (0+255),b
  3662  0000B0  0E7F               	movlw	high STR_1
  3663  0000B2  0100               	movlb	0	; () banked
  3664  0000B4  6FE8               	movwf	(APP_USB_send@format+1)& (0+255),b
  3665  0000B6  0EC9               	movlw	low STR_2
  3666  0000B8  0100               	movlb	0	; () banked
  3667  0000BA  6FE9               	movwf	(?_APP_USB_send+2)& (0+255),b
  3668  0000BC  0E7E               	movlw	high STR_2
  3669  0000BE  0100               	movlb	0	; () banked
  3670  0000C0  6FEA               	movwf	(?_APP_USB_send+3)& (0+255),b
  3671  0000C2  EC33  F01D         	call	_APP_USB_send	;wreg free
  3672                           
  3673                           ;app_custom_cdc.c: 144: res = INDEFINED;
  3674  0000C6  0E00               	movlw	0
  3675  0000C8  0102               	movlb	2	; () banked
  3676  0000CA  6FF1               	movwf	(APP_CustomCDCTasks@res+1)& (0+255),b
  3677  0000CC  0E02               	movlw	2
  3678  0000CE  6FF0               	movwf	APP_CustomCDCTasks@res& (0+255),b
  3679                           
  3680                           ;app_custom_cdc.c: 145: switch (cur_State)
  3681  0000D0  D3A0               	goto	l8790
  3682  0000D2                     l8574:
  3683                           
  3684                           ;app_custom_cdc.c: 148: res = initialize();
  3685  0000D2  EC3D  F020         	call	_initialize	;wreg free
  3686  0000D6  C0C7  F2F0         	movff	?_initialize,APP_CustomCDCTasks@res
  3687  0000DA  C0C8  F2F1         	movff	?_initialize+1,APP_CustomCDCTasks@res+1
  3688                           
  3689                           ;app_custom_cdc.c: 149: if (res != OK)
  3690  0000DE  0102               	movlb	2	; () banked
  3691  0000E0  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  3692  0000E2  0102               	movlb	2	; () banked
  3693  0000E4  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  3694  0000E6  B4D8               	btfsc	status,2,c
  3695  0000E8  D012               	goto	l8582
  3696                           
  3697                           ; BSR set to: 2
  3698                           ;app_custom_cdc.c: 150: {
  3699                           ;app_custom_cdc.c: 151: strcpy(msg_Error,"Charger Error");
  3700  0000EA  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  3701  0000EC  0100               	movlb	0	; () banked
  3702  0000EE  6FC7               	movwf	strcpy@to& (0+255),b
  3703  0000F0  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  3704  0000F2  0100               	movlb	0	; () banked
  3705  0000F4  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  3706  0000F6  0ED4               	movlw	low STR_3
  3707  0000F8  0100               	movlb	0	; () banked
  3708  0000FA  6FC9               	movwf	strcpy@from& (0+255),b
  3709  0000FC  0E7F               	movlw	high STR_3
  3710  0000FE  0100               	movlb	0	; () banked
  3711  000100  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  3712  000102  EC24  F01F         	call	_strcpy	;wreg free
  3713                           
  3714                           ;app_custom_cdc.c: 152: cur_State = CHARGE_ERROR;
  3715  000106  0E18               	movlw	24
  3716  000108  0101               	movlb	1	; () banked
  3717  00010A  6F0C               	movwf	_cur_State& (0+255),b
  3718                           
  3719                           ;app_custom_cdc.c: 153: }
  3720  00010C  0012               	return	
  3721  00010E                     l8582:
  3722                           
  3723                           ;app_custom_cdc.c: 154: else
  3724                           ;app_custom_cdc.c: 155: {
  3725                           ;app_custom_cdc.c: 156: cur_State = INITIALIZERD;
  3726  00010E  0E01               	movlw	1
  3727  000110  0101               	movlb	1	; () banked
  3728  000112  6F0C               	movwf	_cur_State& (0+255),b
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;app_custom_cdc.c: 157: }
  3732                           ;app_custom_cdc.c: 158: break;
  3733  000114  0012               	return	
  3734  000116                     l8584:
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;app_custom_cdc.c: 161: res = list_Battery();
  3738  000116  EC31  F020         	call	_list_Battery	;wreg free
  3739  00011A  C0C7  F2F0         	movff	?_list_Battery,APP_CustomCDCTasks@res
  3740  00011E  C0C8  F2F1         	movff	?_list_Battery+1,APP_CustomCDCTasks@res+1
  3741                           
  3742                           ;app_custom_cdc.c: 162: if (res != OK)
  3743  000122  0102               	movlb	2	; () banked
  3744  000124  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  3745  000126  0102               	movlb	2	; () banked
  3746  000128  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  3747  00012A  B4D8               	btfsc	status,2,c
  3748  00012C  D012               	goto	l8592
  3749                           
  3750                           ; BSR set to: 2
  3751                           ;app_custom_cdc.c: 163: {
  3752                           ;app_custom_cdc.c: 164: strcpy(msg_Error,"Battery list Error");
  3753  00012E  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  3754  000130  0100               	movlb	0	; () banked
  3755  000132  6FC7               	movwf	strcpy@to& (0+255),b
  3756  000134  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  3757  000136  0100               	movlb	0	; () banked
  3758  000138  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  3759  00013A  0E9E               	movlw	low STR_4
  3760  00013C  0100               	movlb	0	; () banked
  3761  00013E  6FC9               	movwf	strcpy@from& (0+255),b
  3762  000140  0E7F               	movlw	high STR_4
  3763  000142  0100               	movlb	0	; () banked
  3764  000144  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  3765  000146  EC24  F01F         	call	_strcpy	;wreg free
  3766                           
  3767                           ;app_custom_cdc.c: 165: cur_State = CHARGE_ERROR;
  3768  00014A  0E18               	movlw	24
  3769  00014C  0101               	movlb	1	; () banked
  3770  00014E  6F0C               	movwf	_cur_State& (0+255),b
  3771                           
  3772                           ;app_custom_cdc.c: 166: }
  3773  000150  0012               	return	
  3774  000152                     l8592:
  3775                           
  3776                           ;app_custom_cdc.c: 167: else
  3777                           ;app_custom_cdc.c: 168: {
  3778                           ;app_custom_cdc.c: 169: cur_State = BATTERIES_LISTED;
  3779  000152  0E02               	movlw	2
  3780  000154  0101               	movlb	1	; () banked
  3781  000156  6F0C               	movwf	_cur_State& (0+255),b
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;app_custom_cdc.c: 170: }
  3785                           ;app_custom_cdc.c: 171: break;
  3786  000158  0012               	return	
  3787  00015A                     l8594:
  3788                           
  3789                           ; BSR set to: 1
  3790                           ;app_custom_cdc.c: 174: select_Battery();
  3791  00015A  EC53  F020         	call	_select_Battery	;wreg free
  3792                           
  3793                           ;app_custom_cdc.c: 175: cur_State = BATTERY_SELECTED;
  3794  00015E  0E03               	movlw	3
  3795  000160  0101               	movlb	1	; () banked
  3796  000162  6F0C               	movwf	_cur_State& (0+255),b
  3797                           
  3798                           ;app_custom_cdc.c: 176: break;
  3799  000164  0012               	return	
  3800  000166                     l8598:
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;app_custom_cdc.c: 179: res = list_Action();
  3804  000166  EC37  F020         	call	_list_Action	;wreg free
  3805  00016A  C0C7  F2F0         	movff	?_list_Action,APP_CustomCDCTasks@res
  3806  00016E  C0C8  F2F1         	movff	?_list_Action+1,APP_CustomCDCTasks@res+1
  3807                           
  3808                           ;app_custom_cdc.c: 180: if (res != OK)
  3809  000172  0102               	movlb	2	; () banked
  3810  000174  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  3811  000176  0102               	movlb	2	; () banked
  3812  000178  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  3813  00017A  B4D8               	btfsc	status,2,c
  3814  00017C  D012               	goto	l8606
  3815                           
  3816                           ; BSR set to: 2
  3817                           ;app_custom_cdc.c: 181: {
  3818                           ;app_custom_cdc.c: 182: strcpy(msg_Error,"Action list Error");
  3819  00017E  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  3820  000180  0100               	movlb	0	; () banked
  3821  000182  6FC7               	movwf	strcpy@to& (0+255),b
  3822  000184  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  3823  000186  0100               	movlb	0	; () banked
  3824  000188  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  3825  00018A  0EB1               	movlw	low STR_5
  3826  00018C  0100               	movlb	0	; () banked
  3827  00018E  6FC9               	movwf	strcpy@from& (0+255),b
  3828  000190  0E7F               	movlw	high STR_5
  3829  000192  0100               	movlb	0	; () banked
  3830  000194  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  3831  000196  EC24  F01F         	call	_strcpy	;wreg free
  3832                           
  3833                           ;app_custom_cdc.c: 183: cur_State = CHARGE_ERROR;
  3834  00019A  0E18               	movlw	24
  3835  00019C  0101               	movlb	1	; () banked
  3836  00019E  6F0C               	movwf	_cur_State& (0+255),b
  3837                           
  3838                           ;app_custom_cdc.c: 184: }
  3839  0001A0  0012               	return	
  3840  0001A2                     l8606:
  3841                           
  3842                           ;app_custom_cdc.c: 185: else
  3843                           ;app_custom_cdc.c: 186: {
  3844                           ;app_custom_cdc.c: 187: cur_State = ACTION_LISTED;
  3845  0001A2  0E04               	movlw	4
  3846  0001A4  0101               	movlb	1	; () banked
  3847  0001A6  6F0C               	movwf	_cur_State& (0+255),b
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;app_custom_cdc.c: 188: }
  3851                           ;app_custom_cdc.c: 189: break;
  3852  0001A8  0012               	return	
  3853  0001AA                     l8608:
  3854                           
  3855                           ; BSR set to: 1
  3856                           ;app_custom_cdc.c: 192: select_Action();
  3857  0001AA  EC54  F020         	call	_select_Action	;wreg free
  3858                           
  3859                           ;app_custom_cdc.c: 193: cur_State = ACTION_SELECTED;
  3860  0001AE  0E05               	movlw	5
  3861  0001B0  0101               	movlb	1	; () banked
  3862  0001B2  6F0C               	movwf	_cur_State& (0+255),b
  3863                           
  3864                           ;app_custom_cdc.c: 194: break;
  3865  0001B4  0012               	return	
  3866  0001B6                     l8612:
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;app_custom_cdc.c: 200: cur_State = RUN_SELECTED;
  3870  0001B6  0E06               	movlw	6
  3871  0001B8  0101               	movlb	1	; () banked
  3872  0001BA  6F0C               	movwf	_cur_State& (0+255),b
  3873                           
  3874                           ;app_custom_cdc.c: 201: break;
  3875  0001BC  0012               	return	
  3876  0001BE                     l8614:
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;app_custom_cdc.c: 204: cur_State = EDIT_SELECTED;
  3880  0001BE  0E07               	movlw	7
  3881  0001C0  0101               	movlb	1	; () banked
  3882  0001C2  6F0C               	movwf	_cur_State& (0+255),b
  3883                           
  3884                           ;app_custom_cdc.c: 205: break;
  3885  0001C4  0012               	return	
  3886  0001C6                     l8616:
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;app_custom_cdc.c: 208: cur_State = DELETE_SELECTED;
  3890  0001C6  0E08               	movlw	8
  3891  0001C8  0101               	movlb	1	; () banked
  3892  0001CA  6F0C               	movwf	_cur_State& (0+255),b
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;app_custom_cdc.c: 210: }
  3896                           
  3897                           ;app_custom_cdc.c: 209: break;
  3898  0001CC  0012               	return	
  3899  0001CE                     l8620:
  3900                           
  3901                           ; BSR set to: 1
  3902  0001CE  0101               	movlb	1	; () banked
  3903  0001D0  510A               	movf	_cur_Action& (0+255),w,b
  3904                           
  3905                           ; Switch size 1, requested type "space"
  3906                           ; Number of cases is 3, Range of values is 0 to 2
  3907                           ; switch strategies available:
  3908                           ; Name         Instructions Cycles
  3909                           ; simple_byte           10     6 (average)
  3910                           ;	Chosen strategy is simple_byte
  3911  0001D2  0A00               	xorlw	0	; case 0
  3912  0001D4  B4D8               	btfsc	status,2,c
  3913  0001D6  D7EF               	goto	l8612
  3914  0001D8  0A01               	xorlw	1	; case 1
  3915  0001DA  B4D8               	btfsc	status,2,c
  3916  0001DC  D7F0               	goto	l8614
  3917  0001DE  0A03               	xorlw	3	; case 2
  3918  0001E0  A4D8               	btfss	status,2,c
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;app_custom_cdc.c: 211: break;
  3922  0001E2  0012               	return	
  3923  0001E4  D7F0               	goto	l8616
  3924  0001E6                     l8622:
  3925                           
  3926                           ; BSR set to: 1
  3927                           ;app_custom_cdc.c: 214: res = list_Program();
  3928  0001E6  EC2B  F020         	call	_list_Program	;wreg free
  3929  0001EA  C0C7  F2F0         	movff	?_list_Program,APP_CustomCDCTasks@res
  3930  0001EE  C0C8  F2F1         	movff	?_list_Program+1,APP_CustomCDCTasks@res+1
  3931                           
  3932                           ;app_custom_cdc.c: 215: if (res != OK)
  3933  0001F2  0102               	movlb	2	; () banked
  3934  0001F4  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  3935  0001F6  0102               	movlb	2	; () banked
  3936  0001F8  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  3937  0001FA  B4D8               	btfsc	status,2,c
  3938  0001FC  D012               	goto	l8630
  3939                           
  3940                           ; BSR set to: 2
  3941                           ;app_custom_cdc.c: 216: {
  3942                           ;app_custom_cdc.c: 217: strcpy(msg_Error,"Program list Error");
  3943  0001FE  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  3944  000200  0100               	movlb	0	; () banked
  3945  000202  6FC7               	movwf	strcpy@to& (0+255),b
  3946  000204  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  3947  000206  0100               	movlb	0	; () banked
  3948  000208  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  3949  00020A  0E8B               	movlw	low STR_6
  3950  00020C  0100               	movlb	0	; () banked
  3951  00020E  6FC9               	movwf	strcpy@from& (0+255),b
  3952  000210  0E7F               	movlw	high STR_6
  3953  000212  0100               	movlb	0	; () banked
  3954  000214  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  3955  000216  EC24  F01F         	call	_strcpy	;wreg free
  3956                           
  3957                           ;app_custom_cdc.c: 218: cur_State = CHARGE_ERROR;
  3958  00021A  0E18               	movlw	24
  3959  00021C  0101               	movlb	1	; () banked
  3960  00021E  6F0C               	movwf	_cur_State& (0+255),b
  3961                           
  3962                           ;app_custom_cdc.c: 219: }
  3963  000220  0012               	return	
  3964  000222                     l8630:
  3965                           
  3966                           ;app_custom_cdc.c: 220: else
  3967                           ;app_custom_cdc.c: 221: {
  3968                           ;app_custom_cdc.c: 222: cur_State = PROGRAM_LISTED;
  3969  000222  0E09               	movlw	9
  3970  000224  0101               	movlb	1	; () banked
  3971  000226  6F0C               	movwf	_cur_State& (0+255),b
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;app_custom_cdc.c: 223: }
  3975                           ;app_custom_cdc.c: 224: break;
  3976  000228  0012               	return	
  3977  00022A                     l8632:
  3978                           
  3979                           ; BSR set to: 1
  3980                           ;app_custom_cdc.c: 227: select_Program();
  3981  00022A  EC52  F020         	call	_select_Program	;wreg free
  3982                           
  3983                           ;app_custom_cdc.c: 228: cur_State = PROGRAM_SELECTED;
  3984  00022E  0E0A               	movlw	10
  3985  000230  0101               	movlb	1	; () banked
  3986  000232  6F0C               	movwf	_cur_State& (0+255),b
  3987                           
  3988                           ;app_custom_cdc.c: 229: break;
  3989  000234  0012               	return	
  3990  000236                     l8636:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;app_custom_cdc.c: 236: if (strncmp(battery.battery_type, algo_Name[0], 5))
  3994  000236  0E17               	movlw	low (_battery+10)
  3995  000238  0100               	movlb	0	; () banked
  3996  00023A  6FC7               	movwf	strncmp@s1& (0+255),b
  3997  00023C  0E01               	movlw	high (_battery+10)
  3998  00023E  0100               	movlb	0	; () banked
  3999  000240  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4000  000242  0E92               	movlw	low _algo_Name
  4001  000244  0100               	movlb	0	; () banked
  4002  000246  6FC9               	movwf	strncmp@s2& (0+255),b
  4003  000248  0E01               	movlw	high _algo_Name
  4004  00024A  0100               	movlb	0	; () banked
  4005  00024C  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4006  00024E  0E00               	movlw	0
  4007  000250  0100               	movlb	0	; () banked
  4008  000252  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4009  000254  0E05               	movlw	5
  4010  000256  6FCB               	movwf	strncmp@len& (0+255),b
  4011  000258  EC53  F017         	call	_strncmp	;wreg free
  4012  00025C  0100               	movlb	0	; () banked
  4013  00025E  51C7               	movf	?_strncmp& (0+255),w,b
  4014  000260  0100               	movlb	0	; () banked
  4015  000262  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4016  000264  B4D8               	btfsc	status,2,c
  4017  000266  D022               	goto	l8648
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;app_custom_cdc.c: 237: {
  4021                           ;app_custom_cdc.c: 238: res = check_Lipo();
  4022  000268  EC49  F020         	call	_check_Lipo	;wreg free
  4023  00026C  C0C7  F2F0         	movff	?_check_Lipo,APP_CustomCDCTasks@res
  4024  000270  C0C8  F2F1         	movff	?_check_Lipo+1,APP_CustomCDCTasks@res+1
  4025                           
  4026                           ;app_custom_cdc.c: 239: if (res != OK)
  4027  000274  0102               	movlb	2	; () banked
  4028  000276  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4029  000278  0102               	movlb	2	; () banked
  4030  00027A  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4031  00027C  B4D8               	btfsc	status,2,c
  4032  00027E  D012               	goto	l8646
  4033                           
  4034                           ; BSR set to: 2
  4035                           ;app_custom_cdc.c: 240: {
  4036                           ;app_custom_cdc.c: 241: strcpy(msg_Error,"Liop check failure");
  4037  000280  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4038  000282  0100               	movlb	0	; () banked
  4039  000284  6FC7               	movwf	strcpy@to& (0+255),b
  4040  000286  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4041  000288  0100               	movlb	0	; () banked
  4042  00028A  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4043  00028C  0E78               	movlw	low STR_7
  4044  00028E  0100               	movlb	0	; () banked
  4045  000290  6FC9               	movwf	strcpy@from& (0+255),b
  4046  000292  0E7F               	movlw	high STR_7
  4047  000294  0100               	movlb	0	; () banked
  4048  000296  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4049  000298  EC24  F01F         	call	_strcpy	;wreg free
  4050                           
  4051                           ;app_custom_cdc.c: 242: cur_State = CHARGE_ERROR;
  4052  00029C  0E18               	movlw	24
  4053  00029E  0101               	movlb	1	; () banked
  4054  0002A0  6F0C               	movwf	_cur_State& (0+255),b
  4055                           
  4056                           ;app_custom_cdc.c: 243: }
  4057  0002A2  0012               	return	
  4058  0002A4                     l8646:
  4059                           
  4060                           ;app_custom_cdc.c: 244: else
  4061                           ;app_custom_cdc.c: 245: {
  4062                           ;app_custom_cdc.c: 246: cur_State = LIPO_ALGO_STARTED;
  4063  0002A4  0E0B               	movlw	11
  4064  0002A6  0101               	movlb	1	; () banked
  4065  0002A8  6F0C               	movwf	_cur_State& (0+255),b
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;app_custom_cdc.c: 247: }
  4069                           ;app_custom_cdc.c: 248: }
  4070  0002AA  0012               	return	
  4071  0002AC                     l8648:
  4072                           
  4073                           ;app_custom_cdc.c: 250: else if (strncmp(battery.battery_type, algo_Name[1], 5))
  4074  0002AC  0E17               	movlw	low (_battery+10)
  4075  0002AE  0100               	movlb	0	; () banked
  4076  0002B0  6FC7               	movwf	strncmp@s1& (0+255),b
  4077  0002B2  0E01               	movlw	high (_battery+10)
  4078  0002B4  0100               	movlb	0	; () banked
  4079  0002B6  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4080  0002B8  0E97               	movlw	low (_algo_Name+5)
  4081  0002BA  0100               	movlb	0	; () banked
  4082  0002BC  6FC9               	movwf	strncmp@s2& (0+255),b
  4083  0002BE  0E01               	movlw	high (_algo_Name+5)
  4084  0002C0  0100               	movlb	0	; () banked
  4085  0002C2  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4086  0002C4  0E00               	movlw	0
  4087  0002C6  0100               	movlb	0	; () banked
  4088  0002C8  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4089  0002CA  0E05               	movlw	5
  4090  0002CC  6FCB               	movwf	strncmp@len& (0+255),b
  4091  0002CE  EC53  F017         	call	_strncmp	;wreg free
  4092  0002D2  0100               	movlb	0	; () banked
  4093  0002D4  51C7               	movf	?_strncmp& (0+255),w,b
  4094  0002D6  0100               	movlb	0	; () banked
  4095  0002D8  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4096  0002DA  A4D8               	btfss	status,2,c
  4097  0002DC  0012               	return	
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;app_custom_cdc.c: 255: else if (strncmp(battery.battery_type, algo_Name[2], 5))
  4101                           
  4102                           ; BSR set to: 0
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;app_custom_cdc.c: 251: {
  4106                           ;app_custom_cdc.c: 253: }
  4107  0002DE  0E17               	movlw	low (_battery+10)
  4108  0002E0  0100               	movlb	0	; () banked
  4109  0002E2  6FC7               	movwf	strncmp@s1& (0+255),b
  4110  0002E4  0E01               	movlw	high (_battery+10)
  4111  0002E6  0100               	movlb	0	; () banked
  4112  0002E8  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4113  0002EA  0E9C               	movlw	low (_algo_Name+10)
  4114  0002EC  0100               	movlb	0	; () banked
  4115  0002EE  6FC9               	movwf	strncmp@s2& (0+255),b
  4116  0002F0  0E01               	movlw	high (_algo_Name+10)
  4117  0002F2  0100               	movlb	0	; () banked
  4118  0002F4  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4119  0002F6  0E00               	movlw	0
  4120  0002F8  0100               	movlb	0	; () banked
  4121  0002FA  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4122  0002FC  0E05               	movlw	5
  4123  0002FE  6FCB               	movwf	strncmp@len& (0+255),b
  4124  000300  EC53  F017         	call	_strncmp	;wreg free
  4125                           
  4126                           ;app_custom_cdc.c: 277: }
  4127                           
  4128                           ;app_custom_cdc.c: 276: break;
  4129                           
  4130                           ;app_custom_cdc.c: 274: default :
  4131                           
  4132                           ;app_custom_cdc.c: 272: break;
  4133                           
  4134                           ;app_custom_cdc.c: 270: case BALANCE :
  4135                           
  4136                           ;app_custom_cdc.c: 269: break;
  4137                           
  4138                           ;app_custom_cdc.c: 267: case CYCLE :
  4139                           
  4140                           ;app_custom_cdc.c: 266: break;
  4141                           
  4142                           ;app_custom_cdc.c: 264: case DISCHARGE :
  4143                           
  4144                           ;app_custom_cdc.c: 263: break;
  4145                           
  4146                           ;app_custom_cdc.c: 261: case STORAGE :
  4147                           
  4148                           ;app_custom_cdc.c: 258: }
  4149                           ;app_custom_cdc.c: 259: break;
  4150                           
  4151                           ;app_custom_cdc.c: 256: {
  4152  000304  0012               	return	
  4153  000306                     l8656:
  4154  000306  0101               	movlb	1	; () banked
  4155  000308  510B               	movf	_cur_Program& (0+255),w,b
  4156                           
  4157                           ; Switch size 1, requested type "space"
  4158                           ; Number of cases is 5, Range of values is 0 to 4
  4159                           ; switch strategies available:
  4160                           ; Name         Instructions Cycles
  4161                           ; simple_byte           16     9 (average)
  4162                           ;	Chosen strategy is simple_byte
  4163  00030A  0A00               	xorlw	0	; case 0
  4164  00030C  B4D8               	btfsc	status,2,c
  4165  00030E  D793               	goto	l8636
  4166  000310  0A01               	xorlw	1	; case 1
  4167  000312  B4D8               	btfsc	status,2,c
  4168  000314  0012               	return	
  4169  000316  0A03               	xorlw	3	; case 2
  4170  000318  B4D8               	btfsc	status,2,c
  4171  00031A  0012               	return	
  4172  00031C  0A01               	xorlw	1	; case 3
  4173  00031E  B4D8               	btfsc	status,2,c
  4174  000320  0012               	return	
  4175  000322  0A07               	xorlw	7	; case 4
  4176                           
  4177                           ; BSR set to: 1
  4178                           ;app_custom_cdc.c: 278: break;
  4179  000324  0012               	return	
  4180  000326                     l8658:
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;app_custom_cdc.c: 281: res = check_Precondition(&precondition);
  4184  000326  0EEE               	movlw	low APP_CustomCDCTasks@precondition
  4185  000328  0101               	movlb	1	; () banked
  4186  00032A  6F84               	movwf	check_Precondition@precondition& (0+255),b
  4187  00032C  0E02               	movlw	high APP_CustomCDCTasks@precondition
  4188  00032E  0101               	movlb	1	; () banked
  4189  000330  6F85               	movwf	(check_Precondition@precondition+1)& (0+255),b
  4190  000332  ECD2  F014         	call	_check_Precondition	;wreg free
  4191  000336  C184  F2F0         	movff	?_check_Precondition,APP_CustomCDCTasks@res
  4192  00033A  C185  F2F1         	movff	?_check_Precondition+1,APP_CustomCDCTasks@res+1
  4193                           
  4194                           ;app_custom_cdc.c: 282: if (res != OK)
  4195  00033E  0102               	movlb	2	; () banked
  4196  000340  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4197  000342  0102               	movlb	2	; () banked
  4198  000344  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4199  000346  B4D8               	btfsc	status,2,c
  4200  000348  D012               	goto	l8666
  4201                           
  4202                           ; BSR set to: 2
  4203                           ;app_custom_cdc.c: 283: {
  4204                           ;app_custom_cdc.c: 284: strcpy(msg_Error,"Precondition check failure");
  4205  00034A  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4206  00034C  0100               	movlb	0	; () banked
  4207  00034E  6FC7               	movwf	strcpy@to& (0+255),b
  4208  000350  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4209  000352  0100               	movlb	0	; () banked
  4210  000354  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4211  000356  0EAE               	movlw	low STR_8
  4212  000358  0100               	movlb	0	; () banked
  4213  00035A  6FC9               	movwf	strcpy@from& (0+255),b
  4214  00035C  0E7E               	movlw	high STR_8
  4215  00035E  0100               	movlb	0	; () banked
  4216  000360  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4217  000362  EC24  F01F         	call	_strcpy	;wreg free
  4218                           
  4219                           ;app_custom_cdc.c: 285: cur_State = CHARGE_ERROR;
  4220  000366  0E18               	movlw	24
  4221  000368  0101               	movlb	1	; () banked
  4222  00036A  6F0C               	movwf	_cur_State& (0+255),b
  4223                           
  4224                           ;app_custom_cdc.c: 286: }
  4225  00036C  0012               	return	
  4226  00036E                     l8666:
  4227                           
  4228                           ;app_custom_cdc.c: 287: else
  4229                           ;app_custom_cdc.c: 288: {
  4230                           ;app_custom_cdc.c: 289: cur_State = PRECONDITION_SELECTED;
  4231  00036E  0E0D               	movlw	13
  4232  000370  0101               	movlb	1	; () banked
  4233  000372  6F0C               	movwf	_cur_State& (0+255),b
  4234                           
  4235                           ; BSR set to: 1
  4236                           ;app_custom_cdc.c: 290: }
  4237                           ;app_custom_cdc.c: 291: break;
  4238  000374  0012               	return	
  4239  000376                     l8668:
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;app_custom_cdc.c: 294: if (precondition)
  4243  000376  0102               	movlb	2	; () banked
  4244  000378  51EE               	movf	APP_CustomCDCTasks@precondition& (0+255),w,b
  4245  00037A  0102               	movlb	2	; () banked
  4246  00037C  11EF               	iorwf	(APP_CustomCDCTasks@precondition+1)& (0+255),w,b
  4247  00037E  B4D8               	btfsc	status,2,c
  4248  000380  D022               	goto	l8680
  4249                           
  4250                           ; BSR set to: 2
  4251                           ;app_custom_cdc.c: 295: {
  4252                           ;app_custom_cdc.c: 296: res = start_Precondition();
  4253  000382  ECFB  F01D         	call	_start_Precondition	;wreg free
  4254  000386  C18B  F2F0         	movff	?_start_Precondition,APP_CustomCDCTasks@res
  4255  00038A  C18C  F2F1         	movff	?_start_Precondition+1,APP_CustomCDCTasks@res+1
  4256                           
  4257                           ;app_custom_cdc.c: 297: if (res != OK)
  4258  00038E  0102               	movlb	2	; () banked
  4259  000390  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4260  000392  0102               	movlb	2	; () banked
  4261  000394  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4262  000396  B4D8               	btfsc	status,2,c
  4263  000398  D012               	goto	l8678
  4264                           
  4265                           ; BSR set to: 2
  4266                           ;app_custom_cdc.c: 298: {
  4267                           ;app_custom_cdc.c: 299: strcpy(msg_Error,"Precondition starting failure");
  4268  00039A  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4269  00039C  0100               	movlb	0	; () banked
  4270  00039E  6FC7               	movwf	strcpy@to& (0+255),b
  4271  0003A0  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4272  0003A2  0100               	movlb	0	; () banked
  4273  0003A4  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4274  0003A6  0E90               	movlw	low STR_9
  4275  0003A8  0100               	movlb	0	; () banked
  4276  0003AA  6FC9               	movwf	strcpy@from& (0+255),b
  4277  0003AC  0E7E               	movlw	high STR_9
  4278  0003AE  0100               	movlb	0	; () banked
  4279  0003B0  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4280  0003B2  EC24  F01F         	call	_strcpy	;wreg free
  4281                           
  4282                           ;app_custom_cdc.c: 300: cur_State = CHARGE_ERROR;
  4283  0003B6  0E18               	movlw	24
  4284  0003B8  0101               	movlb	1	; () banked
  4285  0003BA  6F0C               	movwf	_cur_State& (0+255),b
  4286                           
  4287                           ;app_custom_cdc.c: 301: }
  4288  0003BC  0012               	return	
  4289  0003BE                     l8678:
  4290                           
  4291                           ;app_custom_cdc.c: 302: else
  4292                           ;app_custom_cdc.c: 303: {
  4293                           ;app_custom_cdc.c: 304: cur_State = PRECONDITION_STARTED;
  4294  0003BE  0E0E               	movlw	14
  4295  0003C0  0101               	movlb	1	; () banked
  4296  0003C2  6F0C               	movwf	_cur_State& (0+255),b
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;app_custom_cdc.c: 305: }
  4300                           ;app_custom_cdc.c: 306: }
  4301  0003C4  0012               	return	
  4302  0003C6                     l8680:
  4303                           
  4304                           ;app_custom_cdc.c: 307: else
  4305                           ;app_custom_cdc.c: 308: {
  4306                           ;app_custom_cdc.c: 309: res = start_CC();
  4307  0003C6  EC25  F01E         	call	_start_CC	;wreg free
  4308  0003CA  C18B  F2F0         	movff	?_start_CC,APP_CustomCDCTasks@res
  4309  0003CE  C18C  F2F1         	movff	?_start_CC+1,APP_CustomCDCTasks@res+1
  4310                           
  4311                           ;app_custom_cdc.c: 310: if (res != OK)
  4312  0003D2  0102               	movlb	2	; () banked
  4313  0003D4  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4314  0003D6  0102               	movlb	2	; () banked
  4315  0003D8  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4316  0003DA  B4D8               	btfsc	status,2,c
  4317  0003DC  D012               	goto	l8688
  4318                           
  4319                           ; BSR set to: 2
  4320                           ;app_custom_cdc.c: 311: {
  4321                           ;app_custom_cdc.c: 312: strcpy(msg_Error,"CC starting failure");
  4322  0003DE  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4323  0003E0  0100               	movlb	0	; () banked
  4324  0003E2  6FC7               	movwf	strcpy@to& (0+255),b
  4325  0003E4  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4326  0003E6  0100               	movlb	0	; () banked
  4327  0003E8  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4328  0003EA  0E3D               	movlw	low STR_10
  4329  0003EC  0100               	movlb	0	; () banked
  4330  0003EE  6FC9               	movwf	strcpy@from& (0+255),b
  4331  0003F0  0E7F               	movlw	high STR_10
  4332  0003F2  0100               	movlb	0	; () banked
  4333  0003F4  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4334  0003F6  EC24  F01F         	call	_strcpy	;wreg free
  4335                           
  4336                           ;app_custom_cdc.c: 313: cur_State = CHARGE_ERROR;
  4337  0003FA  0E18               	movlw	24
  4338  0003FC  0101               	movlb	1	; () banked
  4339  0003FE  6F0C               	movwf	_cur_State& (0+255),b
  4340                           
  4341                           ;app_custom_cdc.c: 314: }
  4342  000400  0012               	return	
  4343  000402                     l8688:
  4344                           
  4345                           ;app_custom_cdc.c: 315: else
  4346                           ;app_custom_cdc.c: 316: {
  4347                           ;app_custom_cdc.c: 317: cur_State = CC_PHASE_STARTED;
  4348  000402  0E11               	movlw	17
  4349  000404  0101               	movlb	1	; () banked
  4350  000406  6F0C               	movwf	_cur_State& (0+255),b
  4351                           
  4352                           ; BSR set to: 1
  4353                           ;app_custom_cdc.c: 318: }
  4354                           ;app_custom_cdc.c: 319: }
  4355                           ;app_custom_cdc.c: 320: break;
  4356                           
  4357                           ; BSR set to: 1
  4358  000408  0012               	return	
  4359  00040A                     l8690:
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;app_custom_cdc.c: 323: case PRECONDITION_VERIFICATION :
  4363                           ;app_custom_cdc.c: 324: res = verifie_Precondition(end);
  4364  00040A  0EE4               	movlw	low APP_CustomCDCTasks@end
  4365  00040C  0101               	movlb	1	; () banked
  4366  00040E  6F8B               	movwf	verifie_Precondition@end& (0+255),b
  4367  000410  0E02               	movlw	high APP_CustomCDCTasks@end
  4368  000412  0101               	movlb	1	; () banked
  4369  000414  6F8C               	movwf	(verifie_Precondition@end+1)& (0+255),b
  4370  000416  EC8B  F00C         	call	_verifie_Precondition	;wreg free
  4371  00041A  C18B  F2F0         	movff	?_verifie_Precondition,APP_CustomCDCTasks@res
  4372  00041E  C18C  F2F1         	movff	?_verifie_Precondition+1,APP_CustomCDCTasks@res+1
  4373                           
  4374                           ;app_custom_cdc.c: 325: if (res != OK)
  4375  000422  0102               	movlb	2	; () banked
  4376  000424  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4377  000426  0102               	movlb	2	; () banked
  4378  000428  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4379  00042A  B4D8               	btfsc	status,2,c
  4380  00042C  D012               	goto	l8698
  4381                           
  4382                           ; BSR set to: 2
  4383                           ;app_custom_cdc.c: 326: {
  4384                           ;app_custom_cdc.c: 327: strcpy(msg_Error,"precondition verification failure");
  4385  00042E  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4386  000430  0100               	movlb	0	; () banked
  4387  000432  6FC7               	movwf	strcpy@to& (0+255),b
  4388  000434  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4389  000436  0100               	movlb	0	; () banked
  4390  000438  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4391  00043A  0E2D               	movlw	low STR_11
  4392  00043C  0100               	movlb	0	; () banked
  4393  00043E  6FC9               	movwf	strcpy@from& (0+255),b
  4394  000440  0E7E               	movlw	high STR_11
  4395  000442  0100               	movlb	0	; () banked
  4396  000444  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4397  000446  EC24  F01F         	call	_strcpy	;wreg free
  4398                           
  4399                           ;app_custom_cdc.c: 328: cur_State = CHARGE_ERROR;
  4400  00044A  0E18               	movlw	24
  4401  00044C  0101               	movlb	1	; () banked
  4402  00044E  6F0C               	movwf	_cur_State& (0+255),b
  4403                           
  4404                           ;app_custom_cdc.c: 329: }
  4405  000450  0012               	return	
  4406  000452                     l8698:
  4407                           
  4408                           ;app_custom_cdc.c: 330: else
  4409                           ;app_custom_cdc.c: 331: {
  4410                           ;app_custom_cdc.c: 332: if (strncmp(end,"END",3))
  4411  000452  0EE4               	movlw	low APP_CustomCDCTasks@end
  4412  000454  0100               	movlb	0	; () banked
  4413  000456  6FC7               	movwf	strncmp@s1& (0+255),b
  4414  000458  0E02               	movlw	high APP_CustomCDCTasks@end
  4415  00045A  0100               	movlb	0	; () banked
  4416  00045C  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4417  00045E  0EF7               	movlw	low STR_12
  4418  000460  0100               	movlb	0	; () banked
  4419  000462  6FC9               	movwf	strncmp@s2& (0+255),b
  4420  000464  0E7F               	movlw	high STR_12
  4421  000466  0100               	movlb	0	; () banked
  4422  000468  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4423  00046A  0E00               	movlw	0
  4424  00046C  0100               	movlb	0	; () banked
  4425  00046E  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4426  000470  0E03               	movlw	3
  4427  000472  6FCB               	movwf	strncmp@len& (0+255),b
  4428  000474  EC53  F017         	call	_strncmp	;wreg free
  4429  000478  0100               	movlb	0	; () banked
  4430  00047A  51C7               	movf	?_strncmp& (0+255),w,b
  4431  00047C  0100               	movlb	0	; () banked
  4432  00047E  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4433  000480  B4D8               	btfsc	status,2,c
  4434  000482  D004               	goto	l8702
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;app_custom_cdc.c: 333: {
  4438                           ;app_custom_cdc.c: 334: cur_State = PRECONDITION_ENDED;
  4439  000484  0E10               	movlw	16
  4440  000486  0101               	movlb	1	; () banked
  4441  000488  6F0C               	movwf	_cur_State& (0+255),b
  4442                           
  4443                           ;app_custom_cdc.c: 335: }
  4444  00048A  0012               	return	
  4445  00048C                     l8702:
  4446                           
  4447                           ;app_custom_cdc.c: 336: else if (strncmp(end,"TIMER",5))
  4448  00048C  0EE4               	movlw	low APP_CustomCDCTasks@end
  4449  00048E  0100               	movlb	0	; () banked
  4450  000490  6FC7               	movwf	strncmp@s1& (0+255),b
  4451  000492  0E02               	movlw	high APP_CustomCDCTasks@end
  4452  000494  0100               	movlb	0	; () banked
  4453  000496  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4454  000498  0EF1               	movlw	low STR_13
  4455  00049A  0100               	movlb	0	; () banked
  4456  00049C  6FC9               	movwf	strncmp@s2& (0+255),b
  4457  00049E  0E7F               	movlw	high STR_13
  4458  0004A0  0100               	movlb	0	; () banked
  4459  0004A2  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4460  0004A4  0E00               	movlw	0
  4461  0004A6  0100               	movlb	0	; () banked
  4462  0004A8  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4463  0004AA  0E05               	movlw	5
  4464  0004AC  6FCB               	movwf	strncmp@len& (0+255),b
  4465  0004AE  EC53  F017         	call	_strncmp	;wreg free
  4466  0004B2  0100               	movlb	0	; () banked
  4467  0004B4  51C7               	movf	?_strncmp& (0+255),w,b
  4468  0004B6  0100               	movlb	0	; () banked
  4469  0004B8  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4470  0004BA  B4D8               	btfsc	status,2,c
  4471  0004BC  D012               	goto	l8708
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;app_custom_cdc.c: 337: {
  4475                           ;app_custom_cdc.c: 338: strcpy(msg_Error,"Precondition safety timer ended");
  4476  0004BE  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4477  0004C0  0100               	movlb	0	; () banked
  4478  0004C2  6FC7               	movwf	strcpy@to& (0+255),b
  4479  0004C4  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4480  0004C6  0100               	movlb	0	; () banked
  4481  0004C8  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4482  0004CA  0E70               	movlw	low STR_14
  4483  0004CC  0100               	movlb	0	; () banked
  4484  0004CE  6FC9               	movwf	strcpy@from& (0+255),b
  4485  0004D0  0E7E               	movlw	high STR_14
  4486  0004D2  0100               	movlb	0	; () banked
  4487  0004D4  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4488  0004D6  EC24  F01F         	call	_strcpy	;wreg free
  4489                           
  4490                           ;app_custom_cdc.c: 339: cur_State = CHARGE_ERROR;
  4491  0004DA  0E18               	movlw	24
  4492  0004DC  0101               	movlb	1	; () banked
  4493  0004DE  6F0C               	movwf	_cur_State& (0+255),b
  4494                           
  4495                           ;app_custom_cdc.c: 340: }
  4496  0004E0  0012               	return	
  4497  0004E2                     l8708:
  4498                           
  4499                           ;app_custom_cdc.c: 341: else if (strncmp(end,"PROGRESS",8))
  4500  0004E2  0EE4               	movlw	low APP_CustomCDCTasks@end
  4501  0004E4  0100               	movlb	0	; () banked
  4502  0004E6  6FC7               	movwf	strncmp@s1& (0+255),b
  4503  0004E8  0E02               	movlw	high APP_CustomCDCTasks@end
  4504  0004EA  0100               	movlb	0	; () banked
  4505  0004EC  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4506  0004EE  0EE2               	movlw	low STR_15
  4507  0004F0  0100               	movlb	0	; () banked
  4508  0004F2  6FC9               	movwf	strncmp@s2& (0+255),b
  4509  0004F4  0E7F               	movlw	high STR_15
  4510  0004F6  0100               	movlb	0	; () banked
  4511  0004F8  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4512  0004FA  0E00               	movlw	0
  4513  0004FC  0100               	movlb	0	; () banked
  4514  0004FE  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4515  000500  0E08               	movlw	8
  4516  000502  6FCB               	movwf	strncmp@len& (0+255),b
  4517  000504  EC53  F017         	call	_strncmp	;wreg free
  4518  000508  0100               	movlb	0	; () banked
  4519  00050A  51C7               	movf	?_strncmp& (0+255),w,b
  4520  00050C  0100               	movlb	0	; () banked
  4521  00050E  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4522  000510  B4D8               	btfsc	status,2,c
  4523  000512  0012               	return	
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;app_custom_cdc.c: 342: {
  4527                           ;app_custom_cdc.c: 343: cur_State = PRECONDITION_VERIFICATION;
  4528  000514  0E0F               	movlw	15
  4529  000516  0101               	movlb	1	; () banked
  4530  000518  6F0C               	movwf	_cur_State& (0+255),b
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;app_custom_cdc.c: 344: }
  4534                           ;app_custom_cdc.c: 345: }
  4535                           ;app_custom_cdc.c: 346: break;
  4536                           
  4537                           ; BSR set to: 1
  4538                           
  4539                           ; BSR set to: 1
  4540                           
  4541                           ; BSR set to: 1
  4542  00051A  0012               	return	
  4543  00051C                     l8712:
  4544                           
  4545                           ; BSR set to: 1
  4546                           ;app_custom_cdc.c: 349: res = start_CC();
  4547  00051C  EC25  F01E         	call	_start_CC	;wreg free
  4548  000520  C18B  F2F0         	movff	?_start_CC,APP_CustomCDCTasks@res
  4549  000524  C18C  F2F1         	movff	?_start_CC+1,APP_CustomCDCTasks@res+1
  4550                           
  4551                           ;app_custom_cdc.c: 350: if (res != OK)
  4552  000528  0102               	movlb	2	; () banked
  4553  00052A  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4554  00052C  0102               	movlb	2	; () banked
  4555  00052E  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4556  000530  B4D8               	btfsc	status,2,c
  4557  000532  D012               	goto	l8720
  4558                           
  4559                           ; BSR set to: 2
  4560                           ;app_custom_cdc.c: 351: {
  4561                           ;app_custom_cdc.c: 352: strcpy(msg_Error,"CC starting failure");
  4562  000534  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4563  000536  0100               	movlb	0	; () banked
  4564  000538  6FC7               	movwf	strcpy@to& (0+255),b
  4565  00053A  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4566  00053C  0100               	movlb	0	; () banked
  4567  00053E  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4568  000540  0E3D               	movlw	low STR_10
  4569  000542  0100               	movlb	0	; () banked
  4570  000544  6FC9               	movwf	strcpy@from& (0+255),b
  4571  000546  0E7F               	movlw	high STR_10
  4572  000548  0100               	movlb	0	; () banked
  4573  00054A  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4574  00054C  EC24  F01F         	call	_strcpy	;wreg free
  4575                           
  4576                           ;app_custom_cdc.c: 353: cur_State = CHARGE_ERROR;
  4577  000550  0E18               	movlw	24
  4578  000552  0101               	movlb	1	; () banked
  4579  000554  6F0C               	movwf	_cur_State& (0+255),b
  4580                           
  4581                           ;app_custom_cdc.c: 354: }
  4582  000556  0012               	return	
  4583  000558                     l8720:
  4584                           
  4585                           ;app_custom_cdc.c: 355: else
  4586                           ;app_custom_cdc.c: 356: {
  4587                           ;app_custom_cdc.c: 357: cur_State = CC_PHASE_STARTED;
  4588  000558  0E11               	movlw	17
  4589  00055A  0101               	movlb	1	; () banked
  4590  00055C  6F0C               	movwf	_cur_State& (0+255),b
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;app_custom_cdc.c: 358: }
  4594                           ;app_custom_cdc.c: 359: break;
  4595  00055E  0012               	return	
  4596  000560                     l8722:
  4597                           
  4598                           ; BSR set to: 1
  4599                           ;app_custom_cdc.c: 362: case VBAT_VERIFICATION :
  4600                           ;app_custom_cdc.c: 363: res = verifie_Vbat(end);
  4601  000560  0EE4               	movlw	low APP_CustomCDCTasks@end
  4602  000562  0101               	movlb	1	; () banked
  4603  000564  6F8B               	movwf	verifie_Vbat@end& (0+255),b
  4604  000566  0E02               	movlw	high APP_CustomCDCTasks@end
  4605  000568  0101               	movlb	1	; () banked
  4606  00056A  6F8C               	movwf	(verifie_Vbat@end+1)& (0+255),b
  4607  00056C  ECC7  F00B         	call	_verifie_Vbat	;wreg free
  4608  000570  C18B  F2F0         	movff	?_verifie_Vbat,APP_CustomCDCTasks@res
  4609  000574  C18C  F2F1         	movff	?_verifie_Vbat+1,APP_CustomCDCTasks@res+1
  4610                           
  4611                           ;app_custom_cdc.c: 364: if (res != OK)
  4612  000578  0102               	movlb	2	; () banked
  4613  00057A  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4614  00057C  0102               	movlb	2	; () banked
  4615  00057E  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4616  000580  B4D8               	btfsc	status,2,c
  4617  000582  D012               	goto	l8730
  4618                           
  4619                           ; BSR set to: 2
  4620                           ;app_custom_cdc.c: 365: {
  4621                           ;app_custom_cdc.c: 366: strcpy(msg_Error,"CC verification failure");
  4622  000584  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4623  000586  0100               	movlb	0	; () banked
  4624  000588  6FC7               	movwf	strcpy@to& (0+255),b
  4625  00058A  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4626  00058C  0100               	movlb	0	; () banked
  4627  00058E  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4628  000590  0EE1               	movlw	low STR_17
  4629  000592  0100               	movlb	0	; () banked
  4630  000594  6FC9               	movwf	strcpy@from& (0+255),b
  4631  000596  0E7E               	movlw	high STR_17
  4632  000598  0100               	movlb	0	; () banked
  4633  00059A  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4634  00059C  EC24  F01F         	call	_strcpy	;wreg free
  4635                           
  4636                           ;app_custom_cdc.c: 367: cur_State = CHARGE_ERROR;
  4637  0005A0  0E18               	movlw	24
  4638  0005A2  0101               	movlb	1	; () banked
  4639  0005A4  6F0C               	movwf	_cur_State& (0+255),b
  4640                           
  4641                           ;app_custom_cdc.c: 368: }
  4642  0005A6  0012               	return	
  4643  0005A8                     l8730:
  4644                           
  4645                           ;app_custom_cdc.c: 369: else
  4646                           ;app_custom_cdc.c: 370: {
  4647                           ;app_custom_cdc.c: 371: if (strncmp(end,"END",3))
  4648  0005A8  0EE4               	movlw	low APP_CustomCDCTasks@end
  4649  0005AA  0100               	movlb	0	; () banked
  4650  0005AC  6FC7               	movwf	strncmp@s1& (0+255),b
  4651  0005AE  0E02               	movlw	high APP_CustomCDCTasks@end
  4652  0005B0  0100               	movlb	0	; () banked
  4653  0005B2  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4654  0005B4  0EF7               	movlw	low STR_12
  4655  0005B6  0100               	movlb	0	; () banked
  4656  0005B8  6FC9               	movwf	strncmp@s2& (0+255),b
  4657  0005BA  0E7F               	movlw	high STR_12
  4658  0005BC  0100               	movlb	0	; () banked
  4659  0005BE  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4660  0005C0  0E00               	movlw	0
  4661  0005C2  0100               	movlb	0	; () banked
  4662  0005C4  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4663  0005C6  0E03               	movlw	3
  4664  0005C8  6FCB               	movwf	strncmp@len& (0+255),b
  4665  0005CA  EC53  F017         	call	_strncmp	;wreg free
  4666  0005CE  0100               	movlb	0	; () banked
  4667  0005D0  51C7               	movf	?_strncmp& (0+255),w,b
  4668  0005D2  0100               	movlb	0	; () banked
  4669  0005D4  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4670  0005D6  B4D8               	btfsc	status,2,c
  4671  0005D8  D004               	goto	l8734
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;app_custom_cdc.c: 372: {
  4675                           ;app_custom_cdc.c: 373: cur_State = CC_PHASE_ENDED;
  4676  0005DA  0E13               	movlw	19
  4677  0005DC  0101               	movlb	1	; () banked
  4678  0005DE  6F0C               	movwf	_cur_State& (0+255),b
  4679                           
  4680                           ;app_custom_cdc.c: 374: }
  4681  0005E0  0012               	return	
  4682  0005E2                     l8734:
  4683                           
  4684                           ;app_custom_cdc.c: 375: else if (strncmp(end,"TIMER",5))
  4685  0005E2  0EE4               	movlw	low APP_CustomCDCTasks@end
  4686  0005E4  0100               	movlb	0	; () banked
  4687  0005E6  6FC7               	movwf	strncmp@s1& (0+255),b
  4688  0005E8  0E02               	movlw	high APP_CustomCDCTasks@end
  4689  0005EA  0100               	movlb	0	; () banked
  4690  0005EC  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4691  0005EE  0EF1               	movlw	low STR_13
  4692  0005F0  0100               	movlb	0	; () banked
  4693  0005F2  6FC9               	movwf	strncmp@s2& (0+255),b
  4694  0005F4  0E7F               	movlw	high STR_13
  4695  0005F6  0100               	movlb	0	; () banked
  4696  0005F8  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4697  0005FA  0E00               	movlw	0
  4698  0005FC  0100               	movlb	0	; () banked
  4699  0005FE  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4700  000600  0E05               	movlw	5
  4701  000602  6FCB               	movwf	strncmp@len& (0+255),b
  4702  000604  EC53  F017         	call	_strncmp	;wreg free
  4703  000608  0100               	movlb	0	; () banked
  4704  00060A  51C7               	movf	?_strncmp& (0+255),w,b
  4705  00060C  0100               	movlb	0	; () banked
  4706  00060E  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4707  000610  B4D8               	btfsc	status,2,c
  4708  000612  D012               	goto	l8740
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;app_custom_cdc.c: 376: {
  4712                           ;app_custom_cdc.c: 377: strcpy(msg_Error,"CC safety timer ended");
  4713  000614  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4714  000616  0100               	movlb	0	; () banked
  4715  000618  6FC7               	movwf	strcpy@to& (0+255),b
  4716  00061A  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4717  00061C  0100               	movlb	0	; () banked
  4718  00061E  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4719  000620  0E11               	movlw	low STR_20
  4720  000622  0100               	movlb	0	; () banked
  4721  000624  6FC9               	movwf	strcpy@from& (0+255),b
  4722  000626  0E7F               	movlw	high STR_20
  4723  000628  0100               	movlb	0	; () banked
  4724  00062A  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4725  00062C  EC24  F01F         	call	_strcpy	;wreg free
  4726                           
  4727                           ;app_custom_cdc.c: 378: cur_State = CHARGE_ERROR;
  4728  000630  0E18               	movlw	24
  4729  000632  0101               	movlb	1	; () banked
  4730  000634  6F0C               	movwf	_cur_State& (0+255),b
  4731                           
  4732                           ;app_custom_cdc.c: 379: }
  4733  000636  0012               	return	
  4734  000638                     l8740:
  4735                           
  4736                           ;app_custom_cdc.c: 380: else if (strncmp(end,"PROGRESS",8))
  4737  000638  0EE4               	movlw	low APP_CustomCDCTasks@end
  4738  00063A  0100               	movlb	0	; () banked
  4739  00063C  6FC7               	movwf	strncmp@s1& (0+255),b
  4740  00063E  0E02               	movlw	high APP_CustomCDCTasks@end
  4741  000640  0100               	movlb	0	; () banked
  4742  000642  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4743  000644  0EE2               	movlw	low STR_15
  4744  000646  0100               	movlb	0	; () banked
  4745  000648  6FC9               	movwf	strncmp@s2& (0+255),b
  4746  00064A  0E7F               	movlw	high STR_15
  4747  00064C  0100               	movlb	0	; () banked
  4748  00064E  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4749  000650  0E00               	movlw	0
  4750  000652  0100               	movlb	0	; () banked
  4751  000654  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4752  000656  0E08               	movlw	8
  4753  000658  6FCB               	movwf	strncmp@len& (0+255),b
  4754  00065A  EC53  F017         	call	_strncmp	;wreg free
  4755  00065E  0100               	movlb	0	; () banked
  4756  000660  51C7               	movf	?_strncmp& (0+255),w,b
  4757  000662  0100               	movlb	0	; () banked
  4758  000664  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4759  000666  B4D8               	btfsc	status,2,c
  4760  000668  0012               	return	
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;app_custom_cdc.c: 381: {
  4764                           ;app_custom_cdc.c: 382: cur_State = VBAT_VERIFICATION;
  4765  00066A  0E12               	movlw	18
  4766  00066C  0101               	movlb	1	; () banked
  4767  00066E  6F0C               	movwf	_cur_State& (0+255),b
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;app_custom_cdc.c: 383: }
  4771                           ;app_custom_cdc.c: 384: }
  4772                           ;app_custom_cdc.c: 385: break;
  4773                           
  4774                           ; BSR set to: 1
  4775                           
  4776                           ; BSR set to: 1
  4777                           
  4778                           ; BSR set to: 1
  4779  000670  0012               	return	
  4780  000672                     l8744:
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;app_custom_cdc.c: 388: res = start_CV();
  4784  000672  ECFB  F01C         	call	_start_CV	;wreg free
  4785  000676  C18B  F2F0         	movff	?_start_CV,APP_CustomCDCTasks@res
  4786  00067A  C18C  F2F1         	movff	?_start_CV+1,APP_CustomCDCTasks@res+1
  4787                           
  4788                           ;app_custom_cdc.c: 389: if (res != OK)
  4789  00067E  0102               	movlb	2	; () banked
  4790  000680  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4791  000682  0102               	movlb	2	; () banked
  4792  000684  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4793  000686  B4D8               	btfsc	status,2,c
  4794  000688  D012               	goto	l8752
  4795                           
  4796                           ; BSR set to: 2
  4797                           ;app_custom_cdc.c: 390: {
  4798                           ;app_custom_cdc.c: 391: strcpy(msg_Error,"CV starting failure");
  4799  00068A  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4800  00068C  0100               	movlb	0	; () banked
  4801  00068E  6FC7               	movwf	strcpy@to& (0+255),b
  4802  000690  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4803  000692  0100               	movlb	0	; () banked
  4804  000694  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4805  000696  0E51               	movlw	low STR_22
  4806  000698  0100               	movlb	0	; () banked
  4807  00069A  6FC9               	movwf	strcpy@from& (0+255),b
  4808  00069C  0E7F               	movlw	high STR_22
  4809  00069E  0100               	movlb	0	; () banked
  4810  0006A0  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4811  0006A2  EC24  F01F         	call	_strcpy	;wreg free
  4812                           
  4813                           ;app_custom_cdc.c: 392: cur_State = CHARGE_ERROR;
  4814  0006A6  0E18               	movlw	24
  4815  0006A8  0101               	movlb	1	; () banked
  4816  0006AA  6F0C               	movwf	_cur_State& (0+255),b
  4817                           
  4818                           ;app_custom_cdc.c: 393: }
  4819  0006AC  0012               	return	
  4820  0006AE                     l8752:
  4821                           
  4822                           ;app_custom_cdc.c: 394: else
  4823                           ;app_custom_cdc.c: 395: {
  4824                           ;app_custom_cdc.c: 396: cur_State = CV_PHASE_STARTED;
  4825  0006AE  0E14               	movlw	20
  4826  0006B0  0101               	movlb	1	; () banked
  4827  0006B2  6F0C               	movwf	_cur_State& (0+255),b
  4828                           
  4829                           ; BSR set to: 1
  4830                           ;app_custom_cdc.c: 397: }
  4831                           ;app_custom_cdc.c: 398: break;
  4832  0006B4  0012               	return	
  4833  0006B6                     l8754:
  4834                           
  4835                           ; BSR set to: 1
  4836                           ;app_custom_cdc.c: 401: case IBAT_VERIFICATION :
  4837                           ;app_custom_cdc.c: 402: res = verifie_Ibat(end);
  4838  0006B6  0EE4               	movlw	low APP_CustomCDCTasks@end
  4839  0006B8  0101               	movlb	1	; () banked
  4840  0006BA  6F8B               	movwf	verifie_Ibat@end& (0+255),b
  4841  0006BC  0E02               	movlw	high APP_CustomCDCTasks@end
  4842  0006BE  0101               	movlb	1	; () banked
  4843  0006C0  6F8C               	movwf	(verifie_Ibat@end+1)& (0+255),b
  4844  0006C2  EC4F  F00D         	call	_verifie_Ibat	;wreg free
  4845  0006C6  C18B  F2F0         	movff	?_verifie_Ibat,APP_CustomCDCTasks@res
  4846  0006CA  C18C  F2F1         	movff	?_verifie_Ibat+1,APP_CustomCDCTasks@res+1
  4847                           
  4848                           ;app_custom_cdc.c: 403: if (res != OK)
  4849  0006CE  0102               	movlb	2	; () banked
  4850  0006D0  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  4851  0006D2  0102               	movlb	2	; () banked
  4852  0006D4  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  4853  0006D6  B4D8               	btfsc	status,2,c
  4854  0006D8  D012               	goto	l8762
  4855                           
  4856                           ; BSR set to: 2
  4857                           ;app_custom_cdc.c: 404: {
  4858                           ;app_custom_cdc.c: 405: strcpy(msg_Error,"CV verification failure");
  4859  0006DA  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4860  0006DC  0100               	movlb	0	; () banked
  4861  0006DE  6FC7               	movwf	strcpy@to& (0+255),b
  4862  0006E0  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4863  0006E2  0100               	movlb	0	; () banked
  4864  0006E4  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4865  0006E6  0EF9               	movlw	low STR_23
  4866  0006E8  0100               	movlb	0	; () banked
  4867  0006EA  6FC9               	movwf	strcpy@from& (0+255),b
  4868  0006EC  0E7E               	movlw	high STR_23
  4869  0006EE  0100               	movlb	0	; () banked
  4870  0006F0  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4871  0006F2  EC24  F01F         	call	_strcpy	;wreg free
  4872                           
  4873                           ;app_custom_cdc.c: 406: cur_State = CHARGE_ERROR;
  4874  0006F6  0E18               	movlw	24
  4875  0006F8  0101               	movlb	1	; () banked
  4876  0006FA  6F0C               	movwf	_cur_State& (0+255),b
  4877                           
  4878                           ;app_custom_cdc.c: 407: }
  4879  0006FC  0012               	return	
  4880  0006FE                     l8762:
  4881                           
  4882                           ;app_custom_cdc.c: 408: else
  4883                           ;app_custom_cdc.c: 409: {
  4884                           ;app_custom_cdc.c: 410: if (strncmp(end,"END",3))
  4885  0006FE  0EE4               	movlw	low APP_CustomCDCTasks@end
  4886  000700  0100               	movlb	0	; () banked
  4887  000702  6FC7               	movwf	strncmp@s1& (0+255),b
  4888  000704  0E02               	movlw	high APP_CustomCDCTasks@end
  4889  000706  0100               	movlb	0	; () banked
  4890  000708  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4891  00070A  0EF7               	movlw	low STR_12
  4892  00070C  0100               	movlb	0	; () banked
  4893  00070E  6FC9               	movwf	strncmp@s2& (0+255),b
  4894  000710  0E7F               	movlw	high STR_12
  4895  000712  0100               	movlb	0	; () banked
  4896  000714  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4897  000716  0E00               	movlw	0
  4898  000718  0100               	movlb	0	; () banked
  4899  00071A  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4900  00071C  0E03               	movlw	3
  4901  00071E  6FCB               	movwf	strncmp@len& (0+255),b
  4902  000720  EC53  F017         	call	_strncmp	;wreg free
  4903  000724  0100               	movlb	0	; () banked
  4904  000726  51C7               	movf	?_strncmp& (0+255),w,b
  4905  000728  0100               	movlb	0	; () banked
  4906  00072A  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4907  00072C  B4D8               	btfsc	status,2,c
  4908  00072E  D004               	goto	l8766
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;app_custom_cdc.c: 411: {
  4912                           ;app_custom_cdc.c: 412: cur_State = CV_PHASE_ENDED;
  4913  000730  0E16               	movlw	22
  4914  000732  0101               	movlb	1	; () banked
  4915  000734  6F0C               	movwf	_cur_State& (0+255),b
  4916                           
  4917                           ;app_custom_cdc.c: 413: }
  4918  000736  0012               	return	
  4919  000738                     l8766:
  4920                           
  4921                           ;app_custom_cdc.c: 414: else if (strncmp(end,"TIMER",5))
  4922  000738  0EE4               	movlw	low APP_CustomCDCTasks@end
  4923  00073A  0100               	movlb	0	; () banked
  4924  00073C  6FC7               	movwf	strncmp@s1& (0+255),b
  4925  00073E  0E02               	movlw	high APP_CustomCDCTasks@end
  4926  000740  0100               	movlb	0	; () banked
  4927  000742  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4928  000744  0EF1               	movlw	low STR_13
  4929  000746  0100               	movlb	0	; () banked
  4930  000748  6FC9               	movwf	strncmp@s2& (0+255),b
  4931  00074A  0E7F               	movlw	high STR_13
  4932  00074C  0100               	movlb	0	; () banked
  4933  00074E  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4934  000750  0E00               	movlw	0
  4935  000752  0100               	movlb	0	; () banked
  4936  000754  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4937  000756  0E05               	movlw	5
  4938  000758  6FCB               	movwf	strncmp@len& (0+255),b
  4939  00075A  EC53  F017         	call	_strncmp	;wreg free
  4940  00075E  0100               	movlb	0	; () banked
  4941  000760  51C7               	movf	?_strncmp& (0+255),w,b
  4942  000762  0100               	movlb	0	; () banked
  4943  000764  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4944  000766  B4D8               	btfsc	status,2,c
  4945  000768  D012               	goto	l8772
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;app_custom_cdc.c: 415: {
  4949                           ;app_custom_cdc.c: 416: strcpy(msg_Error,"CV safety timer ended");
  4950  00076A  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  4951  00076C  0100               	movlb	0	; () banked
  4952  00076E  6FC7               	movwf	strcpy@to& (0+255),b
  4953  000770  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  4954  000772  0100               	movlb	0	; () banked
  4955  000774  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  4956  000776  0E27               	movlw	low STR_26
  4957  000778  0100               	movlb	0	; () banked
  4958  00077A  6FC9               	movwf	strcpy@from& (0+255),b
  4959  00077C  0E7F               	movlw	high STR_26
  4960  00077E  0100               	movlb	0	; () banked
  4961  000780  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  4962  000782  EC24  F01F         	call	_strcpy	;wreg free
  4963                           
  4964                           ;app_custom_cdc.c: 417: cur_State = CHARGE_ERROR;
  4965  000786  0E18               	movlw	24
  4966  000788  0101               	movlb	1	; () banked
  4967  00078A  6F0C               	movwf	_cur_State& (0+255),b
  4968                           
  4969                           ;app_custom_cdc.c: 418: }
  4970  00078C  0012               	return	
  4971  00078E                     l8772:
  4972                           
  4973                           ;app_custom_cdc.c: 419: else if (strncmp(end,"PROGRESS",8))
  4974  00078E  0EE4               	movlw	low APP_CustomCDCTasks@end
  4975  000790  0100               	movlb	0	; () banked
  4976  000792  6FC7               	movwf	strncmp@s1& (0+255),b
  4977  000794  0E02               	movlw	high APP_CustomCDCTasks@end
  4978  000796  0100               	movlb	0	; () banked
  4979  000798  6FC8               	movwf	(strncmp@s1+1)& (0+255),b
  4980  00079A  0EE2               	movlw	low STR_15
  4981  00079C  0100               	movlb	0	; () banked
  4982  00079E  6FC9               	movwf	strncmp@s2& (0+255),b
  4983  0007A0  0E7F               	movlw	high STR_15
  4984  0007A2  0100               	movlb	0	; () banked
  4985  0007A4  6FCA               	movwf	(strncmp@s2+1)& (0+255),b
  4986  0007A6  0E00               	movlw	0
  4987  0007A8  0100               	movlb	0	; () banked
  4988  0007AA  6FCC               	movwf	(strncmp@len+1)& (0+255),b
  4989  0007AC  0E08               	movlw	8
  4990  0007AE  6FCB               	movwf	strncmp@len& (0+255),b
  4991  0007B0  EC53  F017         	call	_strncmp	;wreg free
  4992  0007B4  0100               	movlb	0	; () banked
  4993  0007B6  51C7               	movf	?_strncmp& (0+255),w,b
  4994  0007B8  0100               	movlb	0	; () banked
  4995  0007BA  11C8               	iorwf	(?_strncmp+1)& (0+255),w,b
  4996  0007BC  B4D8               	btfsc	status,2,c
  4997  0007BE  0012               	return	
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;app_custom_cdc.c: 420: {
  5001                           ;app_custom_cdc.c: 421: cur_State = IBAT_VERIFICATION;
  5002  0007C0  0E15               	movlw	21
  5003  0007C2  0101               	movlb	1	; () banked
  5004  0007C4  6F0C               	movwf	_cur_State& (0+255),b
  5005                           
  5006                           ; BSR set to: 1
  5007                           ;app_custom_cdc.c: 422: }
  5008                           ;app_custom_cdc.c: 423: }
  5009                           ;app_custom_cdc.c: 424: break;
  5010                           
  5011                           ; BSR set to: 1
  5012                           
  5013                           ; BSR set to: 1
  5014                           
  5015                           ; BSR set to: 1
  5016  0007C6  0012               	return	
  5017  0007C8                     l8776:
  5018                           
  5019                           ; BSR set to: 1
  5020                           ;app_custom_cdc.c: 427: res = stop_CV();
  5021  0007C8  EC63  F014         	call	_stop_CV	;wreg free
  5022  0007CC  C184  F2F0         	movff	?_stop_CV,APP_CustomCDCTasks@res
  5023  0007D0  C185  F2F1         	movff	?_stop_CV+1,APP_CustomCDCTasks@res+1
  5024                           
  5025                           ;app_custom_cdc.c: 428: if (res != OK)
  5026  0007D4  0102               	movlb	2	; () banked
  5027  0007D6  51F0               	movf	APP_CustomCDCTasks@res& (0+255),w,b
  5028  0007D8  0102               	movlb	2	; () banked
  5029  0007DA  11F1               	iorwf	(APP_CustomCDCTasks@res+1)& (0+255),w,b
  5030  0007DC  B4D8               	btfsc	status,2,c
  5031  0007DE  D012               	goto	l8784
  5032                           
  5033                           ; BSR set to: 2
  5034                           ;app_custom_cdc.c: 429: {
  5035                           ;app_custom_cdc.c: 430: strcpy(msg_Error,"CV stoping failure");
  5036  0007E0  0E80               	movlw	low APP_CustomCDCTasks@msg_Error
  5037  0007E2  0100               	movlb	0	; () banked
  5038  0007E4  6FC7               	movwf	strcpy@to& (0+255),b
  5039  0007E6  0E02               	movlw	high APP_CustomCDCTasks@msg_Error
  5040  0007E8  0100               	movlb	0	; () banked
  5041  0007EA  6FC8               	movwf	(strcpy@to+1)& (0+255),b
  5042  0007EC  0E65               	movlw	low STR_28
  5043  0007EE  0100               	movlb	0	; () banked
  5044  0007F0  6FC9               	movwf	strcpy@from& (0+255),b
  5045  0007F2  0E7F               	movlw	high STR_28
  5046  0007F4  0100               	movlb	0	; () banked
  5047  0007F6  6FCA               	movwf	(strcpy@from+1)& (0+255),b
  5048  0007F8  EC24  F01F         	call	_strcpy	;wreg free
  5049                           
  5050                           ;app_custom_cdc.c: 431: cur_State = CHARGE_ERROR;
  5051  0007FC  0E18               	movlw	24
  5052  0007FE  0101               	movlb	1	; () banked
  5053  000800  6F0C               	movwf	_cur_State& (0+255),b
  5054                           
  5055                           ;app_custom_cdc.c: 432: }
  5056  000802  0012               	return	
  5057  000804                     l8784:
  5058                           
  5059                           ;app_custom_cdc.c: 433: else
  5060                           ;app_custom_cdc.c: 434: {
  5061                           ;app_custom_cdc.c: 435: cur_State = CHARGE_ENDED;
  5062  000804  0E19               	movlw	25
  5063  000806  0101               	movlb	1	; () banked
  5064  000808  6F0C               	movwf	_cur_State& (0+255),b
  5065                           
  5066                           ; BSR set to: 1
  5067                           ;app_custom_cdc.c: 436: }
  5068                           ;app_custom_cdc.c: 437: break;
  5069  00080A  0012               	return	
  5070  00080C                     l8786:
  5071                           
  5072                           ; BSR set to: 1
  5073                           ;app_custom_cdc.c: 440: end_Charge();
  5074  00080C  EC55  F020         	call	_end_Charge	;wreg free
  5075                           
  5076                           ;app_custom_cdc.c: 449: }
  5077                           
  5078                           ;app_custom_cdc.c: 448: break;
  5079                           
  5080                           ;app_custom_cdc.c: 446: default :
  5081                           
  5082                           ;app_custom_cdc.c: 445: break;
  5083                           
  5084                           ;app_custom_cdc.c: 443: case CHARGE_ERROR :
  5085                           
  5086                           ;app_custom_cdc.c: 441: break;
  5087  000810  0012               	return	
  5088  000812                     l8790:
  5089  000812  0101               	movlb	1	; () banked
  5090  000814  510C               	movf	_cur_State& (0+255),w,b
  5091                           
  5092                           ; Switch size 1, requested type "space"
  5093                           ; Number of cases is 22, Range of values is 0 to 25
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte           67    34 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098  000816  0A00               	xorlw	0	; case 0
  5099  000818  B4D8               	btfsc	status,2,c
  5100  00081A  D45B               	goto	l8574
  5101  00081C  0A01               	xorlw	1	; case 1
  5102  00081E  B4D8               	btfsc	status,2,c
  5103  000820  D47A               	goto	l8584
  5104  000822  0A03               	xorlw	3	; case 2
  5105  000824  B4D8               	btfsc	status,2,c
  5106  000826  D499               	goto	l8594
  5107  000828  0A01               	xorlw	1	; case 3
  5108  00082A  B4D8               	btfsc	status,2,c
  5109  00082C  D49C               	goto	l8598
  5110  00082E  0A07               	xorlw	7	; case 4
  5111  000830  B4D8               	btfsc	status,2,c
  5112  000832  D4BB               	goto	l8608
  5113  000834  0A01               	xorlw	1	; case 5
  5114  000836  B4D8               	btfsc	status,2,c
  5115  000838  D4CA               	goto	l8620
  5116  00083A  0A03               	xorlw	3	; case 6
  5117  00083C  B4D8               	btfsc	status,2,c
  5118  00083E  D4D3               	goto	l8622
  5119  000840  0A0F               	xorlw	15	; case 9
  5120  000842  B4D8               	btfsc	status,2,c
  5121  000844  D4F2               	goto	l8632
  5122  000846  0A03               	xorlw	3	; case 10
  5123  000848  B4D8               	btfsc	status,2,c
  5124  00084A  D55D               	goto	l8656
  5125  00084C  0A01               	xorlw	1	; case 11
  5126  00084E  B4D8               	btfsc	status,2,c
  5127  000850  D56A               	goto	l8658
  5128  000852  0A06               	xorlw	6	; case 13
  5129  000854  B4D8               	btfsc	status,2,c
  5130  000856  D58F               	goto	l8668
  5131  000858  0A03               	xorlw	3	; case 14
  5132  00085A  B4D8               	btfsc	status,2,c
  5133  00085C  D5D6               	goto	l8690
  5134  00085E  0A01               	xorlw	1	; case 15
  5135  000860  B4D8               	btfsc	status,2,c
  5136  000862  D5D3               	goto	l8690
  5137  000864  0A1F               	xorlw	31	; case 16
  5138  000866  B4D8               	btfsc	status,2,c
  5139  000868  D659               	goto	l8712
  5140  00086A  0A01               	xorlw	1	; case 17
  5141  00086C  B4D8               	btfsc	status,2,c
  5142  00086E  D678               	goto	l8722
  5143  000870  0A03               	xorlw	3	; case 18
  5144  000872  B4D8               	btfsc	status,2,c
  5145  000874  D675               	goto	l8722
  5146  000876  0A01               	xorlw	1	; case 19
  5147  000878  B4D8               	btfsc	status,2,c
  5148  00087A  D6FB               	goto	l8744
  5149  00087C  0A07               	xorlw	7	; case 20
  5150  00087E  B4D8               	btfsc	status,2,c
  5151  000880  D71A               	goto	l8754
  5152  000882  0A01               	xorlw	1	; case 21
  5153  000884  B4D8               	btfsc	status,2,c
  5154  000886  D717               	goto	l8754
  5155  000888  0A03               	xorlw	3	; case 22
  5156  00088A  B4D8               	btfsc	status,2,c
  5157  00088C  D79D               	goto	l8776
  5158  00088E  0A0E               	xorlw	14	; case 24
  5159  000890  B4D8               	btfsc	status,2,c
  5160  000892  0012               	return	
  5161  000894  0A01               	xorlw	1	; case 25
  5162  000896  A4D8               	btfss	status,2,c
  5163  000898  0012               	return	
  5164  00089A  D7B8               	goto	l8786
  5165  00089C                     __end_of_APP_CustomCDCTasks:
  5166                           	opt stack 0
  5167                           tblptru	equ	0xFF8
  5168                           tblptrh	equ	0xFF7
  5169                           tblptrl	equ	0xFF6
  5170                           tablat	equ	0xFF5
  5171                           prodh	equ	0xFF4
  5172                           prodl	equ	0xFF3
  5173                           intcon	equ	0xFF2
  5174                           postinc0	equ	0xFEE
  5175                           wreg	equ	0xFE8
  5176                           indf1	equ	0xFE7
  5177                           postdec1	equ	0xFE5
  5178                           fsr1h	equ	0xFE2
  5179                           fsr1l	equ	0xFE1
  5180                           indf2	equ	0xFDF
  5181                           postinc2	equ	0xFDE
  5182                           postdec2	equ	0xFDD
  5183                           plusw2	equ	0xFDB
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function _verifie_Vbat *****************
  5189 ;; Defined at:
  5190 ;;		line 319 in file "user.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  end             2   28[BANK1 ] PTR unsigned char 
  5193 ;;		 -> APP_CustomCDCTasks@end(10), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  voltage         3   30[BANK1 ] float 
  5196 ;;  res             2   33[BANK1 ] short 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2   28[BANK1 ] short 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5206 ;;      Params:         0       0       2       0       0       0       0       0       0
  5207 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5209 ;;      Totals:         0       0       7       0       0       0       0       0       0
  5210 ;;Total ram usage:        7 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:   16
  5213 ;; This function calls:
  5214 ;;		_I_V_Set
  5215 ;;		_V_Eval
  5216 ;;		___ftge
  5217 ;;		___ftmul
  5218 ;;		___lwtoft
  5219 ;;		_calc_Time
  5220 ;;		_strncpy
  5221 ;; This function is called by:
  5222 ;;		_APP_CustomCDCTasks
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text11
  5227  00178E                     __ptext11:
  5228                           	opt stack 0
  5229  00178E                     _verifie_Vbat:
  5230                           	opt stack 13
  5231                           
  5232                           ;user.c: 321: signed float voltage = 0;
  5233                           
  5234                           ;incstack = 0
  5235  00178E  0E00               	movlw	0
  5236  001790  0101               	movlb	1	; () banked
  5237  001792  6F8D               	movwf	verifie_Vbat@voltage& (0+255),b
  5238  001794  0E00               	movlw	0
  5239  001796  0101               	movlb	1	; () banked
  5240  001798  6F8E               	movwf	(verifie_Vbat@voltage+1)& (0+255),b
  5241  00179A  0E00               	movlw	0
  5242  00179C  0101               	movlb	1	; () banked
  5243  00179E  6F8F               	movwf	(verifie_Vbat@voltage+2)& (0+255),b
  5244                           
  5245                           ;user.c: 322: short res = KO;
  5246  0017A0  0E00               	movlw	0
  5247  0017A2  0101               	movlb	1	; () banked
  5248  0017A4  6F91               	movwf	(verifie_Vbat@res+1)& (0+255),b
  5249  0017A6  0E01               	movlw	1
  5250  0017A8  6F90               	movwf	verifie_Vbat@res& (0+255),b
  5251                           
  5252                           ; BSR set to: 1
  5253                           ;user.c: 324: res = V_Eval(0b10000111,&voltage);
  5254  0017AA  0E8D               	movlw	low verifie_Vbat@voltage
  5255  0017AC  0101               	movlb	1	; () banked
  5256  0017AE  6F7E               	movwf	V_Eval@voltage& (0+255),b
  5257  0017B0  0E01               	movlw	high verifie_Vbat@voltage
  5258  0017B2  0101               	movlb	1	; () banked
  5259  0017B4  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  5260  0017B6  0E87               	movlw	135
  5261  0017B8  ECAB  F015         	call	_V_Eval
  5262  0017BC  C17E  F190         	movff	?_V_Eval,verifie_Vbat@res
  5263  0017C0  C17F  F191         	movff	?_V_Eval+1,verifie_Vbat@res+1
  5264                           
  5265                           ;user.c: 325: if (res != OK)
  5266  0017C4  0101               	movlb	1	; () banked
  5267  0017C6  5190               	movf	verifie_Vbat@res& (0+255),w,b
  5268  0017C8  0101               	movlb	1	; () banked
  5269  0017CA  1191               	iorwf	(verifie_Vbat@res+1)& (0+255),w,b
  5270  0017CC  B4D8               	btfsc	status,2,c
  5271  0017CE  D006               	goto	l8204
  5272                           
  5273                           ; BSR set to: 1
  5274                           ;user.c: 326: {
  5275                           ;user.c: 327: return KO;
  5276  0017D0  0E00               	movlw	0
  5277  0017D2  0101               	movlb	1	; () banked
  5278  0017D4  6F8C               	movwf	(?_verifie_Vbat+1)& (0+255),b
  5279  0017D6  0E01               	movlw	1
  5280  0017D8  6F8B               	movwf	?_verifie_Vbat& (0+255),b
  5281                           
  5282                           ; BSR set to: 1
  5283  0017DA  0012               	return	
  5284  0017DC                     l8204:
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;user.c: 328: }
  5288                           ;user.c: 330: if (calc_Time(charge_Time) > battery.charge.safety_Timer)
  5289  0017DC  0100               	movlb	0	; () banked
  5290  0017DE  5182               	movf	_charge_Time& (0+255),w,b
  5291  0017E0  0100               	movlb	0	; () banked
  5292  0017E2  6FCF               	movwf	calc_Time@initial& (0+255),b
  5293  0017E4  0100               	movlb	0	; () banked
  5294  0017E6  5183               	movf	(_charge_Time+1)& (0+255),w,b
  5295  0017E8  0100               	movlb	0	; () banked
  5296  0017EA  6FD0               	movwf	(calc_Time@initial+1)& (0+255),b
  5297  0017EC  0100               	movlb	0	; () banked
  5298  0017EE  5184               	movf	(_charge_Time+2)& (0+255),w,b
  5299  0017F0  0100               	movlb	0	; () banked
  5300  0017F2  6FD1               	movwf	(calc_Time@initial+2)& (0+255),b
  5301  0017F4  0100               	movlb	0	; () banked
  5302  0017F6  6BD2               	clrf	(calc_Time@initial+3)& (0+255),b
  5303  0017F8  EC8B  F01B         	call	_calc_Time	;wreg free
  5304  0017FC  0100               	movlb	0	; () banked
  5305  0017FE  51CF               	movf	?_calc_Time& (0+255),w,b
  5306  001800  0101               	movlb	1	; () banked
  5307  001802  5D4D               	subwf	(_battery+64)& (0+255),w,b
  5308  001804  0100               	movlb	0	; () banked
  5309  001806  51D0               	movf	(?_calc_Time+1)& (0+255),w,b
  5310  001808  0101               	movlb	1	; () banked
  5311  00180A  594E               	subwfb	(_battery+65)& (0+255),w,b
  5312  00180C  B0D8               	btfsc	status,0,c
  5313  00180E  D017               	goto	l8212
  5314                           
  5315                           ; BSR set to: 1
  5316                           ;user.c: 331: {
  5317                           ;user.c: 332: strncpy(end,"TIMER",5);
  5318  001810  C18B  F0C7         	movff	verifie_Vbat@end,strncpy@to
  5319  001814  C18C  F0C8         	movff	verifie_Vbat@end+1,strncpy@to+1
  5320  001818  0EF1               	movlw	low STR_13
  5321  00181A  0100               	movlb	0	; () banked
  5322  00181C  6FC9               	movwf	strncpy@from& (0+255),b
  5323  00181E  0E7F               	movlw	high STR_13
  5324  001820  0100               	movlb	0	; () banked
  5325  001822  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5326  001824  0E00               	movlw	0
  5327  001826  0100               	movlb	0	; () banked
  5328  001828  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5329  00182A  0E05               	movlw	5
  5330  00182C  6FCB               	movwf	strncpy@size& (0+255),b
  5331  00182E  EC89  F01C         	call	_strncpy	;wreg free
  5332                           
  5333                           ;user.c: 333: return OK;
  5334  001832  0E00               	movlw	0
  5335  001834  0101               	movlb	1	; () banked
  5336  001836  6F8C               	movwf	(?_verifie_Vbat+1)& (0+255),b
  5337  001838  0E00               	movlw	0
  5338  00183A  6F8B               	movwf	?_verifie_Vbat& (0+255),b
  5339                           
  5340                           ; BSR set to: 1
  5341  00183C  0012               	return	
  5342  00183E                     l8212:
  5343                           
  5344                           ; BSR set to: 1
  5345                           ;user.c: 334: }
  5346                           ;user.c: 335: if (voltage >= battery.charge.chg_Cell_Volt * battery.number_of_cells)
  5347  00183E  C18D  F0E2         	movff	verifie_Vbat@voltage,___ftge@ff1
  5348  001842  C18E  F0E3         	movff	verifie_Vbat@voltage+1,___ftge@ff1+1
  5349  001846  C18F  F0E4         	movff	verifie_Vbat@voltage+2,___ftge@ff1+2
  5350  00184A  C133  F0D6         	movff	_battery+38,___ftmul@f2
  5351  00184E  C134  F0D7         	movff	_battery+39,___ftmul@f2+1
  5352  001852  C135  F0D8         	movff	_battery+40,___ftmul@f2+2
  5353  001856  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  5354  00185A  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  5355  00185E  EC9C  F01F         	call	___lwtoft	;wreg free
  5356  001862  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  5357  001866  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  5358  00186A  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  5359  00186E  EC13  F00E         	call	___ftmul	;wreg free
  5360  001872  C0D3  F0E5         	movff	?___ftmul,___ftge@ff2
  5361  001876  C0D4  F0E6         	movff	?___ftmul+1,___ftge@ff2+1
  5362  00187A  C0D5  F0E7         	movff	?___ftmul+2,___ftge@ff2+2
  5363  00187E  EC1D  F018         	call	___ftge	;wreg free
  5364  001882  0100               	movlb	0	; () banked
  5365  001884  A0D8               	btfss	status,0,c
  5366  001886  D017               	goto	l437
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;user.c: 336: {
  5370                           ;user.c: 337: strncpy(end,"END",3);
  5371  001888  C18B  F0C7         	movff	verifie_Vbat@end,strncpy@to
  5372  00188C  C18C  F0C8         	movff	verifie_Vbat@end+1,strncpy@to+1
  5373  001890  0EF7               	movlw	low STR_12
  5374  001892  0100               	movlb	0	; () banked
  5375  001894  6FC9               	movwf	strncpy@from& (0+255),b
  5376  001896  0E7F               	movlw	high STR_12
  5377  001898  0100               	movlb	0	; () banked
  5378  00189A  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5379  00189C  0E00               	movlw	0
  5380  00189E  0100               	movlb	0	; () banked
  5381  0018A0  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5382  0018A2  0E03               	movlw	3
  5383  0018A4  6FCB               	movwf	strncpy@size& (0+255),b
  5384  0018A6  EC89  F01C         	call	_strncpy	;wreg free
  5385                           
  5386                           ;user.c: 338: return OK;
  5387  0018AA  0E00               	movlw	0
  5388  0018AC  0101               	movlb	1	; () banked
  5389  0018AE  6F8C               	movwf	(?_verifie_Vbat+1)& (0+255),b
  5390  0018B0  0E00               	movlw	0
  5391  0018B2  6F8B               	movwf	?_verifie_Vbat& (0+255),b
  5392                           
  5393                           ; BSR set to: 1
  5394                           ;user.c: 339: }
  5395                           
  5396                           ; BSR set to: 1
  5397  0018B4  0012               	return	
  5398  0018B6                     l437:
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;user.c: 340: else
  5402                           ;user.c: 341: {
  5403                           ;user.c: 342: PI.Setpoint = battery.charge.chg_Current;
  5404  0018B6  C120  F0A5         	movff	_battery+19,_PI+6
  5405  0018BA  C121  F0A6         	movff	_battery+20,_PI+7
  5406  0018BE  C122  F0A7         	movff	_battery+21,_PI+8
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;user.c: 343: res = I_V_Set(0b11010111);
  5410  0018C2  0ED7               	movlw	215
  5411  0018C4  ECB8  F017         	call	_I_V_Set
  5412  0018C8  C184  F190         	movff	?_I_V_Set,verifie_Vbat@res
  5413  0018CC  C185  F191         	movff	?_I_V_Set+1,verifie_Vbat@res+1
  5414                           
  5415                           ;user.c: 344: if (res != OK)
  5416  0018D0  0101               	movlb	1	; () banked
  5417  0018D2  5190               	movf	verifie_Vbat@res& (0+255),w,b
  5418  0018D4  0101               	movlb	1	; () banked
  5419  0018D6  1191               	iorwf	(verifie_Vbat@res+1)& (0+255),w,b
  5420  0018D8  B4D8               	btfsc	status,2,c
  5421  0018DA  D006               	goto	l8230
  5422                           
  5423                           ; BSR set to: 1
  5424                           ;user.c: 345: {
  5425                           ;user.c: 346: return KO;
  5426  0018DC  0E00               	movlw	0
  5427  0018DE  0101               	movlb	1	; () banked
  5428  0018E0  6F8C               	movwf	(?_verifie_Vbat+1)& (0+255),b
  5429  0018E2  0E01               	movlw	1
  5430  0018E4  6F8B               	movwf	?_verifie_Vbat& (0+255),b
  5431                           
  5432                           ; BSR set to: 1
  5433  0018E6  0012               	return	
  5434  0018E8                     l8230:
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;user.c: 347: }
  5438                           ;user.c: 348: strncpy(end,"PROGRESS",8);
  5439  0018E8  C18B  F0C7         	movff	verifie_Vbat@end,strncpy@to
  5440  0018EC  C18C  F0C8         	movff	verifie_Vbat@end+1,strncpy@to+1
  5441  0018F0  0EE2               	movlw	low STR_15
  5442  0018F2  0100               	movlb	0	; () banked
  5443  0018F4  6FC9               	movwf	strncpy@from& (0+255),b
  5444  0018F6  0E7F               	movlw	high STR_15
  5445  0018F8  0100               	movlb	0	; () banked
  5446  0018FA  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5447  0018FC  0E00               	movlw	0
  5448  0018FE  0100               	movlb	0	; () banked
  5449  001900  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5450  001902  0E08               	movlw	8
  5451  001904  6FCB               	movwf	strncpy@size& (0+255),b
  5452  001906  EC89  F01C         	call	_strncpy	;wreg free
  5453                           
  5454                           ;user.c: 349: return OK;
  5455  00190A  0E00               	movlw	0
  5456  00190C  0101               	movlb	1	; () banked
  5457  00190E  6F8C               	movwf	(?_verifie_Vbat+1)& (0+255),b
  5458  001910  0E00               	movlw	0
  5459  001912  6F8B               	movwf	?_verifie_Vbat& (0+255),b
  5460                           
  5461                           ; BSR set to: 1
  5462  001914  0012               	return	
  5463  001916                     __end_of_verifie_Vbat:
  5464                           	opt stack 0
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           prodh	equ	0xFF4
  5470                           prodl	equ	0xFF3
  5471                           intcon	equ	0xFF2
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           indf1	equ	0xFE7
  5475                           postdec1	equ	0xFE5
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           indf2	equ	0xFDF
  5479                           postinc2	equ	0xFDE
  5480                           postdec2	equ	0xFDD
  5481                           plusw2	equ	0xFDB
  5482                           fsr2h	equ	0xFDA
  5483                           fsr2l	equ	0xFD9
  5484                           status	equ	0xFD8
  5485                           
  5486 ;; *************** function _verifie_Precondition *****************
  5487 ;; Defined at:
  5488 ;;		line 267 in file "user.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  end             2   28[BANK1 ] PTR unsigned char 
  5491 ;;		 -> APP_CustomCDCTasks@end(10), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  voltage         3   30[BANK1 ] float 
  5494 ;;  res             2   33[BANK1 ] short 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2   28[BANK1 ] short 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5504 ;;      Params:         0       0       2       0       0       0       0       0       0
  5505 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5507 ;;      Totals:         0       0       7       0       0       0       0       0       0
  5508 ;;Total ram usage:        7 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:   16
  5511 ;; This function calls:
  5512 ;;		_I_V_Set
  5513 ;;		_V_Eval
  5514 ;;		___ftge
  5515 ;;		___ftmul
  5516 ;;		___lwtoft
  5517 ;;		_calc_Time
  5518 ;;		_strncpy
  5519 ;; This function is called by:
  5520 ;;		_APP_CustomCDCTasks
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text12
  5525  001916                     __ptext12:
  5526                           	opt stack 0
  5527  001916                     _verifie_Precondition:
  5528                           	opt stack 13
  5529                           
  5530                           ;user.c: 269: signed float voltage = 0;
  5531                           
  5532                           ; BSR set to: 1
  5533                           ;incstack = 0
  5534  001916  0E00               	movlw	0
  5535  001918  0101               	movlb	1	; () banked
  5536  00191A  6F8D               	movwf	verifie_Precondition@voltage& (0+255),b
  5537  00191C  0E00               	movlw	0
  5538  00191E  0101               	movlb	1	; () banked
  5539  001920  6F8E               	movwf	(verifie_Precondition@voltage+1)& (0+255),b
  5540  001922  0E00               	movlw	0
  5541  001924  0101               	movlb	1	; () banked
  5542  001926  6F8F               	movwf	(verifie_Precondition@voltage+2)& (0+255),b
  5543                           
  5544                           ;user.c: 270: short res = KO;
  5545  001928  0E00               	movlw	0
  5546  00192A  0101               	movlb	1	; () banked
  5547  00192C  6F91               	movwf	(verifie_Precondition@res+1)& (0+255),b
  5548  00192E  0E01               	movlw	1
  5549  001930  6F90               	movwf	verifie_Precondition@res& (0+255),b
  5550                           
  5551                           ; BSR set to: 1
  5552                           ;user.c: 272: res = V_Eval(0b10000111,&voltage);
  5553  001932  0E8D               	movlw	low verifie_Precondition@voltage
  5554  001934  0101               	movlb	1	; () banked
  5555  001936  6F7E               	movwf	V_Eval@voltage& (0+255),b
  5556  001938  0E01               	movlw	high verifie_Precondition@voltage
  5557  00193A  0101               	movlb	1	; () banked
  5558  00193C  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  5559  00193E  0E87               	movlw	135
  5560  001940  ECAB  F015         	call	_V_Eval
  5561  001944  C17E  F190         	movff	?_V_Eval,verifie_Precondition@res
  5562  001948  C17F  F191         	movff	?_V_Eval+1,verifie_Precondition@res+1
  5563                           
  5564                           ;user.c: 273: if (res != OK)
  5565  00194C  0101               	movlb	1	; () banked
  5566  00194E  5190               	movf	verifie_Precondition@res& (0+255),w,b
  5567  001950  0101               	movlb	1	; () banked
  5568  001952  1191               	iorwf	(verifie_Precondition@res+1)& (0+255),w,b
  5569  001954  B4D8               	btfsc	status,2,c
  5570  001956  D006               	goto	l8162
  5571                           
  5572                           ; BSR set to: 1
  5573                           ;user.c: 274: {
  5574                           ;user.c: 275: return KO;
  5575  001958  0E00               	movlw	0
  5576  00195A  0101               	movlb	1	; () banked
  5577  00195C  6F8C               	movwf	(?_verifie_Precondition+1)& (0+255),b
  5578  00195E  0E01               	movlw	1
  5579  001960  6F8B               	movwf	?_verifie_Precondition& (0+255),b
  5580                           
  5581                           ; BSR set to: 1
  5582  001962  0012               	return	
  5583  001964                     l8162:
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;user.c: 276: }
  5587                           ;user.c: 278: if (calc_Time(precondition_Time) >= battery.charge.restore_Charge_Time)
  5588  001964  0100               	movlb	0	; () banked
  5589  001966  5191               	movf	_precondition_Time& (0+255),w,b
  5590  001968  0100               	movlb	0	; () banked
  5591  00196A  6FCF               	movwf	calc_Time@initial& (0+255),b
  5592  00196C  0100               	movlb	0	; () banked
  5593  00196E  5192               	movf	(_precondition_Time+1)& (0+255),w,b
  5594  001970  0100               	movlb	0	; () banked
  5595  001972  6FD0               	movwf	(calc_Time@initial+1)& (0+255),b
  5596  001974  0100               	movlb	0	; () banked
  5597  001976  5193               	movf	(_precondition_Time+2)& (0+255),w,b
  5598  001978  0100               	movlb	0	; () banked
  5599  00197A  6FD1               	movwf	(calc_Time@initial+2)& (0+255),b
  5600  00197C  0100               	movlb	0	; () banked
  5601  00197E  6BD2               	clrf	(calc_Time@initial+3)& (0+255),b
  5602  001980  EC8B  F01B         	call	_calc_Time	;wreg free
  5603  001984  0101               	movlb	1	; () banked
  5604  001986  5139               	movf	(_battery+44)& (0+255),w,b
  5605  001988  0100               	movlb	0	; () banked
  5606  00198A  5DCF               	subwf	?_calc_Time& (0+255),w,b
  5607  00198C  0101               	movlb	1	; () banked
  5608  00198E  513A               	movf	(_battery+45)& (0+255),w,b
  5609  001990  0100               	movlb	0	; () banked
  5610  001992  59D0               	subwfb	(?_calc_Time+1)& (0+255),w,b
  5611  001994  A0D8               	btfss	status,0,c
  5612  001996  D017               	goto	l8170
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;user.c: 279: {
  5616                           ;user.c: 280: strncpy(end,"TIMER",5);
  5617  001998  C18B  F0C7         	movff	verifie_Precondition@end,strncpy@to
  5618  00199C  C18C  F0C8         	movff	verifie_Precondition@end+1,strncpy@to+1
  5619  0019A0  0EF1               	movlw	low STR_13
  5620  0019A2  0100               	movlb	0	; () banked
  5621  0019A4  6FC9               	movwf	strncpy@from& (0+255),b
  5622  0019A6  0E7F               	movlw	high STR_13
  5623  0019A8  0100               	movlb	0	; () banked
  5624  0019AA  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5625  0019AC  0E00               	movlw	0
  5626  0019AE  0100               	movlb	0	; () banked
  5627  0019B0  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5628  0019B2  0E05               	movlw	5
  5629  0019B4  6FCB               	movwf	strncpy@size& (0+255),b
  5630  0019B6  EC89  F01C         	call	_strncpy	;wreg free
  5631                           
  5632                           ;user.c: 281: return OK;
  5633  0019BA  0E00               	movlw	0
  5634  0019BC  0101               	movlb	1	; () banked
  5635  0019BE  6F8C               	movwf	(?_verifie_Precondition+1)& (0+255),b
  5636  0019C0  0E00               	movlw	0
  5637  0019C2  6F8B               	movwf	?_verifie_Precondition& (0+255),b
  5638                           
  5639                           ; BSR set to: 1
  5640  0019C4  0012               	return	
  5641  0019C6                     l8170:
  5642                           
  5643                           ;user.c: 282: }
  5644                           ;user.c: 283: if (voltage >= battery.charge.restore_Lowest_Voltage * battery.number_of_c
      +                          ells)
  5645  0019C6  C18D  F0E2         	movff	verifie_Precondition@voltage,___ftge@ff1
  5646  0019CA  C18E  F0E3         	movff	verifie_Precondition@voltage+1,___ftge@ff1+1
  5647  0019CE  C18F  F0E4         	movff	verifie_Precondition@voltage+2,___ftge@ff1+2
  5648  0019D2  C136  F0D6         	movff	_battery+41,___ftmul@f2
  5649  0019D6  C137  F0D7         	movff	_battery+42,___ftmul@f2+1
  5650  0019DA  C138  F0D8         	movff	_battery+43,___ftmul@f2+2
  5651  0019DE  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  5652  0019E2  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  5653  0019E6  EC9C  F01F         	call	___lwtoft	;wreg free
  5654  0019EA  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  5655  0019EE  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  5656  0019F2  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  5657  0019F6  EC13  F00E         	call	___ftmul	;wreg free
  5658  0019FA  C0D3  F0E5         	movff	?___ftmul,___ftge@ff2
  5659  0019FE  C0D4  F0E6         	movff	?___ftmul+1,___ftge@ff2+1
  5660  001A02  C0D5  F0E7         	movff	?___ftmul+2,___ftge@ff2+2
  5661  001A06  EC1D  F018         	call	___ftge	;wreg free
  5662  001A0A  0100               	movlb	0	; () banked
  5663  001A0C  A0D8               	btfss	status,0,c
  5664  001A0E  D017               	goto	l425
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;user.c: 284: {
  5668                           ;user.c: 285: strncpy(end,"END",3);
  5669  001A10  C18B  F0C7         	movff	verifie_Precondition@end,strncpy@to
  5670  001A14  C18C  F0C8         	movff	verifie_Precondition@end+1,strncpy@to+1
  5671  001A18  0EF7               	movlw	low STR_12
  5672  001A1A  0100               	movlb	0	; () banked
  5673  001A1C  6FC9               	movwf	strncpy@from& (0+255),b
  5674  001A1E  0E7F               	movlw	high STR_12
  5675  001A20  0100               	movlb	0	; () banked
  5676  001A22  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5677  001A24  0E00               	movlw	0
  5678  001A26  0100               	movlb	0	; () banked
  5679  001A28  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5680  001A2A  0E03               	movlw	3
  5681  001A2C  6FCB               	movwf	strncpy@size& (0+255),b
  5682  001A2E  EC89  F01C         	call	_strncpy	;wreg free
  5683                           
  5684                           ;user.c: 286: return OK;
  5685  001A32  0E00               	movlw	0
  5686  001A34  0101               	movlb	1	; () banked
  5687  001A36  6F8C               	movwf	(?_verifie_Precondition+1)& (0+255),b
  5688  001A38  0E00               	movlw	0
  5689  001A3A  6F8B               	movwf	?_verifie_Precondition& (0+255),b
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;user.c: 287: }
  5693                           
  5694                           ; BSR set to: 1
  5695  001A3C  0012               	return	
  5696  001A3E                     l425:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;user.c: 288: else
  5700                           ;user.c: 289: {
  5701                           ;user.c: 290: PI.Setpoint = battery.charge.restore_Charge_Current;
  5702  001A3E  C13B  F0A5         	movff	_battery+46,_PI+6
  5703  001A42  C13C  F0A6         	movff	_battery+47,_PI+7
  5704  001A46  C13D  F0A7         	movff	_battery+48,_PI+8
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;user.c: 291: res = I_V_Set(0b11010111);
  5708  001A4A  0ED7               	movlw	215
  5709  001A4C  ECB8  F017         	call	_I_V_Set
  5710  001A50  C184  F190         	movff	?_I_V_Set,verifie_Precondition@res
  5711  001A54  C185  F191         	movff	?_I_V_Set+1,verifie_Precondition@res+1
  5712                           
  5713                           ;user.c: 292: if (res != OK)
  5714  001A58  0101               	movlb	1	; () banked
  5715  001A5A  5190               	movf	verifie_Precondition@res& (0+255),w,b
  5716  001A5C  0101               	movlb	1	; () banked
  5717  001A5E  1191               	iorwf	(verifie_Precondition@res+1)& (0+255),w,b
  5718  001A60  B4D8               	btfsc	status,2,c
  5719  001A62  D006               	goto	l8188
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;user.c: 293: {
  5723                           ;user.c: 294: return KO;
  5724  001A64  0E00               	movlw	0
  5725  001A66  0101               	movlb	1	; () banked
  5726  001A68  6F8C               	movwf	(?_verifie_Precondition+1)& (0+255),b
  5727  001A6A  0E01               	movlw	1
  5728  001A6C  6F8B               	movwf	?_verifie_Precondition& (0+255),b
  5729                           
  5730                           ; BSR set to: 1
  5731  001A6E  0012               	return	
  5732  001A70                     l8188:
  5733                           
  5734                           ; BSR set to: 1
  5735                           ;user.c: 295: }
  5736                           ;user.c: 296: strncpy(end,"PROGRESS",8);
  5737  001A70  C18B  F0C7         	movff	verifie_Precondition@end,strncpy@to
  5738  001A74  C18C  F0C8         	movff	verifie_Precondition@end+1,strncpy@to+1
  5739  001A78  0EE2               	movlw	low STR_15
  5740  001A7A  0100               	movlb	0	; () banked
  5741  001A7C  6FC9               	movwf	strncpy@from& (0+255),b
  5742  001A7E  0E7F               	movlw	high STR_15
  5743  001A80  0100               	movlb	0	; () banked
  5744  001A82  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5745  001A84  0E00               	movlw	0
  5746  001A86  0100               	movlb	0	; () banked
  5747  001A88  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5748  001A8A  0E08               	movlw	8
  5749  001A8C  6FCB               	movwf	strncpy@size& (0+255),b
  5750  001A8E  EC89  F01C         	call	_strncpy	;wreg free
  5751                           
  5752                           ;user.c: 297: return OK;
  5753  001A92  0E00               	movlw	0
  5754  001A94  0101               	movlb	1	; () banked
  5755  001A96  6F8C               	movwf	(?_verifie_Precondition+1)& (0+255),b
  5756  001A98  0E00               	movlw	0
  5757  001A9A  6F8B               	movwf	?_verifie_Precondition& (0+255),b
  5758                           
  5759                           ; BSR set to: 1
  5760  001A9C  0012               	return	
  5761  001A9E                     __end_of_verifie_Precondition:
  5762                           	opt stack 0
  5763                           tblptru	equ	0xFF8
  5764                           tblptrh	equ	0xFF7
  5765                           tblptrl	equ	0xFF6
  5766                           tablat	equ	0xFF5
  5767                           prodh	equ	0xFF4
  5768                           prodl	equ	0xFF3
  5769                           intcon	equ	0xFF2
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           indf1	equ	0xFE7
  5773                           postdec1	equ	0xFE5
  5774                           fsr1h	equ	0xFE2
  5775                           fsr1l	equ	0xFE1
  5776                           indf2	equ	0xFDF
  5777                           postinc2	equ	0xFDE
  5778                           postdec2	equ	0xFDD
  5779                           plusw2	equ	0xFDB
  5780                           fsr2h	equ	0xFDA
  5781                           fsr2l	equ	0xFD9
  5782                           status	equ	0xFD8
  5783                           
  5784 ;; *************** function _verifie_Ibat *****************
  5785 ;; Defined at:
  5786 ;;		line 370 in file "user.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  end             2   28[BANK1 ] PTR unsigned char 
  5789 ;;		 -> APP_CustomCDCTasks@end(10), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  current         3   30[BANK1 ] float 
  5792 ;;  res             2   33[BANK1 ] short 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  2   28[BANK1 ] short 
  5795 ;; Registers used:
  5796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5802 ;;      Params:         0       0       2       0       0       0       0       0       0
  5803 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5805 ;;      Totals:         0       0       7       0       0       0       0       0       0
  5806 ;;Total ram usage:        7 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:   16
  5809 ;; This function calls:
  5810 ;;		_I_V_Set
  5811 ;;		_V_Eval
  5812 ;;		___ftge
  5813 ;;		___ftmul
  5814 ;;		___lwtoft
  5815 ;;		_calc_Time
  5816 ;;		_strncpy
  5817 ;; This function is called by:
  5818 ;;		_APP_CustomCDCTasks
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text13
  5823  001A9E                     __ptext13:
  5824                           	opt stack 0
  5825  001A9E                     _verifie_Ibat:
  5826                           	opt stack 13
  5827                           
  5828                           ;user.c: 372: signed float current = 0;
  5829                           
  5830                           ; BSR set to: 1
  5831                           ;incstack = 0
  5832  001A9E  0E00               	movlw	0
  5833  001AA0  0101               	movlb	1	; () banked
  5834  001AA2  6F8D               	movwf	verifie_Ibat@current& (0+255),b
  5835  001AA4  0E00               	movlw	0
  5836  001AA6  0101               	movlb	1	; () banked
  5837  001AA8  6F8E               	movwf	(verifie_Ibat@current+1)& (0+255),b
  5838  001AAA  0E00               	movlw	0
  5839  001AAC  0101               	movlb	1	; () banked
  5840  001AAE  6F8F               	movwf	(verifie_Ibat@current+2)& (0+255),b
  5841                           
  5842                           ;user.c: 373: short res = KO;
  5843  001AB0  0E00               	movlw	0
  5844  001AB2  0101               	movlb	1	; () banked
  5845  001AB4  6F91               	movwf	(verifie_Ibat@res+1)& (0+255),b
  5846  001AB6  0E01               	movlw	1
  5847  001AB8  6F90               	movwf	verifie_Ibat@res& (0+255),b
  5848                           
  5849                           ; BSR set to: 1
  5850                           ;user.c: 375: res = V_Eval(0b11010111,&current);
  5851  001ABA  0E8D               	movlw	low verifie_Ibat@current
  5852  001ABC  0101               	movlb	1	; () banked
  5853  001ABE  6F7E               	movwf	V_Eval@voltage& (0+255),b
  5854  001AC0  0E01               	movlw	high verifie_Ibat@current
  5855  001AC2  0101               	movlb	1	; () banked
  5856  001AC4  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  5857  001AC6  0ED7               	movlw	215
  5858  001AC8  ECAB  F015         	call	_V_Eval
  5859  001ACC  C17E  F190         	movff	?_V_Eval,verifie_Ibat@res
  5860  001AD0  C17F  F191         	movff	?_V_Eval+1,verifie_Ibat@res+1
  5861                           
  5862                           ;user.c: 376: if (res != OK)
  5863  001AD4  0101               	movlb	1	; () banked
  5864  001AD6  5190               	movf	verifie_Ibat@res& (0+255),w,b
  5865  001AD8  0101               	movlb	1	; () banked
  5866  001ADA  1191               	iorwf	(verifie_Ibat@res+1)& (0+255),w,b
  5867  001ADC  B4D8               	btfsc	status,2,c
  5868  001ADE  D006               	goto	l8262
  5869                           
  5870                           ; BSR set to: 1
  5871                           ;user.c: 377: {
  5872                           ;user.c: 378: return KO;
  5873  001AE0  0E00               	movlw	0
  5874  001AE2  0101               	movlb	1	; () banked
  5875  001AE4  6F8C               	movwf	(?_verifie_Ibat+1)& (0+255),b
  5876  001AE6  0E01               	movlw	1
  5877  001AE8  6F8B               	movwf	?_verifie_Ibat& (0+255),b
  5878                           
  5879                           ; BSR set to: 1
  5880  001AEA  0012               	return	
  5881  001AEC                     l8262:
  5882                           
  5883                           ; BSR set to: 1
  5884                           ;user.c: 379: }
  5885                           ;user.c: 381: if (calc_Time(charge_Time) > battery.charge.safety_Timer)
  5886  001AEC  0100               	movlb	0	; () banked
  5887  001AEE  5182               	movf	_charge_Time& (0+255),w,b
  5888  001AF0  0100               	movlb	0	; () banked
  5889  001AF2  6FCF               	movwf	calc_Time@initial& (0+255),b
  5890  001AF4  0100               	movlb	0	; () banked
  5891  001AF6  5183               	movf	(_charge_Time+1)& (0+255),w,b
  5892  001AF8  0100               	movlb	0	; () banked
  5893  001AFA  6FD0               	movwf	(calc_Time@initial+1)& (0+255),b
  5894  001AFC  0100               	movlb	0	; () banked
  5895  001AFE  5184               	movf	(_charge_Time+2)& (0+255),w,b
  5896  001B00  0100               	movlb	0	; () banked
  5897  001B02  6FD1               	movwf	(calc_Time@initial+2)& (0+255),b
  5898  001B04  0100               	movlb	0	; () banked
  5899  001B06  6BD2               	clrf	(calc_Time@initial+3)& (0+255),b
  5900  001B08  EC8B  F01B         	call	_calc_Time	;wreg free
  5901  001B0C  0100               	movlb	0	; () banked
  5902  001B0E  51CF               	movf	?_calc_Time& (0+255),w,b
  5903  001B10  0101               	movlb	1	; () banked
  5904  001B12  5D4D               	subwf	(_battery+64)& (0+255),w,b
  5905  001B14  0100               	movlb	0	; () banked
  5906  001B16  51D0               	movf	(?_calc_Time+1)& (0+255),w,b
  5907  001B18  0101               	movlb	1	; () banked
  5908  001B1A  594E               	subwfb	(_battery+65)& (0+255),w,b
  5909  001B1C  B0D8               	btfsc	status,0,c
  5910  001B1E  D017               	goto	l8270
  5911                           
  5912                           ; BSR set to: 1
  5913                           ;user.c: 382: {
  5914                           ;user.c: 383: strncpy(end,"TIMER",5);
  5915  001B20  C18B  F0C7         	movff	verifie_Ibat@end,strncpy@to
  5916  001B24  C18C  F0C8         	movff	verifie_Ibat@end+1,strncpy@to+1
  5917  001B28  0EF1               	movlw	low STR_13
  5918  001B2A  0100               	movlb	0	; () banked
  5919  001B2C  6FC9               	movwf	strncpy@from& (0+255),b
  5920  001B2E  0E7F               	movlw	high STR_13
  5921  001B30  0100               	movlb	0	; () banked
  5922  001B32  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5923  001B34  0E00               	movlw	0
  5924  001B36  0100               	movlb	0	; () banked
  5925  001B38  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5926  001B3A  0E05               	movlw	5
  5927  001B3C  6FCB               	movwf	strncpy@size& (0+255),b
  5928  001B3E  EC89  F01C         	call	_strncpy	;wreg free
  5929                           
  5930                           ;user.c: 384: return OK;
  5931  001B42  0E00               	movlw	0
  5932  001B44  0101               	movlb	1	; () banked
  5933  001B46  6F8C               	movwf	(?_verifie_Ibat+1)& (0+255),b
  5934  001B48  0E00               	movlw	0
  5935  001B4A  6F8B               	movwf	?_verifie_Ibat& (0+255),b
  5936                           
  5937                           ; BSR set to: 1
  5938  001B4C  0012               	return	
  5939  001B4E                     l8270:
  5940                           
  5941                           ; BSR set to: 1
  5942                           ;user.c: 385: }
  5943                           ;user.c: 386: if (current >= battery.charge.chg_End_Current)
  5944  001B4E  C18D  F0E2         	movff	verifie_Ibat@current,___ftge@ff1
  5945  001B52  C18E  F0E3         	movff	verifie_Ibat@current+1,___ftge@ff1+1
  5946  001B56  C18F  F0E4         	movff	verifie_Ibat@current+2,___ftge@ff1+2
  5947  001B5A  C130  F0E5         	movff	_battery+35,___ftge@ff2
  5948  001B5E  C131  F0E6         	movff	_battery+36,___ftge@ff2+1
  5949  001B62  C132  F0E7         	movff	_battery+37,___ftge@ff2+2
  5950  001B66  EC1D  F018         	call	___ftge	;wreg free
  5951  001B6A  0100               	movlb	0	; () banked
  5952  001B6C  A0D8               	btfss	status,0,c
  5953  001B6E  D017               	goto	l8280
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;user.c: 387: {
  5957                           ;user.c: 388: strncpy(end,"END",3);
  5958  001B70  C18B  F0C7         	movff	verifie_Ibat@end,strncpy@to
  5959  001B74  C18C  F0C8         	movff	verifie_Ibat@end+1,strncpy@to+1
  5960  001B78  0EF7               	movlw	low STR_12
  5961  001B7A  0100               	movlb	0	; () banked
  5962  001B7C  6FC9               	movwf	strncpy@from& (0+255),b
  5963  001B7E  0E7F               	movlw	high STR_12
  5964  001B80  0100               	movlb	0	; () banked
  5965  001B82  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  5966  001B84  0E00               	movlw	0
  5967  001B86  0100               	movlb	0	; () banked
  5968  001B88  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  5969  001B8A  0E03               	movlw	3
  5970  001B8C  6FCB               	movwf	strncpy@size& (0+255),b
  5971  001B8E  EC89  F01C         	call	_strncpy	;wreg free
  5972                           
  5973                           ;user.c: 389: return OK;
  5974  001B92  0E00               	movlw	0
  5975  001B94  0101               	movlb	1	; () banked
  5976  001B96  6F8C               	movwf	(?_verifie_Ibat+1)& (0+255),b
  5977  001B98  0E00               	movlw	0
  5978  001B9A  6F8B               	movwf	?_verifie_Ibat& (0+255),b
  5979                           
  5980                           ; BSR set to: 1
  5981                           ;user.c: 390: }
  5982                           
  5983                           ; BSR set to: 1
  5984  001B9C  0012               	return	
  5985  001B9E                     l8280:
  5986                           
  5987                           ;user.c: 391: else
  5988                           ;user.c: 392: {
  5989                           ;user.c: 393: PI.Setpoint = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  5990  001B9E  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  5991  001BA2  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  5992  001BA6  EC9C  F01F         	call	___lwtoft	;wreg free
  5993  001BAA  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  5994  001BAE  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  5995  001BB2  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  5996  001BB6  C133  F0D6         	movff	_battery+38,___ftmul@f2
  5997  001BBA  C134  F0D7         	movff	_battery+39,___ftmul@f2+1
  5998  001BBE  C135  F0D8         	movff	_battery+40,___ftmul@f2+2
  5999  001BC2  EC13  F00E         	call	___ftmul	;wreg free
  6000  001BC6  C0D3  F0A5         	movff	?___ftmul,_PI+6
  6001  001BCA  C0D4  F0A6         	movff	?___ftmul+1,_PI+7
  6002  001BCE  C0D5  F0A7         	movff	?___ftmul+2,_PI+8
  6003                           
  6004                           ;user.c: 394: res = I_V_Set(0b10000111);
  6005  001BD2  0E87               	movlw	135
  6006  001BD4  ECB8  F017         	call	_I_V_Set
  6007  001BD8  C184  F190         	movff	?_I_V_Set,verifie_Ibat@res
  6008  001BDC  C185  F191         	movff	?_I_V_Set+1,verifie_Ibat@res+1
  6009                           
  6010                           ;user.c: 395: if (res != OK)
  6011  001BE0  0101               	movlb	1	; () banked
  6012  001BE2  5190               	movf	verifie_Ibat@res& (0+255),w,b
  6013  001BE4  0101               	movlb	1	; () banked
  6014  001BE6  1191               	iorwf	(verifie_Ibat@res+1)& (0+255),w,b
  6015  001BE8  B4D8               	btfsc	status,2,c
  6016  001BEA  D006               	goto	l8290
  6017                           
  6018                           ; BSR set to: 1
  6019                           ;user.c: 396: {
  6020                           ;user.c: 397: return KO;
  6021  001BEC  0E00               	movlw	0
  6022  001BEE  0101               	movlb	1	; () banked
  6023  001BF0  6F8C               	movwf	(?_verifie_Ibat+1)& (0+255),b
  6024  001BF2  0E01               	movlw	1
  6025  001BF4  6F8B               	movwf	?_verifie_Ibat& (0+255),b
  6026                           
  6027                           ; BSR set to: 1
  6028  001BF6  0012               	return	
  6029  001BF8                     l8290:
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;user.c: 398: }
  6033                           ;user.c: 399: strncpy(end,"PROGRESS",8);
  6034  001BF8  C18B  F0C7         	movff	verifie_Ibat@end,strncpy@to
  6035  001BFC  C18C  F0C8         	movff	verifie_Ibat@end+1,strncpy@to+1
  6036  001C00  0EE2               	movlw	low STR_15
  6037  001C02  0100               	movlb	0	; () banked
  6038  001C04  6FC9               	movwf	strncpy@from& (0+255),b
  6039  001C06  0E7F               	movlw	high STR_15
  6040  001C08  0100               	movlb	0	; () banked
  6041  001C0A  6FCA               	movwf	(strncpy@from+1)& (0+255),b
  6042  001C0C  0E00               	movlw	0
  6043  001C0E  0100               	movlb	0	; () banked
  6044  001C10  6FCC               	movwf	(strncpy@size+1)& (0+255),b
  6045  001C12  0E08               	movlw	8
  6046  001C14  6FCB               	movwf	strncpy@size& (0+255),b
  6047  001C16  EC89  F01C         	call	_strncpy	;wreg free
  6048                           
  6049                           ;user.c: 400: return OK;
  6050  001C1A  0E00               	movlw	0
  6051  001C1C  0101               	movlb	1	; () banked
  6052  001C1E  6F8C               	movwf	(?_verifie_Ibat+1)& (0+255),b
  6053  001C20  0E00               	movlw	0
  6054  001C22  6F8B               	movwf	?_verifie_Ibat& (0+255),b
  6055                           
  6056                           ; BSR set to: 1
  6057  001C24  0012               	return	
  6058  001C26                     __end_of_verifie_Ibat:
  6059                           	opt stack 0
  6060                           tblptru	equ	0xFF8
  6061                           tblptrh	equ	0xFF7
  6062                           tblptrl	equ	0xFF6
  6063                           tablat	equ	0xFF5
  6064                           prodh	equ	0xFF4
  6065                           prodl	equ	0xFF3
  6066                           intcon	equ	0xFF2
  6067                           postinc0	equ	0xFEE
  6068                           wreg	equ	0xFE8
  6069                           indf1	equ	0xFE7
  6070                           postdec1	equ	0xFE5
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           plusw2	equ	0xFDB
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _strncpy *****************
  6082 ;; Defined at:
  6083 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strncpy.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6086 ;;		 -> APP_CustomCDCTasks@end(10), battery(90), 
  6087 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6088 ;;		 -> STR_39(9), STR_38(4), STR_37(6), STR_36(9), 
  6089 ;;		 -> STR_35(4), STR_34(6), STR_33(9), STR_32(4), 
  6090 ;;		 -> STR_31(6), STR_29(6), 
  6091 ;;  size            2   21[BANK0 ] unsigned int 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  6094 ;;		 -> APP_CustomCDCTasks@end(10), battery(90), 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2   17[BANK0 ] PTR unsigned char 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6104 ;;      Params:         0       6       0       0       0       0       0       0       0
  6105 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6107 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6108 ;;Total ram usage:        8 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:   12
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_InitCharger
  6115 ;;		_verifie_Precondition
  6116 ;;		_verifie_Vbat
  6117 ;;		_verifie_Ibat
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text14
  6122  003912                     __ptext14:
  6123                           	opt stack 0
  6124  003912                     _strncpy:
  6125                           	opt stack 16
  6126                           
  6127                           ; BSR set to: 1
  6128                           ;incstack = 0
  6129  003912  C0C7  F0CD         	movff	strncpy@to,strncpy@cp
  6130  003916  C0C8  F0CE         	movff	strncpy@to+1,strncpy@cp+1
  6131  00391A  D018               	goto	l7918
  6132  00391C                     l7912:
  6133  00391C  0100               	movlb	0	; () banked
  6134  00391E  07CB               	decf	strncpy@size& (0+255),f,b
  6135  003920  A0D8               	btfss	status,0,c
  6136  003922  07CC               	decf	(strncpy@size+1)& (0+255),f,b
  6137                           
  6138                           ; BSR set to: 0
  6139  003924  C0C9  FFF6         	movff	strncpy@from,tblptrl
  6140  003928  C0CA  FFF7         	movff	strncpy@from+1,tblptrh
  6141  00392C  0100               	movlb	0	; () banked
  6142  00392E  4BC9               	infsnz	strncpy@from& (0+255),f,b
  6143  003930  2BCA               	incf	(strncpy@from+1)& (0+255),f,b
  6144  003932                     	if	0	;tblptru may be non-zero
  6145  003932                     	endif
  6146  003932                     	if	0	;tblptru may be non-zero
  6147  003932                     	endif
  6148  003932  C0CD  FFD9         	movff	strncpy@cp,fsr2l
  6149  003936  C0CE  FFDA         	movff	strncpy@cp+1,fsr2h
  6150  00393A  0100               	movlb	0	; () banked
  6151  00393C  4BCD               	infsnz	strncpy@cp& (0+255),f,b
  6152  00393E  2BCE               	incf	(strncpy@cp+1)& (0+255),f,b
  6153  003940  0008               	tblrd		*
  6154  003942  CFF5 FFDF          	movff	tablat,indf2
  6155  003946  50DF               	movf	indf2,w,c
  6156  003948  B4D8               	btfsc	status,2,c
  6157  00394A  D010               	goto	l7924
  6158  00394C                     l7918:
  6159  00394C  0100               	movlb	0	; () banked
  6160  00394E  51CB               	movf	strncpy@size& (0+255),w,b
  6161  003950  0100               	movlb	0	; () banked
  6162  003952  11CC               	iorwf	(strncpy@size+1)& (0+255),w,b
  6163  003954  B4D8               	btfsc	status,2,c
  6164  003956  D00A               	goto	l7924
  6165  003958  D7E1               	goto	l7912
  6166  00395A                     l7920:
  6167                           
  6168                           ; BSR set to: 0
  6169  00395A  C0CD  FFD9         	movff	strncpy@cp,fsr2l
  6170  00395E  C0CE  FFDA         	movff	strncpy@cp+1,fsr2h
  6171  003962  0E00               	movlw	0
  6172  003964  6EDF               	movwf	indf2,c
  6173                           
  6174                           ; BSR set to: 0
  6175  003966  0100               	movlb	0	; () banked
  6176  003968  4BCD               	infsnz	strncpy@cp& (0+255),f,b
  6177  00396A  2BCE               	incf	(strncpy@cp+1)& (0+255),f,b
  6178  00396C                     l7924:
  6179                           
  6180                           ; BSR set to: 0
  6181  00396C  0100               	movlb	0	; () banked
  6182  00396E  07CB               	decf	strncpy@size& (0+255),f,b
  6183  003970  A0D8               	btfss	status,0,c
  6184  003972  07CC               	decf	(strncpy@size+1)& (0+255),f,b
  6185  003974  0100               	movlb	0	; () banked
  6186  003976  29CB               	incf	strncpy@size& (0+255),w,b
  6187  003978  E1F0               	bnz	l7920
  6188  00397A  0100               	movlb	0	; () banked
  6189  00397C  29CC               	incf	(strncpy@size+1)& (0+255),w,b
  6190  00397E  B4D8               	btfsc	status,2,c
  6191  003980  0012               	return	
  6192  003982  D7EB               	goto	l7920
  6193  003984                     __end_of_strncpy:
  6194                           	opt stack 0
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           postinc0	equ	0xFEE
  6203                           wreg	equ	0xFE8
  6204                           indf1	equ	0xFE7
  6205                           postdec1	equ	0xFE5
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           plusw2	equ	0xFDB
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216 ;; *************** function _calc_Time *****************
  6217 ;; Defined at:
  6218 ;;		line 33 in file "user.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  initial         4   25[BANK0 ] long 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  interval        2   31[BANK0 ] unsigned int 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2   25[BANK0 ] unsigned int 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6232 ;;      Params:         0       4       0       0       0       0       0       0       0
  6233 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6234 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6235 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6236 ;;Total ram usage:        8 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:   13
  6239 ;; This function calls:
  6240 ;;		___awdiv
  6241 ;; This function is called by:
  6242 ;;		_verifie_Precondition
  6243 ;;		_verifie_Vbat
  6244 ;;		_verifie_Ibat
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text15
  6249  003716                     __ptext15:
  6250                           	opt stack 0
  6251  003716                     _calc_Time:
  6252                           	opt stack 15
  6253                           
  6254                           ;user.c: 35: unsigned int interval = 0;
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;incstack = 0
  6258  003716  0E00               	movlw	0
  6259  003718  0100               	movlb	0	; () banked
  6260  00371A  6FD6               	movwf	(calc_Time@interval+1)& (0+255),b
  6261  00371C  0E00               	movlw	0
  6262  00371E  6FD5               	movwf	calc_Time@interval& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;user.c: 37: if (seconds >= initial)
  6266  003720  0100               	movlb	0	; () banked
  6267  003722  51CF               	movf	calc_Time@initial& (0+255),w,b
  6268  003724  0100               	movlb	0	; () banked
  6269  003726  5D7E               	subwf	_seconds& (0+255),w,b
  6270  003728  0100               	movlb	0	; () banked
  6271  00372A  51D0               	movf	(calc_Time@initial+1)& (0+255),w,b
  6272  00372C  0100               	movlb	0	; () banked
  6273  00372E  597F               	subwfb	(_seconds+1)& (0+255),w,b
  6274  003730  0100               	movlb	0	; () banked
  6275  003732  51D1               	movf	(calc_Time@initial+2)& (0+255),w,b
  6276  003734  0100               	movlb	0	; () banked
  6277  003736  5980               	subwfb	(_seconds+2)& (0+255),w,b
  6278  003738  0100               	movlb	0	; () banked
  6279  00373A  5181               	movf	(_seconds+3)& (0+255),w,b
  6280  00373C  0A80               	xorlw	128
  6281  00373E  0100               	movlb	0	; () banked
  6282  003740  6FD3               	movwf	??_calc_Time& (0+255),b
  6283  003742  0100               	movlb	0	; () banked
  6284  003744  51D2               	movf	(calc_Time@initial+3)& (0+255),w,b
  6285  003746  0A80               	xorlw	128
  6286  003748  0100               	movlb	0	; () banked
  6287  00374A  59D3               	subwfb	??_calc_Time& (0+255),w,b
  6288  00374C  A0D8               	btfss	status,0,c
  6289  00374E  D024               	goto	l7906
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;user.c: 38: {
  6293                           ;user.c: 39: interval = seconds - initial;
  6294  003750  C0CF  F0D3         	movff	calc_Time@initial,??_calc_Time
  6295  003754  C0D0  F0D4         	movff	calc_Time@initial+1,??_calc_Time+1
  6296  003758  0100               	movlb	0	; () banked
  6297  00375A  1FD3               	comf	??_calc_Time& (0+255),f,b
  6298  00375C  1FD4               	comf	(??_calc_Time+1)& (0+255),f,b
  6299  00375E  4BD3               	infsnz	??_calc_Time& (0+255),f,b
  6300  003760  2BD4               	incf	(??_calc_Time+1)& (0+255),f,b
  6301  003762  0100               	movlb	0	; () banked
  6302  003764  517E               	movf	_seconds& (0+255),w,b
  6303  003766  0100               	movlb	0	; () banked
  6304  003768  25D3               	addwf	??_calc_Time& (0+255),w,b
  6305  00376A  0100               	movlb	0	; () banked
  6306  00376C  6FD5               	movwf	calc_Time@interval& (0+255),b
  6307  00376E  0100               	movlb	0	; () banked
  6308  003770  517F               	movf	(_seconds+1)& (0+255),w,b
  6309  003772  0100               	movlb	0	; () banked
  6310  003774  21D4               	addwfc	(??_calc_Time+1)& (0+255),w,b
  6311  003776  0100               	movlb	0	; () banked
  6312  003778  6FD6               	movwf	(calc_Time@interval+1)& (0+255),b
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;user.c: 40: interval = (int) interval / 60;
  6316  00377A  C0D5  F0C7         	movff	calc_Time@interval,___awdiv@dividend
  6317  00377E  C0D6  F0C8         	movff	calc_Time@interval+1,___awdiv@dividend+1
  6318  003782  0E00               	movlw	0
  6319  003784  0100               	movlb	0	; () banked
  6320  003786  6FCA               	movwf	(___awdiv@divisor+1)& (0+255),b
  6321  003788  0E3C               	movlw	60
  6322  00378A  6FC9               	movwf	___awdiv@divisor& (0+255),b
  6323  00378C  EC45  F019         	call	___awdiv	;wreg free
  6324  003790  C0C7  F0D5         	movff	?___awdiv,calc_Time@interval
  6325  003794  C0C8  F0D6         	movff	?___awdiv+1,calc_Time@interval+1
  6326  003798                     l7906:
  6327                           
  6328                           ;user.c: 41: }
  6329                           ;user.c: 43: return interval;
  6330  003798  C0D5  F0CF         	movff	calc_Time@interval,?_calc_Time
  6331  00379C  C0D6  F0D0         	movff	calc_Time@interval+1,?_calc_Time+1
  6332  0037A0  0012               	return	
  6333  0037A2                     __end_of_calc_Time:
  6334                           	opt stack 0
  6335                           tblptru	equ	0xFF8
  6336                           tblptrh	equ	0xFF7
  6337                           tblptrl	equ	0xFF6
  6338                           tablat	equ	0xFF5
  6339                           prodh	equ	0xFF4
  6340                           prodl	equ	0xFF3
  6341                           intcon	equ	0xFF2
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           indf1	equ	0xFE7
  6345                           postdec1	equ	0xFE5
  6346                           fsr1h	equ	0xFE2
  6347                           fsr1l	equ	0xFE1
  6348                           indf2	equ	0xFDF
  6349                           postinc2	equ	0xFDE
  6350                           postdec2	equ	0xFDD
  6351                           plusw2	equ	0xFDB
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356 ;; *************** function ___awdiv *****************
  6357 ;; Defined at:
  6358 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\awdiv.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  dividend        2   17[BANK0 ] int 
  6361 ;;  divisor         2   19[BANK0 ] int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  quotient        2   23[BANK0 ] int 
  6364 ;;  sign            1   22[BANK0 ] unsigned char 
  6365 ;;  counter         1   21[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  2   17[BANK0 ] int 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:         0       4       0       0       0       0       0       0       0
  6376 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6378 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6379 ;;Total ram usage:        8 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:   12
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_calc_Time
  6386 ;;		_utoa
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text16
  6391  00328A                     __ptext16:
  6392                           	opt stack 0
  6393  00328A                     ___awdiv:
  6394                           	opt stack 15
  6395                           
  6396                           ;incstack = 0
  6397  00328A  0E00               	movlw	0
  6398  00328C  0100               	movlb	0	; () banked
  6399  00328E  6FCC               	movwf	___awdiv@sign& (0+255),b
  6400                           
  6401                           ; BSR set to: 0
  6402  003290  0100               	movlb	0	; () banked
  6403  003292  AFCA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6404  003294  D008               	goto	l7848
  6405                           
  6406                           ; BSR set to: 0
  6407  003296  0100               	movlb	0	; () banked
  6408  003298  6DC9               	negf	___awdiv@divisor& (0+255),b
  6409  00329A  1FCA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6410  00329C  B0D8               	btfsc	status,0,c
  6411  00329E  2BCA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6412                           
  6413                           ; BSR set to: 0
  6414  0032A0  0E01               	movlw	1
  6415  0032A2  0100               	movlb	0	; () banked
  6416  0032A4  6FCC               	movwf	___awdiv@sign& (0+255),b
  6417  0032A6                     l7848:
  6418                           
  6419                           ; BSR set to: 0
  6420  0032A6  0100               	movlb	0	; () banked
  6421  0032A8  AFC8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6422  0032AA  D008               	goto	l7854
  6423                           
  6424                           ; BSR set to: 0
  6425  0032AC  0100               	movlb	0	; () banked
  6426  0032AE  6DC7               	negf	___awdiv@dividend& (0+255),b
  6427  0032B0  1FC8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6428  0032B2  B0D8               	btfsc	status,0,c
  6429  0032B4  2BC8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6430                           
  6431                           ; BSR set to: 0
  6432  0032B6  0E01               	movlw	1
  6433  0032B8  0100               	movlb	0	; () banked
  6434  0032BA  1BCC               	xorwf	___awdiv@sign& (0+255),f,b
  6435  0032BC                     l7854:
  6436                           
  6437                           ; BSR set to: 0
  6438  0032BC  0E00               	movlw	0
  6439  0032BE  0100               	movlb	0	; () banked
  6440  0032C0  6FCE               	movwf	(___awdiv@quotient+1)& (0+255),b
  6441  0032C2  0E00               	movlw	0
  6442  0032C4  6FCD               	movwf	___awdiv@quotient& (0+255),b
  6443                           
  6444                           ; BSR set to: 0
  6445  0032C6  0100               	movlb	0	; () banked
  6446  0032C8  51C9               	movf	___awdiv@divisor& (0+255),w,b
  6447  0032CA  0100               	movlb	0	; () banked
  6448  0032CC  11CA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6449  0032CE  B4D8               	btfsc	status,2,c
  6450  0032D0  D02C               	goto	l7876
  6451                           
  6452                           ; BSR set to: 0
  6453  0032D2  0E01               	movlw	1
  6454  0032D4  0100               	movlb	0	; () banked
  6455  0032D6  6FCB               	movwf	___awdiv@counter& (0+255),b
  6456  0032D8  D006               	goto	l7862
  6457  0032DA                     l7860:
  6458                           
  6459                           ; BSR set to: 0
  6460  0032DA  0100               	movlb	0	; () banked
  6461  0032DC  90D8               	bcf	status,0,c
  6462  0032DE  37C9               	rlcf	___awdiv@divisor& (0+255),f,b
  6463  0032E0  37CA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6464  0032E2  0100               	movlb	0	; () banked
  6465  0032E4  2BCB               	incf	___awdiv@counter& (0+255),f,b
  6466  0032E6                     l7862:
  6467                           
  6468                           ; BSR set to: 0
  6469  0032E6  0100               	movlb	0	; () banked
  6470  0032E8  AFCA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6471  0032EA  D7F7               	goto	l7860
  6472  0032EC                     l7864:
  6473                           
  6474                           ; BSR set to: 0
  6475  0032EC  0100               	movlb	0	; () banked
  6476  0032EE  90D8               	bcf	status,0,c
  6477  0032F0  37CD               	rlcf	___awdiv@quotient& (0+255),f,b
  6478  0032F2  37CE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6479                           
  6480                           ; BSR set to: 0
  6481  0032F4  0100               	movlb	0	; () banked
  6482  0032F6  51C9               	movf	___awdiv@divisor& (0+255),w,b
  6483  0032F8  0100               	movlb	0	; () banked
  6484  0032FA  5DC7               	subwf	___awdiv@dividend& (0+255),w,b
  6485  0032FC  0100               	movlb	0	; () banked
  6486  0032FE  51CA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6487  003300  0100               	movlb	0	; () banked
  6488  003302  59C8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6489  003304  A0D8               	btfss	status,0,c
  6490  003306  D00A               	goto	l7872
  6491                           
  6492                           ; BSR set to: 0
  6493  003308  0100               	movlb	0	; () banked
  6494  00330A  51C9               	movf	___awdiv@divisor& (0+255),w,b
  6495  00330C  0100               	movlb	0	; () banked
  6496  00330E  5FC7               	subwf	___awdiv@dividend& (0+255),f,b
  6497  003310  0100               	movlb	0	; () banked
  6498  003312  51CA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6499  003314  0100               	movlb	0	; () banked
  6500  003316  5BC8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 0
  6503  003318  0100               	movlb	0	; () banked
  6504  00331A  81CD               	bsf	___awdiv@quotient& (0+255),0,b
  6505  00331C                     l7872:
  6506                           
  6507                           ; BSR set to: 0
  6508  00331C  0100               	movlb	0	; () banked
  6509  00331E  90D8               	bcf	status,0,c
  6510  003320  33CA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6511  003322  33C9               	rrcf	___awdiv@divisor& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514  003324  0100               	movlb	0	; () banked
  6515  003326  2FCB               	decfsz	___awdiv@counter& (0+255),f,b
  6516  003328  D7E1               	goto	l7864
  6517  00332A                     l7876:
  6518                           
  6519                           ; BSR set to: 0
  6520  00332A  0100               	movlb	0	; () banked
  6521  00332C  51CC               	movf	___awdiv@sign& (0+255),w,b
  6522  00332E  0100               	movlb	0	; () banked
  6523  003330  B4D8               	btfsc	status,2,c
  6524  003332  D005               	goto	l7880
  6525                           
  6526                           ; BSR set to: 0
  6527  003334  0100               	movlb	0	; () banked
  6528  003336  6DCD               	negf	___awdiv@quotient& (0+255),b
  6529  003338  1FCE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6530  00333A  B0D8               	btfsc	status,0,c
  6531  00333C  2BCE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6532  00333E                     l7880:
  6533                           
  6534                           ; BSR set to: 0
  6535  00333E  C0CD  F0C7         	movff	___awdiv@quotient,?___awdiv
  6536  003342  C0CE  F0C8         	movff	___awdiv@quotient+1,?___awdiv+1
  6537  003346  0012               	return	
  6538  003348                     __end_of___awdiv:
  6539                           	opt stack 0
  6540                           tblptru	equ	0xFF8
  6541                           tblptrh	equ	0xFF7
  6542                           tblptrl	equ	0xFF6
  6543                           tablat	equ	0xFF5
  6544                           prodh	equ	0xFF4
  6545                           prodl	equ	0xFF3
  6546                           intcon	equ	0xFF2
  6547                           postinc0	equ	0xFEE
  6548                           wreg	equ	0xFE8
  6549                           indf1	equ	0xFE7
  6550                           postdec1	equ	0xFE5
  6551                           fsr1h	equ	0xFE2
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           postinc2	equ	0xFDE
  6555                           postdec2	equ	0xFDD
  6556                           plusw2	equ	0xFDB
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           
  6561 ;; *************** function _strncmp *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strncmp.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  s1              2   17[BANK0 ] PTR const unsigned char 
  6566 ;;		 -> APP_CustomCDCTasks@end(10), battery.battery_type(5), battery(90), 
  6567 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  6568 ;;		 -> STR_27(9), STR_25(6), STR_24(4), STR_21(9), 
  6569 ;;		 -> STR_19(6), STR_18(4), STR_15(9), STR_13(6), 
  6570 ;;		 -> STR_12(4), algo_Name(15), 
  6571 ;;  len             2   21[BANK0 ] unsigned int 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2   17[BANK0 ] int 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         0       6       0       0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6586 ;;      Totals:         0       9       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        9 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:   12
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_APP_CustomCDCTasks
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text17
  6598  002EA6                     __ptext17:
  6599                           	opt stack 0
  6600  002EA6                     _strncmp:
  6601                           	opt stack 17
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;incstack = 0
  6605  002EA6  D053               	goto	l8088
  6606  002EA8                     l8078:
  6607  002EA8  C0C7  FFD9         	movff	strncmp@s1,fsr2l
  6608  002EAC  C0C8  FFDA         	movff	strncmp@s1+1,fsr2h
  6609  002EB0  50DF               	movf	indf2,w,c
  6610  002EB2  B4D8               	btfsc	status,2,c
  6611  002EB4  D01B               	goto	l8082
  6612  002EB6  C0C7  FFD9         	movff	strncmp@s1,fsr2l
  6613  002EBA  C0C8  FFDA         	movff	strncmp@s1+1,fsr2h
  6614  002EBE  50DF               	movf	indf2,w,c
  6615  002EC0  0100               	movlb	0	; () banked
  6616  002EC2  6FCD               	movwf	??_strncmp& (0+255),b
  6617  002EC4  C0C9  FFF6         	movff	strncmp@s2,tblptrl
  6618  002EC8  C0CA  FFF7         	movff	strncmp@s2+1,tblptrh
  6619  002ECC  6AF8               	clrf	tblptru,c
  6620  002ECE  0E07               	movlw	(high __ramtop+-1)
  6621  002ED0  64F7               	cpfsgt	tblptrh,c
  6622  002ED2  D003               	bra	u8477
  6623  002ED4  0008               	tblrd		*
  6624  002ED6  50F5               	movf	tablat,w,c
  6625  002ED8  D005               	bra	u8470
  6626  002EDA                     u8477:
  6627  002EDA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6628  002EDE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6629  002EE2  50EF               	movf	indf0,w,c
  6630  002EE4                     u8470:
  6631  002EE4  0100               	movlb	0	; () banked
  6632  002EE6  19CD               	xorwf	??_strncmp& (0+255),w,b
  6633  002EE8  B4D8               	btfsc	status,2,c
  6634  002EEA  D02B               	goto	l8086
  6635  002EEC                     l8082:
  6636  002EEC  C0C9  FFF6         	movff	strncmp@s2,tblptrl
  6637  002EF0  C0CA  FFF7         	movff	strncmp@s2+1,tblptrh
  6638  002EF4  6AF8               	clrf	tblptru,c
  6639  002EF6  0E07               	movlw	(high __ramtop+-1)
  6640  002EF8  64F7               	cpfsgt	tblptrh,c
  6641  002EFA  D003               	bra	u8497
  6642  002EFC  0008               	tblrd		*
  6643  002EFE  50F5               	movf	tablat,w,c
  6644  002F00  D005               	bra	u8490
  6645  002F02                     u8497:
  6646  002F02  CFF6 FFE9          	movff	tblptrl,fsr0l
  6647  002F06  CFF7 FFEA          	movff	tblptrh,fsr0h
  6648  002F0A  50EF               	movf	indf0,w,c
  6649  002F0C                     u8490:
  6650  002F0C  0100               	movlb	0	; () banked
  6651  002F0E  6FCD               	movwf	??_strncmp& (0+255),b
  6652  002F10  6BCE               	clrf	(??_strncmp+1)& (0+255),b
  6653  002F12  0100               	movlb	0	; () banked
  6654  002F14  1FCD               	comf	??_strncmp& (0+255),f,b
  6655  002F16  1FCE               	comf	(??_strncmp+1)& (0+255),f,b
  6656  002F18  4BCD               	infsnz	??_strncmp& (0+255),f,b
  6657  002F1A  2BCE               	incf	(??_strncmp+1)& (0+255),f,b
  6658  002F1C  C0C7  FFD9         	movff	strncmp@s1,fsr2l
  6659  002F20  C0C8  FFDA         	movff	strncmp@s1+1,fsr2h
  6660  002F24  50DF               	movf	indf2,w,c
  6661  002F26  0100               	movlb	0	; () banked
  6662  002F28  6FCF               	movwf	(??_strncmp+2)& (0+255),b
  6663  002F2A  0100               	movlb	0	; () banked
  6664  002F2C  51CF               	movf	(??_strncmp+2)& (0+255),w,b
  6665  002F2E  0100               	movlb	0	; () banked
  6666  002F30  25CD               	addwf	??_strncmp& (0+255),w,b
  6667  002F32  0100               	movlb	0	; () banked
  6668  002F34  6FC7               	movwf	?_strncmp& (0+255),b
  6669  002F36  0E00               	movlw	0
  6670  002F38  0100               	movlb	0	; () banked
  6671  002F3A  21CE               	addwfc	(??_strncmp+1)& (0+255),w,b
  6672  002F3C  0100               	movlb	0	; () banked
  6673  002F3E  6FC8               	movwf	(?_strncmp+1)& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676  002F40  0012               	return	
  6677  002F42                     l8086:
  6678                           
  6679                           ; BSR set to: 0
  6680  002F42  0100               	movlb	0	; () banked
  6681  002F44  4BC7               	infsnz	strncmp@s1& (0+255),f,b
  6682  002F46  2BC8               	incf	(strncmp@s1+1)& (0+255),f,b
  6683  002F48  0100               	movlb	0	; () banked
  6684  002F4A  4BC9               	infsnz	strncmp@s2& (0+255),f,b
  6685  002F4C  2BCA               	incf	(strncmp@s2+1)& (0+255),f,b
  6686  002F4E                     l8088:
  6687  002F4E  0100               	movlb	0	; () banked
  6688  002F50  07CB               	decf	strncmp@len& (0+255),f,b
  6689  002F52  A0D8               	btfss	status,0,c
  6690  002F54  07CC               	decf	(strncmp@len+1)& (0+255),f,b
  6691  002F56  0100               	movlb	0	; () banked
  6692  002F58  29CB               	incf	strncmp@len& (0+255),w,b
  6693  002F5A  E1A6               	bnz	l8078
  6694  002F5C  0100               	movlb	0	; () banked
  6695  002F5E  29CC               	incf	(strncmp@len+1)& (0+255),w,b
  6696  002F60  A4D8               	btfss	status,2,c
  6697  002F62  D7A2               	goto	l8078
  6698                           
  6699                           ; BSR set to: 0
  6700                           
  6701                           ; BSR set to: 0
  6702  002F64  0E00               	movlw	0
  6703  002F66  0100               	movlb	0	; () banked
  6704  002F68  6FC8               	movwf	(?_strncmp+1)& (0+255),b
  6705  002F6A  0E00               	movlw	0
  6706  002F6C  6FC7               	movwf	?_strncmp& (0+255),b
  6707  002F6E  0012               	return	
  6708  002F70                     __end_of_strncmp:
  6709                           	opt stack 0
  6710                           tblptru	equ	0xFF8
  6711                           tblptrh	equ	0xFF7
  6712                           tblptrl	equ	0xFF6
  6713                           tablat	equ	0xFF5
  6714                           prodh	equ	0xFF4
  6715                           prodl	equ	0xFF3
  6716                           intcon	equ	0xFF2
  6717                           indf0	equ	0xFEF
  6718                           postinc0	equ	0xFEE
  6719                           fsr0h	equ	0xFEA
  6720                           fsr0l	equ	0xFE9
  6721                           wreg	equ	0xFE8
  6722                           indf1	equ	0xFE7
  6723                           postdec1	equ	0xFE5
  6724                           fsr1h	equ	0xFE2
  6725                           fsr1l	equ	0xFE1
  6726                           indf2	equ	0xFDF
  6727                           postinc2	equ	0xFDE
  6728                           postdec2	equ	0xFDD
  6729                           plusw2	equ	0xFDB
  6730                           fsr2h	equ	0xFDA
  6731                           fsr2l	equ	0xFD9
  6732                           status	equ	0xFD8
  6733                           
  6734 ;; *************** function _strcpy *****************
  6735 ;; Defined at:
  6736 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strcpy.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  to              2   17[BANK0 ] PTR unsigned char 
  6739 ;;		 -> APP_CustomCDCTasks@msg_Error(100), 
  6740 ;;  from            2   19[BANK0 ] PTR const unsigned char 
  6741 ;;		 -> STR_28(19), STR_26(22), STR_23(24), STR_22(20), 
  6742 ;;		 -> STR_20(22), STR_17(24), STR_16(20), STR_14(32), 
  6743 ;;		 -> STR_11(34), STR_10(20), STR_9(30), STR_8(27), 
  6744 ;;		 -> STR_7(19), STR_6(19), STR_5(18), STR_4(19), 
  6745 ;;		 -> STR_3(14), 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  cp              2   21[BANK0 ] PTR unsigned char 
  6748 ;;		 -> APP_CustomCDCTasks@msg_Error(100), 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2   17[BANK0 ] PTR unsigned char 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6758 ;;      Params:         0       4       0       0       0       0       0       0       0
  6759 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6761 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6762 ;;Total ram usage:        6 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:   12
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_APP_CustomCDCTasks
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text18
  6773  003E48                     __ptext18:
  6774                           	opt stack 0
  6775  003E48                     _strcpy:
  6776                           	opt stack 17
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;incstack = 0
  6780  003E48  C0C7  F0CB         	movff	strcpy@to,strcpy@cp
  6781  003E4C  C0C8  F0CC         	movff	strcpy@to+1,strcpy@cp+1
  6782  003E50  D006               	goto	l8062
  6783  003E52                     l8060:
  6784  003E52  0100               	movlb	0	; () banked
  6785  003E54  4BCB               	infsnz	strcpy@cp& (0+255),f,b
  6786  003E56  2BCC               	incf	(strcpy@cp+1)& (0+255),f,b
  6787  003E58  0100               	movlb	0	; () banked
  6788  003E5A  4BC9               	infsnz	strcpy@from& (0+255),f,b
  6789  003E5C  2BCA               	incf	(strcpy@from+1)& (0+255),f,b
  6790  003E5E                     l8062:
  6791  003E5E  C0C9  FFF6         	movff	strcpy@from,tblptrl
  6792  003E62  C0CA  FFF7         	movff	strcpy@from+1,tblptrh
  6793  003E66                     	if	0	;tblptru may be non-zero
  6794  003E66                     	endif
  6795  003E66                     	if	0	;tblptru may be non-zero
  6796  003E66                     	endif
  6797  003E66  C0CB  FFD9         	movff	strcpy@cp,fsr2l
  6798  003E6A  C0CC  FFDA         	movff	strcpy@cp+1,fsr2h
  6799  003E6E  0008               	tblrd		*
  6800  003E70  CFF5 FFDF          	movff	tablat,indf2
  6801  003E74  50DF               	movf	indf2,w,c
  6802  003E76  B4D8               	btfsc	status,2,c
  6803  003E78  0012               	return	
  6804  003E7A  D7EB               	goto	l8060
  6805  003E7C                     __end_of_strcpy:
  6806                           	opt stack 0
  6807                           tblptru	equ	0xFF8
  6808                           tblptrh	equ	0xFF7
  6809                           tblptrl	equ	0xFF6
  6810                           tablat	equ	0xFF5
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           indf0	equ	0xFEF
  6815                           postinc0	equ	0xFEE
  6816                           fsr0h	equ	0xFEA
  6817                           fsr0l	equ	0xFE9
  6818                           wreg	equ	0xFE8
  6819                           indf1	equ	0xFE7
  6820                           postdec1	equ	0xFE5
  6821                           fsr1h	equ	0xFE2
  6822                           fsr1l	equ	0xFE1
  6823                           indf2	equ	0xFDF
  6824                           postinc2	equ	0xFDE
  6825                           postdec2	equ	0xFDD
  6826                           plusw2	equ	0xFDB
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function _stop_CV *****************
  6832 ;; Defined at:
  6833 ;;		line 405 in file "user.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  voltage         3   28[BANK1 ] float 
  6838 ;;  v_bat           3   25[BANK1 ] float 
  6839 ;;  res             2   23[BANK1 ] short 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2   21[BANK1 ] short 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6849 ;;      Params:         0       0       2       0       0       0       0       0       0
  6850 ;;      Locals:         0       0       8       0       0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6852 ;;      Totals:         0       0      10       0       0       0       0       0       0
  6853 ;;Total ram usage:       10 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:   15
  6856 ;; This function calls:
  6857 ;;		_V_Eval
  6858 ;;		___ftge
  6859 ;;		___ftmul
  6860 ;;		___lwtoft
  6861 ;; This function is called by:
  6862 ;;		_APP_CustomCDCTasks
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text19
  6867  0028C6                     __ptext19:
  6868                           	opt stack 0
  6869  0028C6                     _stop_CV:
  6870                           	opt stack 14
  6871                           
  6872                           ;user.c: 407: signed float voltage = 0;
  6873                           
  6874                           ;incstack = 0
  6875  0028C6  0E00               	movlw	0
  6876  0028C8  0101               	movlb	1	; () banked
  6877  0028CA  6F8B               	movwf	stop_CV@voltage& (0+255),b
  6878  0028CC  0E00               	movlw	0
  6879  0028CE  0101               	movlb	1	; () banked
  6880  0028D0  6F8C               	movwf	(stop_CV@voltage+1)& (0+255),b
  6881  0028D2  0E00               	movlw	0
  6882  0028D4  0101               	movlb	1	; () banked
  6883  0028D6  6F8D               	movwf	(stop_CV@voltage+2)& (0+255),b
  6884                           
  6885                           ;user.c: 408: short res = KO;
  6886  0028D8  0E00               	movlw	0
  6887  0028DA  0101               	movlb	1	; () banked
  6888  0028DC  6F87               	movwf	(stop_CV@res+1)& (0+255),b
  6889  0028DE  0E01               	movlw	1
  6890  0028E0  6F86               	movwf	stop_CV@res& (0+255),b
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;user.c: 409: float v_bat = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  6894  0028E2  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  6895  0028E6  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  6896  0028EA  EC9C  F01F         	call	___lwtoft	;wreg free
  6897  0028EE  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  6898  0028F2  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  6899  0028F6  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  6900  0028FA  C133  F0D6         	movff	_battery+38,___ftmul@f2
  6901  0028FE  C134  F0D7         	movff	_battery+39,___ftmul@f2+1
  6902  002902  C135  F0D8         	movff	_battery+40,___ftmul@f2+2
  6903  002906  EC13  F00E         	call	___ftmul	;wreg free
  6904  00290A  C0D3  F188         	movff	?___ftmul,stop_CV@v_bat
  6905  00290E  C0D4  F189         	movff	?___ftmul+1,stop_CV@v_bat+1
  6906  002912  C0D5  F18A         	movff	?___ftmul+2,stop_CV@v_bat+2
  6907                           
  6908                           ;user.c: 412: res = V_Eval(0b10000111,&voltage);
  6909  002916  0E8B               	movlw	low stop_CV@voltage
  6910  002918  0101               	movlb	1	; () banked
  6911  00291A  6F7E               	movwf	V_Eval@voltage& (0+255),b
  6912  00291C  0E01               	movlw	high stop_CV@voltage
  6913  00291E  0101               	movlb	1	; () banked
  6914  002920  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  6915  002922  0E87               	movlw	135
  6916  002924  ECAB  F015         	call	_V_Eval
  6917  002928  C17E  F186         	movff	?_V_Eval,stop_CV@res
  6918  00292C  C17F  F187         	movff	?_V_Eval+1,stop_CV@res+1
  6919                           
  6920                           ;user.c: 413: if (res != OK)
  6921  002930  0101               	movlb	1	; () banked
  6922  002932  5186               	movf	stop_CV@res& (0+255),w,b
  6923  002934  0101               	movlb	1	; () banked
  6924  002936  1187               	iorwf	(stop_CV@res+1)& (0+255),w,b
  6925  002938  B4D8               	btfsc	status,2,c
  6926  00293A  D006               	goto	l8308
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;user.c: 414: {
  6930                           ;user.c: 415: return KO;
  6931  00293C  0E00               	movlw	0
  6932  00293E  0101               	movlb	1	; () banked
  6933  002940  6F85               	movwf	(?_stop_CV+1)& (0+255),b
  6934  002942  0E01               	movlw	1
  6935  002944  6F84               	movwf	?_stop_CV& (0+255),b
  6936                           
  6937                           ; BSR set to: 1
  6938  002946  0012               	return	
  6939  002948                     l8308:
  6940                           
  6941                           ; BSR set to: 1
  6942                           ;user.c: 416: }
  6943                           ;user.c: 418: if (voltage >= v_bat - (10/1000) && voltage <= v_bat + (10/1000))
  6944  002948  C18B  F0E2         	movff	stop_CV@voltage,___ftge@ff1
  6945  00294C  C18C  F0E3         	movff	stop_CV@voltage+1,___ftge@ff1+1
  6946  002950  C18D  F0E4         	movff	stop_CV@voltage+2,___ftge@ff1+2
  6947  002954  C188  F0E5         	movff	stop_CV@v_bat,___ftge@ff2
  6948  002958  C189  F0E6         	movff	stop_CV@v_bat+1,___ftge@ff2+1
  6949  00295C  C18A  F0E7         	movff	stop_CV@v_bat+2,___ftge@ff2+2
  6950  002960  EC1D  F018         	call	___ftge	;wreg free
  6951  002964  0100               	movlb	0	; () banked
  6952  002966  A0D8               	btfss	status,0,c
  6953  002968  D017               	goto	l8318
  6954                           
  6955                           ; BSR set to: 0
  6956  00296A  C188  F0E2         	movff	stop_CV@v_bat,___ftge@ff1
  6957  00296E  C189  F0E3         	movff	stop_CV@v_bat+1,___ftge@ff1+1
  6958  002972  C18A  F0E4         	movff	stop_CV@v_bat+2,___ftge@ff1+2
  6959  002976  C18B  F0E5         	movff	stop_CV@voltage,___ftge@ff2
  6960  00297A  C18C  F0E6         	movff	stop_CV@voltage+1,___ftge@ff2+1
  6961  00297E  C18D  F0E7         	movff	stop_CV@voltage+2,___ftge@ff2+2
  6962  002982  EC1D  F018         	call	___ftge	;wreg free
  6963  002986  0100               	movlb	0	; () banked
  6964  002988  A0D8               	btfss	status,0,c
  6965  00298A  D006               	goto	l8318
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;user.c: 419: {
  6969                           ;user.c: 420: return OK;
  6970  00298C  0E00               	movlw	0
  6971  00298E  0101               	movlb	1	; () banked
  6972  002990  6F85               	movwf	(?_stop_CV+1)& (0+255),b
  6973  002992  0E00               	movlw	0
  6974  002994  6F84               	movwf	?_stop_CV& (0+255),b
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;user.c: 421: }
  6978                           
  6979                           ; BSR set to: 1
  6980  002996  0012               	return	
  6981  002998                     l8318:
  6982                           
  6983                           ;user.c: 422: else
  6984                           ;user.c: 423: {
  6985                           ;user.c: 424: return KO;
  6986  002998  0E00               	movlw	0
  6987  00299A  0101               	movlb	1	; () banked
  6988  00299C  6F85               	movwf	(?_stop_CV+1)& (0+255),b
  6989  00299E  0E01               	movlw	1
  6990  0029A0  6F84               	movwf	?_stop_CV& (0+255),b
  6991                           
  6992                           ; BSR set to: 1
  6993  0029A2  0012               	return	
  6994  0029A4                     __end_of_stop_CV:
  6995                           	opt stack 0
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           prodh	equ	0xFF4
  7001                           prodl	equ	0xFF3
  7002                           intcon	equ	0xFF2
  7003                           indf0	equ	0xFEF
  7004                           postinc0	equ	0xFEE
  7005                           fsr0h	equ	0xFEA
  7006                           fsr0l	equ	0xFE9
  7007                           wreg	equ	0xFE8
  7008                           indf1	equ	0xFE7
  7009                           postdec1	equ	0xFE5
  7010                           fsr1h	equ	0xFE2
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           postinc2	equ	0xFDE
  7014                           postdec2	equ	0xFDD
  7015                           plusw2	equ	0xFDB
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020 ;; *************** function _start_Precondition *****************
  7021 ;; Defined at:
  7022 ;;		line 250 in file "user.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  res             2   30[BANK1 ] short 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  2   28[BANK1 ] short 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7036 ;;      Params:         0       0       2       0       0       0       0       0       0
  7037 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7039 ;;      Totals:         0       0       4       0       0       0       0       0       0
  7040 ;;Total ram usage:        4 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:   16
  7043 ;; This function calls:
  7044 ;;		_I_V_Set
  7045 ;; This function is called by:
  7046 ;;		_APP_CustomCDCTasks
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text20
  7051  003BF6                     __ptext20:
  7052                           	opt stack 0
  7053  003BF6                     _start_Precondition:
  7054                           	opt stack 13
  7055                           
  7056                           ;user.c: 252: short res;
  7057                           ;user.c: 254: PI.Setpoint = battery.charge.restore_Charge_Current;
  7058                           
  7059                           ; BSR set to: 1
  7060                           ;incstack = 0
  7061  003BF6  C13B  F0A5         	movff	_battery+46,_PI+6
  7062  003BFA  C13C  F0A6         	movff	_battery+47,_PI+7
  7063  003BFE  C13D  F0A7         	movff	_battery+48,_PI+8
  7064                           
  7065                           ;user.c: 255: PI.Saturated = 0;
  7066  003C02  0E00               	movlw	0
  7067  003C04  0100               	movlb	0	; () banked
  7068  003C06  6FB5               	movwf	(_PI+22)& (0+255),b
  7069  003C08  0E00               	movlw	0
  7070  003C0A  6FB4               	movwf	(_PI+21)& (0+255),b
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;user.c: 256: res = I_V_Set(0b11010111);
  7074  003C0C  0ED7               	movlw	215
  7075  003C0E  ECB8  F017         	call	_I_V_Set
  7076  003C12  C184  F18D         	movff	?_I_V_Set,start_Precondition@res
  7077  003C16  C185  F18E         	movff	?_I_V_Set+1,start_Precondition@res+1
  7078                           
  7079                           ;user.c: 257: if (res != OK)
  7080  003C1A  0101               	movlb	1	; () banked
  7081  003C1C  518D               	movf	start_Precondition@res& (0+255),w,b
  7082  003C1E  0101               	movlb	1	; () banked
  7083  003C20  118E               	iorwf	(start_Precondition@res+1)& (0+255),w,b
  7084  003C22  B4D8               	btfsc	status,2,c
  7085  003C24  D006               	goto	l418
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;user.c: 258: {
  7089                           ;user.c: 259: return KO;
  7090  003C26  0E00               	movlw	0
  7091  003C28  0101               	movlb	1	; () banked
  7092  003C2A  6F8C               	movwf	(?_start_Precondition+1)& (0+255),b
  7093  003C2C  0E01               	movlw	1
  7094  003C2E  6F8B               	movwf	?_start_Precondition& (0+255),b
  7095                           
  7096                           ; BSR set to: 1
  7097  003C30  0012               	return	
  7098  003C32                     l418:
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;user.c: 260: }
  7102                           ;user.c: 261: precondition_Time = seconds;
  7103  003C32  C07E  F091         	movff	_seconds,_precondition_Time
  7104  003C36  C07F  F092         	movff	_seconds+1,_precondition_Time+1
  7105  003C3A  C080  F093         	movff	_seconds+2,_precondition_Time+2
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;user.c: 263: return OK;
  7109  003C3E  0E00               	movlw	0
  7110  003C40  0101               	movlb	1	; () banked
  7111  003C42  6F8C               	movwf	(?_start_Precondition+1)& (0+255),b
  7112  003C44  0E00               	movlw	0
  7113  003C46  6F8B               	movwf	?_start_Precondition& (0+255),b
  7114  003C48  0012               	return	
  7115  003C4A                     __end_of_start_Precondition:
  7116                           	opt stack 0
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           prodh	equ	0xFF4
  7122                           prodl	equ	0xFF3
  7123                           intcon	equ	0xFF2
  7124                           indf0	equ	0xFEF
  7125                           postinc0	equ	0xFEE
  7126                           fsr0h	equ	0xFEA
  7127                           fsr0l	equ	0xFE9
  7128                           wreg	equ	0xFE8
  7129                           indf1	equ	0xFE7
  7130                           postdec1	equ	0xFE5
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           indf2	equ	0xFDF
  7134                           postinc2	equ	0xFDE
  7135                           postdec2	equ	0xFDD
  7136                           plusw2	equ	0xFDB
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           
  7141 ;; *************** function _start_CV *****************
  7142 ;; Defined at:
  7143 ;;		line 354 in file "user.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  res             2   30[BANK1 ] short 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  2   28[BANK1 ] short 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7157 ;;      Params:         0       0       2       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       4       0       0       0       0       0       0
  7161 ;;Total ram usage:        4 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:   16
  7164 ;; This function calls:
  7165 ;;		_I_V_Set
  7166 ;;		___ftmul
  7167 ;;		___lwtoft
  7168 ;; This function is called by:
  7169 ;;		_APP_CustomCDCTasks
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text21
  7174  0039F6                     __ptext21:
  7175                           	opt stack 0
  7176  0039F6                     _start_CV:
  7177                           	opt stack 13
  7178                           
  7179                           ;user.c: 356: short res;
  7180                           ;user.c: 358: PI.Setpoint = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;incstack = 0
  7184  0039F6  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  7185  0039FA  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  7186  0039FE  EC9C  F01F         	call	___lwtoft	;wreg free
  7187  003A02  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  7188  003A06  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  7189  003A0A  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  7190  003A0E  C133  F0D6         	movff	_battery+38,___ftmul@f2
  7191  003A12  C134  F0D7         	movff	_battery+39,___ftmul@f2+1
  7192  003A16  C135  F0D8         	movff	_battery+40,___ftmul@f2+2
  7193  003A1A  EC13  F00E         	call	___ftmul	;wreg free
  7194  003A1E  C0D3  F0A5         	movff	?___ftmul,_PI+6
  7195  003A22  C0D4  F0A6         	movff	?___ftmul+1,_PI+7
  7196  003A26  C0D5  F0A7         	movff	?___ftmul+2,_PI+8
  7197                           
  7198                           ;user.c: 359: PI.Saturated = 0;
  7199  003A2A  0E00               	movlw	0
  7200  003A2C  0100               	movlb	0	; () banked
  7201  003A2E  6FB5               	movwf	(_PI+22)& (0+255),b
  7202  003A30  0E00               	movlw	0
  7203  003A32  6FB4               	movwf	(_PI+21)& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;user.c: 360: res = I_V_Set(0b10000111);
  7207  003A34  0E87               	movlw	135
  7208  003A36  ECB8  F017         	call	_I_V_Set
  7209  003A3A  C184  F18D         	movff	?_I_V_Set,start_CV@res
  7210  003A3E  C185  F18E         	movff	?_I_V_Set+1,start_CV@res+1
  7211                           
  7212                           ;user.c: 361: if (res != OK)
  7213  003A42  0101               	movlb	1	; () banked
  7214  003A44  518D               	movf	start_CV@res& (0+255),w,b
  7215  003A46  0101               	movlb	1	; () banked
  7216  003A48  118E               	iorwf	(start_CV@res+1)& (0+255),w,b
  7217  003A4A  B4D8               	btfsc	status,2,c
  7218  003A4C  D006               	goto	l8248
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;user.c: 362: {
  7222                           ;user.c: 363: return KO;
  7223  003A4E  0E00               	movlw	0
  7224  003A50  0101               	movlb	1	; () banked
  7225  003A52  6F8C               	movwf	(?_start_CV+1)& (0+255),b
  7226  003A54  0E01               	movlw	1
  7227  003A56  6F8B               	movwf	?_start_CV& (0+255),b
  7228                           
  7229                           ; BSR set to: 1
  7230  003A58  0012               	return	
  7231  003A5A                     l8248:
  7232                           
  7233                           ; BSR set to: 1
  7234                           ;user.c: 364: }
  7235                           ;user.c: 366: return OK;
  7236  003A5A  0E00               	movlw	0
  7237  003A5C  0101               	movlb	1	; () banked
  7238  003A5E  6F8C               	movwf	(?_start_CV+1)& (0+255),b
  7239  003A60  0E00               	movlw	0
  7240  003A62  6F8B               	movwf	?_start_CV& (0+255),b
  7241  003A64  0012               	return	
  7242  003A66                     __end_of_start_CV:
  7243                           	opt stack 0
  7244                           tblptru	equ	0xFF8
  7245                           tblptrh	equ	0xFF7
  7246                           tblptrl	equ	0xFF6
  7247                           tablat	equ	0xFF5
  7248                           prodh	equ	0xFF4
  7249                           prodl	equ	0xFF3
  7250                           intcon	equ	0xFF2
  7251                           indf0	equ	0xFEF
  7252                           postinc0	equ	0xFEE
  7253                           fsr0h	equ	0xFEA
  7254                           fsr0l	equ	0xFE9
  7255                           wreg	equ	0xFE8
  7256                           indf1	equ	0xFE7
  7257                           postdec1	equ	0xFE5
  7258                           fsr1h	equ	0xFE2
  7259                           fsr1l	equ	0xFE1
  7260                           indf2	equ	0xFDF
  7261                           postinc2	equ	0xFDE
  7262                           postdec2	equ	0xFDD
  7263                           plusw2	equ	0xFDB
  7264                           fsr2h	equ	0xFDA
  7265                           fsr2l	equ	0xFD9
  7266                           status	equ	0xFD8
  7267                           
  7268 ;; *************** function _start_CC *****************
  7269 ;; Defined at:
  7270 ;;		line 302 in file "user.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  res             2   30[BANK1 ] short 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  2   28[BANK1 ] short 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7284 ;;      Params:         0       0       2       0       0       0       0       0       0
  7285 ;;      Locals:         0       0       2       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7287 ;;      Totals:         0       0       4       0       0       0       0       0       0
  7288 ;;Total ram usage:        4 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:   16
  7291 ;; This function calls:
  7292 ;;		_I_V_Set
  7293 ;; This function is called by:
  7294 ;;		_APP_CustomCDCTasks
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text22
  7299  003C4A                     __ptext22:
  7300                           	opt stack 0
  7301  003C4A                     _start_CC:
  7302                           	opt stack 13
  7303                           
  7304                           ;user.c: 304: short res;
  7305                           ;user.c: 306: PI.Setpoint = battery.charge.chg_Current;
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;incstack = 0
  7309  003C4A  C120  F0A5         	movff	_battery+19,_PI+6
  7310  003C4E  C121  F0A6         	movff	_battery+20,_PI+7
  7311  003C52  C122  F0A7         	movff	_battery+21,_PI+8
  7312                           
  7313                           ;user.c: 307: PI.Saturated = 0;
  7314  003C56  0E00               	movlw	0
  7315  003C58  0100               	movlb	0	; () banked
  7316  003C5A  6FB5               	movwf	(_PI+22)& (0+255),b
  7317  003C5C  0E00               	movlw	0
  7318  003C5E  6FB4               	movwf	(_PI+21)& (0+255),b
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;user.c: 308: res = I_V_Set(0b11010111);
  7322  003C60  0ED7               	movlw	215
  7323  003C62  ECB8  F017         	call	_I_V_Set
  7324  003C66  C184  F18D         	movff	?_I_V_Set,start_CC@res
  7325  003C6A  C185  F18E         	movff	?_I_V_Set+1,start_CC@res+1
  7326                           
  7327                           ;user.c: 309: if (res != OK)
  7328  003C6E  0101               	movlb	1	; () banked
  7329  003C70  518D               	movf	start_CC@res& (0+255),w,b
  7330  003C72  0101               	movlb	1	; () banked
  7331  003C74  118E               	iorwf	(start_CC@res+1)& (0+255),w,b
  7332  003C76  B4D8               	btfsc	status,2,c
  7333  003C78  D006               	goto	l430
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;user.c: 310: {
  7337                           ;user.c: 311: return KO;
  7338  003C7A  0E00               	movlw	0
  7339  003C7C  0101               	movlb	1	; () banked
  7340  003C7E  6F8C               	movwf	(?_start_CC+1)& (0+255),b
  7341  003C80  0E01               	movlw	1
  7342  003C82  6F8B               	movwf	?_start_CC& (0+255),b
  7343                           
  7344                           ; BSR set to: 1
  7345  003C84  0012               	return	
  7346  003C86                     l430:
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;user.c: 312: }
  7350                           ;user.c: 313: charge_Time = seconds;
  7351  003C86  C07E  F082         	movff	_seconds,_charge_Time
  7352  003C8A  C07F  F083         	movff	_seconds+1,_charge_Time+1
  7353  003C8E  C080  F084         	movff	_seconds+2,_charge_Time+2
  7354                           
  7355                           ; BSR set to: 1
  7356                           ;user.c: 315: return OK;
  7357  003C92  0E00               	movlw	0
  7358  003C94  0101               	movlb	1	; () banked
  7359  003C96  6F8C               	movwf	(?_start_CC+1)& (0+255),b
  7360  003C98  0E00               	movlw	0
  7361  003C9A  6F8B               	movwf	?_start_CC& (0+255),b
  7362  003C9C  0012               	return	
  7363  003C9E                     __end_of_start_CC:
  7364                           	opt stack 0
  7365                           tblptru	equ	0xFF8
  7366                           tblptrh	equ	0xFF7
  7367                           tblptrl	equ	0xFF6
  7368                           tablat	equ	0xFF5
  7369                           prodh	equ	0xFF4
  7370                           prodl	equ	0xFF3
  7371                           intcon	equ	0xFF2
  7372                           indf0	equ	0xFEF
  7373                           postinc0	equ	0xFEE
  7374                           fsr0h	equ	0xFEA
  7375                           fsr0l	equ	0xFE9
  7376                           wreg	equ	0xFE8
  7377                           indf1	equ	0xFE7
  7378                           postdec1	equ	0xFE5
  7379                           fsr1h	equ	0xFE2
  7380                           fsr1l	equ	0xFE1
  7381                           indf2	equ	0xFDF
  7382                           postinc2	equ	0xFDE
  7383                           postdec2	equ	0xFDD
  7384                           plusw2	equ	0xFDB
  7385                           fsr2h	equ	0xFDA
  7386                           fsr2l	equ	0xFD9
  7387                           status	equ	0xFD8
  7388                           
  7389 ;; *************** function _I_V_Set *****************
  7390 ;; Defined at:
  7391 ;;		line 101 in file "user.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  channel         1    wreg     unsigned char 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  channel         1   23[BANK1 ] unsigned char 
  7396 ;;  count           2   26[BANK1 ] short 
  7397 ;;  res             2   24[BANK1 ] short 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  2   21[BANK1 ] short 
  7400 ;; Registers used:
  7401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7407 ;;      Params:         0       0       2       0       0       0       0       0       0
  7408 ;;      Locals:         0       0       5       0       0       0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7410 ;;      Totals:         0       0       7       0       0       0       0       0       0
  7411 ;;Total ram usage:        7 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:   15
  7414 ;; This function calls:
  7415 ;;		_CalcPI
  7416 ;;		_V_Eval
  7417 ;;		___ftge
  7418 ;; This function is called by:
  7419 ;;		_start_Precondition
  7420 ;;		_verifie_Precondition
  7421 ;;		_start_CC
  7422 ;;		_verifie_Vbat
  7423 ;;		_start_CV
  7424 ;;		_verifie_Ibat
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text23
  7429  002F70                     __ptext23:
  7430                           	opt stack 0
  7431  002F70                     _I_V_Set:
  7432                           	opt stack 13
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;incstack = 0
  7436                           ;I_V_Set@channel stored from wreg
  7437  002F70  0101               	movlb	1	; () banked
  7438  002F72  6F86               	movwf	I_V_Set@channel& (0+255),b
  7439                           
  7440                           ;user.c: 103: short res;
  7441                           ;user.c: 104: short count = 0;
  7442  002F74  0E00               	movlw	0
  7443  002F76  0101               	movlb	1	; () banked
  7444  002F78  6F8A               	movwf	(I_V_Set@count+1)& (0+255),b
  7445  002F7A  0E00               	movlw	0
  7446  002F7C  6F89               	movwf	I_V_Set@count& (0+255),b
  7447  002F7E                     l7928:
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;user.c: 107: {
  7451                           ;user.c: 108: res = V_Eval(channel, &PI.Feedback);
  7452  002F7E  0EA8               	movlw	low (_PI+9)
  7453  002F80  0101               	movlb	1	; () banked
  7454  002F82  6F7E               	movwf	V_Eval@voltage& (0+255),b
  7455  002F84  0E00               	movlw	high (_PI+9)
  7456  002F86  0101               	movlb	1	; () banked
  7457  002F88  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  7458  002F8A  0101               	movlb	1	; () banked
  7459  002F8C  5186               	movf	I_V_Set@channel& (0+255),w,b
  7460  002F8E  ECAB  F015         	call	_V_Eval
  7461  002F92  C17E  F187         	movff	?_V_Eval,I_V_Set@res
  7462  002F96  C17F  F188         	movff	?_V_Eval+1,I_V_Set@res+1
  7463                           
  7464                           ;user.c: 109: if (res != OK)
  7465  002F9A  0101               	movlb	1	; () banked
  7466  002F9C  5187               	movf	I_V_Set@res& (0+255),w,b
  7467  002F9E  0101               	movlb	1	; () banked
  7468  002FA0  1188               	iorwf	(I_V_Set@res+1)& (0+255),w,b
  7469  002FA2  B4D8               	btfsc	status,2,c
  7470  002FA4  D006               	goto	l7936
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;user.c: 110: {
  7474                           ;user.c: 111: return KO;
  7475  002FA6  0E00               	movlw	0
  7476  002FA8  0101               	movlb	1	; () banked
  7477  002FAA  6F85               	movwf	(?_I_V_Set+1)& (0+255),b
  7478  002FAC  0E01               	movlw	1
  7479  002FAE  6F84               	movwf	?_I_V_Set& (0+255),b
  7480                           
  7481                           ; BSR set to: 1
  7482  002FB0  0012               	return	
  7483  002FB2                     l7936:
  7484                           
  7485                           ; BSR set to: 1
  7486                           ;user.c: 112: }
  7487                           ;user.c: 113: CalcPI(&PI);
  7488  002FB2  0E9F               	movlw	low _PI
  7489  002FB4  0101               	movlb	1	; () banked
  7490  002FB6  6F7E               	movwf	CalcPI@PIdata& (0+255),b
  7491  002FB8  0E00               	movlw	high _PI
  7492  002FBA  0101               	movlb	1	; () banked
  7493  002FBC  6F7F               	movwf	(CalcPI@PIdata+1)& (0+255),b
  7494  002FBE  EC9C  F006         	call	_CalcPI	;wreg free
  7495                           
  7496                           ;user.c: 116: count++;
  7497  002FC2  0101               	movlb	1	; () banked
  7498  002FC4  4B89               	infsnz	I_V_Set@count& (0+255),f,b
  7499  002FC6  2B8A               	incf	(I_V_Set@count+1)& (0+255),f,b
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;user.c: 118: } while (((PI.Error > 2) || (PI.Error < -1*2)) && (count < 5));
  7503  002FC8  0E00               	movlw	0
  7504  002FCA  0100               	movlb	0	; () banked
  7505  002FCC  6FE2               	movwf	___ftge@ff1& (0+255),b
  7506  002FCE  0E00               	movlw	0
  7507  002FD0  0100               	movlb	0	; () banked
  7508  002FD2  6FE3               	movwf	(___ftge@ff1+1)& (0+255),b
  7509  002FD4  0E40               	movlw	64
  7510  002FD6  0100               	movlb	0	; () banked
  7511  002FD8  6FE4               	movwf	(___ftge@ff1+2)& (0+255),b
  7512  002FDA  C0AB  F0E5         	movff	_PI+12,___ftge@ff2
  7513  002FDE  C0AC  F0E6         	movff	_PI+13,___ftge@ff2+1
  7514  002FE2  C0AD  F0E7         	movff	_PI+14,___ftge@ff2+2
  7515  002FE6  EC1D  F018         	call	___ftge	;wreg free
  7516  002FEA  0100               	movlb	0	; () banked
  7517  002FEC  A0D8               	btfss	status,0,c
  7518  002FEE  D014               	goto	l7944
  7519                           
  7520                           ; BSR set to: 0
  7521  002FF0  C0AB  F0E2         	movff	_PI+12,___ftge@ff1
  7522  002FF4  C0AC  F0E3         	movff	_PI+13,___ftge@ff1+1
  7523  002FF8  C0AD  F0E4         	movff	_PI+14,___ftge@ff1+2
  7524  002FFC  0E00               	movlw	0
  7525  002FFE  0100               	movlb	0	; () banked
  7526  003000  6FE5               	movwf	___ftge@ff2& (0+255),b
  7527  003002  0E00               	movlw	0
  7528  003004  0100               	movlb	0	; () banked
  7529  003006  6FE6               	movwf	(___ftge@ff2+1)& (0+255),b
  7530  003008  0EC0               	movlw	192
  7531  00300A  0100               	movlb	0	; () banked
  7532  00300C  6FE7               	movwf	(___ftge@ff2+2)& (0+255),b
  7533  00300E  EC1D  F018         	call	___ftge	;wreg free
  7534  003012  0100               	movlb	0	; () banked
  7535  003014  B0D8               	btfsc	status,0,c
  7536  003016  D00B               	goto	l7946
  7537  003018                     l7944:
  7538                           
  7539                           ; BSR set to: 0
  7540  003018  0101               	movlb	1	; () banked
  7541  00301A  BF8A               	btfsc	(I_V_Set@count+1)& (0+255),7,b
  7542  00301C  D7B0               	goto	l7928
  7543  00301E  0101               	movlb	1	; () banked
  7544  003020  518A               	movf	(I_V_Set@count+1)& (0+255),w,b
  7545  003022  E105               	bnz	l7946
  7546  003024  0E05               	movlw	5
  7547  003026  0101               	movlb	1	; () banked
  7548  003028  5D89               	subwf	I_V_Set@count& (0+255),w,b
  7549  00302A  A0D8               	btfss	status,0,c
  7550  00302C  D7A8               	goto	l7928
  7551  00302E                     l7946:
  7552                           
  7553                           ;user.c: 120: return OK;
  7554  00302E  0E00               	movlw	0
  7555  003030  0101               	movlb	1	; () banked
  7556  003032  6F85               	movwf	(?_I_V_Set+1)& (0+255),b
  7557  003034  0E00               	movlw	0
  7558  003036  6F84               	movwf	?_I_V_Set& (0+255),b
  7559  003038  0012               	return	
  7560  00303A                     __end_of_I_V_Set:
  7561                           	opt stack 0
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           prodh	equ	0xFF4
  7567                           prodl	equ	0xFF3
  7568                           intcon	equ	0xFF2
  7569                           indf0	equ	0xFEF
  7570                           postinc0	equ	0xFEE
  7571                           fsr0h	equ	0xFEA
  7572                           fsr0l	equ	0xFE9
  7573                           wreg	equ	0xFE8
  7574                           indf1	equ	0xFE7
  7575                           postdec1	equ	0xFE5
  7576                           fsr1h	equ	0xFE2
  7577                           fsr1l	equ	0xFE1
  7578                           indf2	equ	0xFDF
  7579                           postinc2	equ	0xFDE
  7580                           postdec2	equ	0xFDD
  7581                           plusw2	equ	0xFDB
  7582                           fsr2h	equ	0xFDA
  7583                           fsr2l	equ	0xFD9
  7584                           status	equ	0xFD8
  7585                           
  7586 ;; *************** function _CalcPI *****************
  7587 ;; Defined at:
  7588 ;;		line 124 in file "user.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  PIdata          2   15[BANK1 ] PTR struct .
  7591 ;;		 -> PI(23), 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;		None               void
  7596 ;; Registers used:
  7597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7603 ;;      Params:         0       0       2       0       0       0       0       0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7605 ;;      Temps:          0       0       3       0       0       0       0       0       0
  7606 ;;      Totals:         0       0       5       0       0       0       0       0       0
  7607 ;;Total ram usage:        5 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:   14
  7610 ;; This function calls:
  7611 ;;		___awtoft
  7612 ;;		___ftadd
  7613 ;;		___ftdiv
  7614 ;;		___ftge
  7615 ;;		___ftmul
  7616 ;;		___ftneg
  7617 ;; This function is called by:
  7618 ;;		_I_V_Set
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text24
  7623  000D38                     __ptext24:
  7624                           	opt stack 0
  7625  000D38                     _CalcPI:
  7626                           	opt stack 13
  7627                           
  7628                           ;user.c: 126: PIdata->Error = PIdata->Setpoint - PIdata->Feedback;
  7629                           
  7630                           ; BSR set to: 1
  7631                           ;incstack = 0
  7632  000D38  0101               	movlb	1	; () banked
  7633  000D3A  EE20 F009          	lfsr	2,9
  7634  000D3E  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7635  000D40  26D9               	addwf	fsr2l,f,c
  7636  000D42  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7637  000D44  22DA               	addwfc	fsr2h,f,c
  7638  000D46  CFDE F0C7          	movff	postinc2,___ftneg@f1
  7639  000D4A  CFDE F0C8          	movff	postinc2,___ftneg@f1+1
  7640  000D4E  CFDD F0C9          	movff	postdec2,___ftneg@f1+2
  7641  000D52  EC57  F01F         	call	___ftneg	;wreg free
  7642  000D56  C0C7  F0E2         	movff	?___ftneg,___ftadd@f1
  7643  000D5A  C0C8  F0E3         	movff	?___ftneg+1,___ftadd@f1+1
  7644  000D5E  C0C9  F0E4         	movff	?___ftneg+2,___ftadd@f1+2
  7645  000D62  0101               	movlb	1	; () banked
  7646  000D64  EE20 F006          	lfsr	2,6
  7647  000D68  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7648  000D6A  26D9               	addwf	fsr2l,f,c
  7649  000D6C  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7650  000D6E  22DA               	addwfc	fsr2h,f,c
  7651  000D70  CFDE F0E5          	movff	postinc2,___ftadd@f2
  7652  000D74  CFDE F0E6          	movff	postinc2,___ftadd@f2+1
  7653  000D78  CFDD F0E7          	movff	postdec2,___ftadd@f2+2
  7654  000D7C  ECCF  F009         	call	___ftadd	;wreg free
  7655  000D80  0101               	movlb	1	; () banked
  7656  000D82  EE20 F00C          	lfsr	2,12
  7657  000D86  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7658  000D88  26D9               	addwf	fsr2l,f,c
  7659  000D8A  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7660  000D8C  22DA               	addwfc	fsr2h,f,c
  7661  000D8E  C0E2  FFDE         	movff	?___ftadd,postinc2
  7662  000D92  C0E3  FFDE         	movff	?___ftadd+1,postinc2
  7663  000D96  C0E4  FFDE         	movff	?___ftadd+2,postinc2
  7664                           
  7665                           ;user.c: 130: if ((PIdata->Error > 2) || (PIdata->Error < -2))
  7666  000D9A  0E00               	movlw	0
  7667  000D9C  0100               	movlb	0	; () banked
  7668  000D9E  6FE2               	movwf	___ftge@ff1& (0+255),b
  7669  000DA0  0E00               	movlw	0
  7670  000DA2  0100               	movlb	0	; () banked
  7671  000DA4  6FE3               	movwf	(___ftge@ff1+1)& (0+255),b
  7672  000DA6  0E40               	movlw	64
  7673  000DA8  0100               	movlb	0	; () banked
  7674  000DAA  6FE4               	movwf	(___ftge@ff1+2)& (0+255),b
  7675  000DAC  0101               	movlb	1	; () banked
  7676  000DAE  EE20 F00C          	lfsr	2,12
  7677  000DB2  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7678  000DB4  26D9               	addwf	fsr2l,f,c
  7679  000DB6  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7680  000DB8  22DA               	addwfc	fsr2h,f,c
  7681  000DBA  CFDE F0E5          	movff	postinc2,___ftge@ff2
  7682  000DBE  CFDE F0E6          	movff	postinc2,___ftge@ff2+1
  7683  000DC2  CFDD F0E7          	movff	postdec2,___ftge@ff2+2
  7684  000DC6  EC1D  F018         	call	___ftge	;wreg free
  7685  000DCA  0100               	movlb	0	; () banked
  7686  000DCC  A0D8               	btfss	status,0,c
  7687  000DCE  D01B               	goto	l7686
  7688                           
  7689                           ; BSR set to: 0
  7690  000DD0  0101               	movlb	1	; () banked
  7691  000DD2  EE20 F00C          	lfsr	2,12
  7692  000DD6  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7693  000DD8  26D9               	addwf	fsr2l,f,c
  7694  000DDA  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7695  000DDC  22DA               	addwfc	fsr2h,f,c
  7696  000DDE  CFDE F0E2          	movff	postinc2,___ftge@ff1
  7697  000DE2  CFDE F0E3          	movff	postinc2,___ftge@ff1+1
  7698  000DE6  CFDD F0E4          	movff	postdec2,___ftge@ff1+2
  7699  000DEA  0E00               	movlw	0
  7700  000DEC  0100               	movlb	0	; () banked
  7701  000DEE  6FE5               	movwf	___ftge@ff2& (0+255),b
  7702  000DF0  0E00               	movlw	0
  7703  000DF2  0100               	movlb	0	; () banked
  7704  000DF4  6FE6               	movwf	(___ftge@ff2+1)& (0+255),b
  7705  000DF6  0EC0               	movlw	192
  7706  000DF8  0100               	movlb	0	; () banked
  7707  000DFA  6FE7               	movwf	(___ftge@ff2+2)& (0+255),b
  7708  000DFC  EC1D  F018         	call	___ftge	;wreg free
  7709  000E00  0100               	movlb	0	; () banked
  7710  000E02  B0D8               	btfsc	status,0,c
  7711  000E04  0012               	return	
  7712  000E06                     l7686:
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;user.c: 131: {
  7716                           ;user.c: 134: if (PIdata->Saturated == 0)
  7717  000E06  0101               	movlb	1	; () banked
  7718  000E08  EE20 F015          	lfsr	2,21
  7719  000E0C  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7720  000E0E  26D9               	addwf	fsr2l,f,c
  7721  000E10  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7722  000E12  22DA               	addwfc	fsr2h,f,c
  7723  000E14  50DE               	movf	postinc2,w,c
  7724  000E16  10DE               	iorwf	postinc2,w,c
  7725  000E18  A4D8               	btfss	status,2,c
  7726  000E1A  D097               	goto	l376
  7727                           
  7728                           ; BSR set to: 1
  7729                           ;user.c: 135: {
  7730                           ;user.c: 139: if (PIdata->Error > 0)
  7731  000E1C  0E00               	movlw	0
  7732  000E1E  0100               	movlb	0	; () banked
  7733  000E20  6FE2               	movwf	___ftge@ff1& (0+255),b
  7734  000E22  0E00               	movlw	0
  7735  000E24  0100               	movlb	0	; () banked
  7736  000E26  6FE3               	movwf	(___ftge@ff1+1)& (0+255),b
  7737  000E28  0E00               	movlw	0
  7738  000E2A  0100               	movlb	0	; () banked
  7739  000E2C  6FE4               	movwf	(___ftge@ff1+2)& (0+255),b
  7740  000E2E  0101               	movlb	1	; () banked
  7741  000E30  EE20 F00C          	lfsr	2,12
  7742  000E34  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7743  000E36  26D9               	addwf	fsr2l,f,c
  7744  000E38  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7745  000E3A  22DA               	addwfc	fsr2h,f,c
  7746  000E3C  CFDE F0E5          	movff	postinc2,___ftge@ff2
  7747  000E40  CFDE F0E6          	movff	postinc2,___ftge@ff2+1
  7748  000E44  CFDD F0E7          	movff	postdec2,___ftge@ff2+2
  7749  000E48  EC1D  F018         	call	___ftge	;wreg free
  7750  000E4C  0100               	movlb	0	; () banked
  7751  000E4E  B0D8               	btfsc	status,0,c
  7752  000E50  D038               	goto	l7694
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;user.c: 140: {
  7756                           ;user.c: 141: if (PIdata->Integral < 32000)
  7757  000E52  0101               	movlb	1	; () banked
  7758  000E54  EE20 F00F          	lfsr	2,15
  7759  000E58  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7760  000E5A  26D9               	addwf	fsr2l,f,c
  7761  000E5C  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7762  000E5E  22DA               	addwfc	fsr2h,f,c
  7763  000E60  CFDE F0E2          	movff	postinc2,___ftge@ff1
  7764  000E64  CFDE F0E3          	movff	postinc2,___ftge@ff1+1
  7765  000E68  CFDD F0E4          	movff	postdec2,___ftge@ff1+2
  7766  000E6C  0E00               	movlw	0
  7767  000E6E  0100               	movlb	0	; () banked
  7768  000E70  6FE5               	movwf	___ftge@ff2& (0+255),b
  7769  000E72  0EFA               	movlw	250
  7770  000E74  0100               	movlb	0	; () banked
  7771  000E76  6FE6               	movwf	(___ftge@ff2+1)& (0+255),b
  7772  000E78  0E46               	movlw	70
  7773  000E7A  0100               	movlb	0	; () banked
  7774  000E7C  6FE7               	movwf	(___ftge@ff2+2)& (0+255),b
  7775  000E7E  EC1D  F018         	call	___ftge	;wreg free
  7776  000E82  0100               	movlb	0	; () banked
  7777  000E84  B0D8               	btfsc	status,0,c
  7778  000E86  D061               	goto	l376
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;user.c: 142: PIdata->Integral += PIdata->Error;
  7782  000E88  0101               	movlb	1	; () banked
  7783  000E8A  EE20 F00F          	lfsr	2,15
  7784  000E8E  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7785  000E90  26D9               	addwf	fsr2l,f,c
  7786  000E92  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7787  000E94  22DA               	addwfc	fsr2h,f,c
  7788  000E96  CFDE F0E2          	movff	postinc2,___ftadd@f1
  7789  000E9A  CFDE F0E3          	movff	postinc2,___ftadd@f1+1
  7790  000E9E  CFDD F0E4          	movff	postdec2,___ftadd@f1+2
  7791  000EA2  0101               	movlb	1	; () banked
  7792  000EA4  EE20 F00C          	lfsr	2,12
  7793  000EA8  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7794  000EAA  26D9               	addwf	fsr2l,f,c
  7795  000EAC  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7796  000EAE  22DA               	addwfc	fsr2h,f,c
  7797  000EB0  CFDE F0E5          	movff	postinc2,___ftadd@f2
  7798  000EB4  CFDE F0E6          	movff	postinc2,___ftadd@f2+1
  7799  000EB8  CFDD F0E7          	movff	postdec2,___ftadd@f2+2
  7800  000EBC  ECCF  F009         	call	___ftadd	;wreg free
  7801  000EC0  D037               	goto	L4
  7802  000EC2                     l7694:
  7803                           
  7804                           ;user.c: 144: else
  7805                           ;user.c: 145: {
  7806                           ;user.c: 146: if (PIdata->Integral > -32000)
  7807  000EC2  0E00               	movlw	0
  7808  000EC4  0100               	movlb	0	; () banked
  7809  000EC6  6FE2               	movwf	___ftge@ff1& (0+255),b
  7810  000EC8  0EFA               	movlw	250
  7811  000ECA  0100               	movlb	0	; () banked
  7812  000ECC  6FE3               	movwf	(___ftge@ff1+1)& (0+255),b
  7813  000ECE  0EC6               	movlw	198
  7814  000ED0  0100               	movlb	0	; () banked
  7815  000ED2  6FE4               	movwf	(___ftge@ff1+2)& (0+255),b
  7816  000ED4  0101               	movlb	1	; () banked
  7817  000ED6  EE20 F00F          	lfsr	2,15
  7818  000EDA  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7819  000EDC  26D9               	addwf	fsr2l,f,c
  7820  000EDE  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7821  000EE0  22DA               	addwfc	fsr2h,f,c
  7822  000EE2  CFDE F0E5          	movff	postinc2,___ftge@ff2
  7823  000EE6  CFDE F0E6          	movff	postinc2,___ftge@ff2+1
  7824  000EEA  CFDD F0E7          	movff	postdec2,___ftge@ff2+2
  7825  000EEE  EC1D  F018         	call	___ftge	;wreg free
  7826  000EF2  0100               	movlb	0	; () banked
  7827  000EF4  B0D8               	btfsc	status,0,c
  7828  000EF6  D029               	goto	l376
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;user.c: 148: PIdata->Integral += PIdata->Error;
  7832  000EF8  0101               	movlb	1	; () banked
  7833  000EFA  EE20 F00F          	lfsr	2,15
  7834  000EFE  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7835  000F00  26D9               	addwf	fsr2l,f,c
  7836  000F02  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7837  000F04  22DA               	addwfc	fsr2h,f,c
  7838  000F06  CFDE F0E2          	movff	postinc2,___ftadd@f1
  7839  000F0A  CFDE F0E3          	movff	postinc2,___ftadd@f1+1
  7840  000F0E  CFDD F0E4          	movff	postdec2,___ftadd@f1+2
  7841  000F12  0101               	movlb	1	; () banked
  7842  000F14  EE20 F00C          	lfsr	2,12
  7843  000F18  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7844  000F1A  26D9               	addwf	fsr2l,f,c
  7845  000F1C  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7846  000F1E  22DA               	addwfc	fsr2h,f,c
  7847  000F20  CFDE F0E5          	movff	postinc2,___ftadd@f2
  7848  000F24  CFDE F0E6          	movff	postinc2,___ftadd@f2+1
  7849  000F28  CFDD F0E7          	movff	postdec2,___ftadd@f2+2
  7850  000F2C  ECCF  F009         	call	___ftadd	;wreg free
  7851  000F30                     L4:
  7852  000F30  0101               	movlb	1	; () banked
  7853  000F32  EE20 F00F          	lfsr	2,15
  7854  000F36  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7855  000F38  26D9               	addwf	fsr2l,f,c
  7856  000F3A  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7857  000F3C  22DA               	addwfc	fsr2h,f,c
  7858  000F3E  C0E2  FFDE         	movff	?___ftadd,postinc2
  7859  000F42  C0E3  FFDE         	movff	?___ftadd+1,postinc2
  7860  000F46  C0E4  FFDE         	movff	?___ftadd+2,postinc2
  7861  000F4A                     l376:
  7862                           
  7863                           ;user.c: 149: }
  7864                           ;user.c: 150: }
  7865                           ;user.c: 152: PIdata->Output = (PIdata->Error * PIdata->Kp + PIdata->Integral * PIdata->
      +                          Ki)/256;
  7866  000F4A  0101               	movlb	1	; () banked
  7867  000F4C  EE20 F00F          	lfsr	2,15
  7868  000F50  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7869  000F52  26D9               	addwf	fsr2l,f,c
  7870  000F54  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7871  000F56  22DA               	addwfc	fsr2h,f,c
  7872  000F58  CFDE F0D6          	movff	postinc2,___ftmul@f2
  7873  000F5C  CFDE F0D7          	movff	postinc2,___ftmul@f2+1
  7874  000F60  CFDD F0D8          	movff	postdec2,___ftmul@f2+2
  7875  000F64  0101               	movlb	1	; () banked
  7876  000F66  EE20 F002          	lfsr	2,2
  7877  000F6A  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7878  000F6C  26D9               	addwf	fsr2l,f,c
  7879  000F6E  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7880  000F70  22DA               	addwfc	fsr2h,f,c
  7881  000F72  CFDE F0CF          	movff	postinc2,___awtoft@c
  7882  000F76  CFDD F0D0          	movff	postdec2,___awtoft@c+1
  7883  000F7A  EC74  F01E         	call	___awtoft	;wreg free
  7884  000F7E  C0CF  F0D3         	movff	?___awtoft,___ftmul@f1
  7885  000F82  C0D0  F0D4         	movff	?___awtoft+1,___ftmul@f1+1
  7886  000F86  C0D1  F0D5         	movff	?___awtoft+2,___ftmul@f1+2
  7887  000F8A  EC13  F00E         	call	___ftmul	;wreg free
  7888  000F8E  C0D3  F0E5         	movff	?___ftmul,___ftadd@f2
  7889  000F92  C0D4  F0E6         	movff	?___ftmul+1,___ftadd@f2+1
  7890  000F96  C0D5  F0E7         	movff	?___ftmul+2,___ftadd@f2+2
  7891  000F9A  0101               	movlb	1	; () banked
  7892  000F9C  EE20 F00C          	lfsr	2,12
  7893  000FA0  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7894  000FA2  26D9               	addwf	fsr2l,f,c
  7895  000FA4  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7896  000FA6  22DA               	addwfc	fsr2h,f,c
  7897  000FA8  CFDE F0D6          	movff	postinc2,___ftmul@f2
  7898  000FAC  CFDE F0D7          	movff	postinc2,___ftmul@f2+1
  7899  000FB0  CFDD F0D8          	movff	postdec2,___ftmul@f2+2
  7900  000FB4  C17E  FFD9         	movff	CalcPI@PIdata,fsr2l
  7901  000FB8  C17F  FFDA         	movff	CalcPI@PIdata+1,fsr2h
  7902  000FBC  CFDE F0CF          	movff	postinc2,___awtoft@c
  7903  000FC0  CFDD F0D0          	movff	postdec2,___awtoft@c+1
  7904  000FC4  EC74  F01E         	call	___awtoft	;wreg free
  7905  000FC8  C0CF  F0D3         	movff	?___awtoft,___ftmul@f1
  7906  000FCC  C0D0  F0D4         	movff	?___awtoft+1,___ftmul@f1+1
  7907  000FD0  C0D1  F0D5         	movff	?___awtoft+2,___ftmul@f1+2
  7908  000FD4  EC13  F00E         	call	___ftmul	;wreg free
  7909  000FD8  C0D3  F0E2         	movff	?___ftmul,___ftadd@f1
  7910  000FDC  C0D4  F0E3         	movff	?___ftmul+1,___ftadd@f1+1
  7911  000FE0  C0D5  F0E4         	movff	?___ftmul+2,___ftadd@f1+2
  7912  000FE4  ECCF  F009         	call	___ftadd	;wreg free
  7913  000FE8  C0E2  F16F         	movff	?___ftadd,___ftdiv@f1
  7914  000FEC  C0E3  F170         	movff	?___ftadd+1,___ftdiv@f1+1
  7915  000FF0  C0E4  F171         	movff	?___ftadd+2,___ftdiv@f1+2
  7916  000FF4  0E00               	movlw	0
  7917  000FF6  0101               	movlb	1	; () banked
  7918  000FF8  6F72               	movwf	___ftdiv@f2& (0+255),b
  7919  000FFA  0E80               	movlw	128
  7920  000FFC  0101               	movlb	1	; () banked
  7921  000FFE  6F73               	movwf	(___ftdiv@f2+1)& (0+255),b
  7922  001000  0E43               	movlw	67
  7923  001002  0101               	movlb	1	; () banked
  7924  001004  6F74               	movwf	(___ftdiv@f2+2)& (0+255),b
  7925  001006  EC6D  F00F         	call	___ftdiv	;wreg free
  7926  00100A  0101               	movlb	1	; () banked
  7927  00100C  EE20 F012          	lfsr	2,18
  7928  001010  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7929  001012  26D9               	addwf	fsr2l,f,c
  7930  001014  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7931  001016  22DA               	addwfc	fsr2h,f,c
  7932  001018  C16F  FFDE         	movff	?___ftdiv,postinc2
  7933  00101C  C170  FFDE         	movff	?___ftdiv+1,postinc2
  7934  001020  C171  FFDE         	movff	?___ftdiv+2,postinc2
  7935                           
  7936                           ;user.c: 156: if (PIdata->Output > PIdata->OutMax)
  7937  001024  0101               	movlb	1	; () banked
  7938  001026  EE20 F004          	lfsr	2,4
  7939  00102A  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7940  00102C  26D9               	addwf	fsr2l,f,c
  7941  00102E  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7942  001030  22DA               	addwfc	fsr2h,f,c
  7943  001032  CFDE F0CF          	movff	postinc2,___awtoft@c
  7944  001036  CFDD F0D0          	movff	postdec2,___awtoft@c+1
  7945  00103A  EC74  F01E         	call	___awtoft	;wreg free
  7946  00103E  C0CF  F0E2         	movff	?___awtoft,___ftge@ff1
  7947  001042  C0D0  F0E3         	movff	?___awtoft+1,___ftge@ff1+1
  7948  001046  C0D1  F0E4         	movff	?___awtoft+2,___ftge@ff1+2
  7949  00104A  0101               	movlb	1	; () banked
  7950  00104C  EE20 F012          	lfsr	2,18
  7951  001050  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7952  001052  26D9               	addwf	fsr2l,f,c
  7953  001054  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7954  001056  22DA               	addwfc	fsr2h,f,c
  7955  001058  CFDE F0E5          	movff	postinc2,___ftge@ff2
  7956  00105C  CFDE F0E6          	movff	postinc2,___ftge@ff2+1
  7957  001060  CFDD F0E7          	movff	postdec2,___ftge@ff2+2
  7958  001064  EC1D  F018         	call	___ftge	;wreg free
  7959  001068  0100               	movlb	0	; () banked
  7960  00106A  B0D8               	btfsc	status,0,c
  7961  00106C  D026               	goto	l7702
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;user.c: 157: {
  7965                           ;user.c: 158: PIdata->Saturated = 1;
  7966  00106E  0101               	movlb	1	; () banked
  7967  001070  EE20 F015          	lfsr	2,21
  7968  001074  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7969  001076  26D9               	addwf	fsr2l,f,c
  7970  001078  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7971  00107A  22DA               	addwfc	fsr2h,f,c
  7972  00107C  0E01               	movlw	1
  7973  00107E  6EDE               	movwf	postinc2,c
  7974  001080  0E00               	movlw	0
  7975  001082  6EDD               	movwf	postdec2,c
  7976                           
  7977                           ; BSR set to: 1
  7978                           ;user.c: 159: PIdata->Output = PIdata->OutMax;
  7979  001084  0101               	movlb	1	; () banked
  7980  001086  EE20 F004          	lfsr	2,4
  7981  00108A  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7982  00108C  26D9               	addwf	fsr2l,f,c
  7983  00108E  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7984  001090  22DA               	addwfc	fsr2h,f,c
  7985  001092  CFDE F0CF          	movff	postinc2,___awtoft@c
  7986  001096  CFDD F0D0          	movff	postdec2,___awtoft@c+1
  7987  00109A  EC74  F01E         	call	___awtoft	;wreg free
  7988  00109E  0101               	movlb	1	; () banked
  7989  0010A0  EE20 F012          	lfsr	2,18
  7990  0010A4  517E               	movf	CalcPI@PIdata& (0+255),w,b
  7991  0010A6  26D9               	addwf	fsr2l,f,c
  7992  0010A8  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  7993  0010AA  22DA               	addwfc	fsr2h,f,c
  7994  0010AC  C0CF  FFDE         	movff	?___awtoft,postinc2
  7995  0010B0  C0D0  FFDE         	movff	?___awtoft+1,postinc2
  7996  0010B4  C0D1  FFDE         	movff	?___awtoft+2,postinc2
  7997                           
  7998                           ;user.c: 160: }
  7999  0010B8  0012               	return	
  8000  0010BA                     l7702:
  8001                           
  8002                           ;user.c: 161: else if (PIdata->Output < 0)
  8003  0010BA  0101               	movlb	1	; () banked
  8004  0010BC  EE20 F012          	lfsr	2,18
  8005  0010C0  517E               	movf	CalcPI@PIdata& (0+255),w,b
  8006  0010C2  26D9               	addwf	fsr2l,f,c
  8007  0010C4  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  8008  0010C6  22DA               	addwfc	fsr2h,f,c
  8009  0010C8  0E02               	movlw	2
  8010  0010CA  AEDB               	btfss	plusw2,7,c
  8011  0010CC  D019               	goto	l7706
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;user.c: 162: {
  8015                           ;user.c: 163: PIdata->Saturated = 1;
  8016  0010CE  0101               	movlb	1	; () banked
  8017  0010D0  EE20 F015          	lfsr	2,21
  8018  0010D4  517E               	movf	CalcPI@PIdata& (0+255),w,b
  8019  0010D6  26D9               	addwf	fsr2l,f,c
  8020  0010D8  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  8021  0010DA  22DA               	addwfc	fsr2h,f,c
  8022  0010DC  0E01               	movlw	1
  8023  0010DE  6EDE               	movwf	postinc2,c
  8024  0010E0  0E00               	movlw	0
  8025  0010E2  6EDD               	movwf	postdec2,c
  8026                           
  8027                           ;user.c: 164: PIdata->Output = 0;
  8028  0010E4  0101               	movlb	1	; () banked
  8029  0010E6  EE20 F012          	lfsr	2,18
  8030  0010EA  517E               	movf	CalcPI@PIdata& (0+255),w,b
  8031  0010EC  26D9               	addwf	fsr2l,f,c
  8032  0010EE  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  8033  0010F0  22DA               	addwfc	fsr2h,f,c
  8034  0010F2  0E00               	movlw	0
  8035  0010F4  6EDE               	movwf	postinc2,c
  8036  0010F6  0E00               	movlw	0
  8037  0010F8  6EDE               	movwf	postinc2,c
  8038  0010FA  0E00               	movlw	0
  8039  0010FC  6EDE               	movwf	postinc2,c
  8040                           
  8041                           ;user.c: 165: }
  8042  0010FE  0012               	return	
  8043  001100                     l7706:
  8044                           
  8045                           ; BSR set to: 1
  8046                           ;user.c: 166: else
  8047                           ;user.c: 167: PIdata->Saturated = 0;
  8048  001100  0101               	movlb	1	; () banked
  8049  001102  EE20 F015          	lfsr	2,21
  8050  001106  517E               	movf	CalcPI@PIdata& (0+255),w,b
  8051  001108  26D9               	addwf	fsr2l,f,c
  8052  00110A  517F               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  8053  00110C  22DA               	addwfc	fsr2h,f,c
  8054  00110E  0E00               	movlw	0
  8055  001110  6EDE               	movwf	postinc2,c
  8056  001112  0E00               	movlw	0
  8057  001114  6EDD               	movwf	postdec2,c
  8058                           
  8059                           ; BSR set to: 1
  8060                           
  8061                           ; BSR set to: 1
  8062  001116  0012               	return	
  8063  001118                     __end_of_CalcPI:
  8064                           	opt stack 0
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           indf0	equ	0xFEF
  8073                           postinc0	equ	0xFEE
  8074                           fsr0h	equ	0xFEA
  8075                           fsr0l	equ	0xFE9
  8076                           wreg	equ	0xFE8
  8077                           indf1	equ	0xFE7
  8078                           postdec1	equ	0xFE5
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           indf2	equ	0xFDF
  8082                           postinc2	equ	0xFDE
  8083                           postdec2	equ	0xFDD
  8084                           plusw2	equ	0xFDB
  8085                           fsr2h	equ	0xFDA
  8086                           fsr2l	equ	0xFD9
  8087                           status	equ	0xFD8
  8088                           
  8089 ;; *************** function ___ftneg *****************
  8090 ;; Defined at:
  8091 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftneg.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  f1              3   17[BANK0 ] float 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  3   17[BANK0 ] float 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8105 ;;      Params:         0       3       0       0       0       0       0       0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8108 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8109 ;;Total ram usage:        3 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:   12
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_CalcPI
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text25
  8120  003EAE                     __ptext25:
  8121                           	opt stack 0
  8122  003EAE                     ___ftneg:
  8123                           	opt stack 14
  8124                           
  8125                           ;incstack = 0
  8126  003EAE  0100               	movlb	0	; () banked
  8127  003EB0  51C7               	movf	___ftneg@f1& (0+255),w,b
  8128  003EB2  0100               	movlb	0	; () banked
  8129  003EB4  11C8               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8130  003EB6  0100               	movlb	0	; () banked
  8131  003EB8  11C9               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8132  003EBA  B4D8               	btfsc	status,2,c
  8133  003EBC  D009               	goto	l1405
  8134                           
  8135                           ; BSR set to: 0
  8136  003EBE  0E00               	movlw	0
  8137  003EC0  0100               	movlb	0	; () banked
  8138  003EC2  1BC7               	xorwf	___ftneg@f1& (0+255),f,b
  8139  003EC4  0E00               	movlw	0
  8140  003EC6  0100               	movlb	0	; () banked
  8141  003EC8  1BC8               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8142  003ECA  0E80               	movlw	128
  8143  003ECC  0100               	movlb	0	; () banked
  8144  003ECE  1BC9               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8145  003ED0                     l1405:
  8146                           
  8147                           ; BSR set to: 0
  8148  003ED0  C0C7  F0C7         	movff	___ftneg@f1,?___ftneg
  8149  003ED4  C0C8  F0C8         	movff	___ftneg@f1+1,?___ftneg+1
  8150  003ED8  C0C9  F0C9         	movff	___ftneg@f1+2,?___ftneg+2
  8151                           
  8152                           ; BSR set to: 0
  8153  003EDC  0012               	return		;funcret
  8154  003EDE                     __end_of___ftneg:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           intcon	equ	0xFF2
  8163                           indf0	equ	0xFEF
  8164                           postinc0	equ	0xFEE
  8165                           fsr0h	equ	0xFEA
  8166                           fsr0l	equ	0xFE9
  8167                           wreg	equ	0xFE8
  8168                           indf1	equ	0xFE7
  8169                           postdec1	equ	0xFE5
  8170                           fsr1h	equ	0xFE2
  8171                           fsr1l	equ	0xFE1
  8172                           indf2	equ	0xFDF
  8173                           postinc2	equ	0xFDE
  8174                           postdec2	equ	0xFDD
  8175                           plusw2	equ	0xFDB
  8176                           fsr2h	equ	0xFDA
  8177                           fsr2l	equ	0xFD9
  8178                           status	equ	0xFD8
  8179                           
  8180 ;; *************** function ___ftadd *****************
  8181 ;; Defined at:
  8182 ;;		line 86 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftadd.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  f1              3   44[BANK0 ] float 
  8185 ;;  f2              3   47[BANK0 ] float 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  exp1            1   55[BANK0 ] unsigned char 
  8188 ;;  exp2            1   54[BANK0 ] unsigned char 
  8189 ;;  sign            1   53[BANK0 ] unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  3   44[BANK0 ] float 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8199 ;;      Params:         0       6       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8201 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8202 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8203 ;;Total ram usage:       12 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:   13
  8206 ;; This function calls:
  8207 ;;		___ftpack
  8208 ;; This function is called by:
  8209 ;;		_CalcPI
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text26
  8214  00139E                     __ptext26:
  8215                           	opt stack 0
  8216  00139E                     ___ftadd:
  8217                           	opt stack 13
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;incstack = 0
  8221  00139E  C0E4  F0E8         	movff	___ftadd@f1+2,??___ftadd
  8222  0013A2  0100               	movlb	0	; () banked
  8223  0013A4  6BE9               	clrf	(??___ftadd+1)& (0+255),b
  8224  0013A6  6BEA               	clrf	(??___ftadd+2)& (0+255),b
  8225  0013A8  0100               	movlb	0	; () banked
  8226  0013AA  35E3               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8227  0013AC  0100               	movlb	0	; () banked
  8228  0013AE  37E8               	rlcf	??___ftadd& (0+255),f,b
  8229  0013B0  E301               	bnc	u7251
  8230  0013B2  81E9               	bsf	(??___ftadd+1)& (0+255),0,b
  8231  0013B4                     u7251:
  8232  0013B4  0100               	movlb	0	; () banked
  8233  0013B6  51E8               	movf	??___ftadd& (0+255),w,b
  8234  0013B8  0100               	movlb	0	; () banked
  8235  0013BA  6FED               	movwf	___ftadd@exp1& (0+255),b
  8236  0013BC  C0E7  F0E8         	movff	___ftadd@f2+2,??___ftadd
  8237  0013C0  0100               	movlb	0	; () banked
  8238  0013C2  6BE9               	clrf	(??___ftadd+1)& (0+255),b
  8239  0013C4  6BEA               	clrf	(??___ftadd+2)& (0+255),b
  8240  0013C6  0100               	movlb	0	; () banked
  8241  0013C8  35E6               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8242  0013CA  0100               	movlb	0	; () banked
  8243  0013CC  37E8               	rlcf	??___ftadd& (0+255),f,b
  8244  0013CE  E301               	bnc	u7261
  8245  0013D0  81E9               	bsf	(??___ftadd+1)& (0+255),0,b
  8246  0013D2                     u7261:
  8247  0013D2  0100               	movlb	0	; () banked
  8248  0013D4  51E8               	movf	??___ftadd& (0+255),w,b
  8249  0013D6  0100               	movlb	0	; () banked
  8250  0013D8  6FEC               	movwf	___ftadd@exp2& (0+255),b
  8251                           
  8252                           ; BSR set to: 0
  8253  0013DA  0100               	movlb	0	; () banked
  8254  0013DC  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8255  0013DE  0100               	movlb	0	; () banked
  8256  0013E0  B4D8               	btfsc	status,2,c
  8257  0013E2  D011               	goto	l1348
  8258                           
  8259                           ; BSR set to: 0
  8260  0013E4  0100               	movlb	0	; () banked
  8261  0013E6  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8262  0013E8  0100               	movlb	0	; () banked
  8263  0013EA  5DED               	subwf	___ftadd@exp1& (0+255),w,b
  8264  0013EC  B0D8               	btfsc	status,0,c
  8265  0013EE  D012               	goto	l7260
  8266                           
  8267                           ; BSR set to: 0
  8268  0013F0  0100               	movlb	0	; () banked
  8269  0013F2  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8270  0013F4  0800               	sublw	0
  8271  0013F6  0100               	movlb	0	; () banked
  8272  0013F8  25EC               	addwf	___ftadd@exp2& (0+255),w,b
  8273  0013FA  0100               	movlb	0	; () banked
  8274  0013FC  6FE8               	movwf	??___ftadd& (0+255),b
  8275  0013FE  0E18               	movlw	24
  8276  001400  0100               	movlb	0	; () banked
  8277  001402  65E8               	cpfsgt	??___ftadd& (0+255),b
  8278  001404  D007               	goto	l7260
  8279  001406                     l1348:
  8280                           
  8281                           ; BSR set to: 0
  8282  001406  C0E5  F0E2         	movff	___ftadd@f2,?___ftadd
  8283  00140A  C0E6  F0E3         	movff	___ftadd@f2+1,?___ftadd+1
  8284  00140E  C0E7  F0E4         	movff	___ftadd@f2+2,?___ftadd+2
  8285  001412  0012               	return	
  8286  001414                     l7260:
  8287                           
  8288                           ; BSR set to: 0
  8289  001414  0100               	movlb	0	; () banked
  8290  001416  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8291  001418  0100               	movlb	0	; () banked
  8292  00141A  B4D8               	btfsc	status,2,c
  8293  00141C  D011               	goto	l1352
  8294                           
  8295                           ; BSR set to: 0
  8296  00141E  0100               	movlb	0	; () banked
  8297  001420  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8298  001422  0100               	movlb	0	; () banked
  8299  001424  5DEC               	subwf	___ftadd@exp2& (0+255),w,b
  8300  001426  B0D8               	btfsc	status,0,c
  8301  001428  D012               	goto	l7266
  8302                           
  8303                           ; BSR set to: 0
  8304  00142A  0100               	movlb	0	; () banked
  8305  00142C  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8306  00142E  0800               	sublw	0
  8307  001430  0100               	movlb	0	; () banked
  8308  001432  25ED               	addwf	___ftadd@exp1& (0+255),w,b
  8309  001434  0100               	movlb	0	; () banked
  8310  001436  6FE8               	movwf	??___ftadd& (0+255),b
  8311  001438  0E18               	movlw	24
  8312  00143A  0100               	movlb	0	; () banked
  8313  00143C  65E8               	cpfsgt	??___ftadd& (0+255),b
  8314  00143E  D007               	goto	l7266
  8315  001440                     l1352:
  8316                           
  8317                           ; BSR set to: 0
  8318  001440  C0E2  F0E2         	movff	___ftadd@f1,?___ftadd
  8319  001444  C0E3  F0E3         	movff	___ftadd@f1+1,?___ftadd+1
  8320  001448  C0E4  F0E4         	movff	___ftadd@f1+2,?___ftadd+2
  8321  00144C  0012               	return	
  8322  00144E                     l7266:
  8323                           
  8324                           ; BSR set to: 0
  8325  00144E  0E06               	movlw	6
  8326  001450  0100               	movlb	0	; () banked
  8327  001452  6FEB               	movwf	___ftadd@sign& (0+255),b
  8328                           
  8329                           ; BSR set to: 0
  8330  001454  0100               	movlb	0	; () banked
  8331  001456  AFE4               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8332  001458  D002               	goto	l7272
  8333                           
  8334                           ; BSR set to: 0
  8335  00145A  0100               	movlb	0	; () banked
  8336  00145C  8FEB               	bsf	___ftadd@sign& (0+255),7,b
  8337  00145E                     l7272:
  8338                           
  8339                           ; BSR set to: 0
  8340  00145E  0100               	movlb	0	; () banked
  8341  001460  AFE7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8342  001462  D002               	goto	l1354
  8343                           
  8344                           ; BSR set to: 0
  8345  001464  0100               	movlb	0	; () banked
  8346  001466  8DEB               	bsf	___ftadd@sign& (0+255),6,b
  8347  001468                     l1354:
  8348                           
  8349                           ; BSR set to: 0
  8350  001468  0100               	movlb	0	; () banked
  8351  00146A  8FE3               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8352                           
  8353                           ; BSR set to: 0
  8354  00146C  0EFF               	movlw	255
  8355  00146E  0100               	movlb	0	; () banked
  8356  001470  17E2               	andwf	___ftadd@f1& (0+255),f,b
  8357  001472  0EFF               	movlw	255
  8358  001474  0100               	movlb	0	; () banked
  8359  001476  17E3               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8360  001478  0E00               	movlw	0
  8361  00147A  0100               	movlb	0	; () banked
  8362  00147C  17E4               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8363  00147E  0100               	movlb	0	; () banked
  8364  001480  8FE6               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8365                           
  8366                           ; BSR set to: 0
  8367  001482  0EFF               	movlw	255
  8368  001484  0100               	movlb	0	; () banked
  8369  001486  17E5               	andwf	___ftadd@f2& (0+255),f,b
  8370  001488  0EFF               	movlw	255
  8371  00148A  0100               	movlb	0	; () banked
  8372  00148C  17E6               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8373  00148E  0E00               	movlw	0
  8374  001490  0100               	movlb	0	; () banked
  8375  001492  17E7               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8376                           
  8377                           ; BSR set to: 0
  8378  001494  0100               	movlb	0	; () banked
  8379  001496  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8380  001498  0100               	movlb	0	; () banked
  8381  00149A  5DED               	subwf	___ftadd@exp1& (0+255),w,b
  8382  00149C  B0D8               	btfsc	status,0,c
  8383  00149E  D025               	goto	l7292
  8384  0014A0                     l7282:
  8385                           
  8386                           ; BSR set to: 0
  8387  0014A0  0100               	movlb	0	; () banked
  8388  0014A2  90D8               	bcf	status,0,c
  8389  0014A4  37E5               	rlcf	___ftadd@f2& (0+255),f,b
  8390  0014A6  37E6               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8391  0014A8  37E7               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8392  0014AA  0100               	movlb	0	; () banked
  8393  0014AC  07EC               	decf	___ftadd@exp2& (0+255),f,b
  8394                           
  8395                           ; BSR set to: 0
  8396  0014AE  0100               	movlb	0	; () banked
  8397  0014B0  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8398  0014B2  0100               	movlb	0	; () banked
  8399  0014B4  19EC               	xorwf	___ftadd@exp2& (0+255),w,b
  8400  0014B6  B4D8               	btfsc	status,2,c
  8401  0014B8  D011               	goto	l7290
  8402                           
  8403                           ; BSR set to: 0
  8404  0014BA  0100               	movlb	0	; () banked
  8405  0014BC  07EB               	decf	___ftadd@sign& (0+255),f,b
  8406  0014BE  C0EB  F0E8         	movff	___ftadd@sign,??___ftadd
  8407  0014C2  0E07               	movlw	7
  8408  0014C4  0100               	movlb	0	; () banked
  8409  0014C6  17E8               	andwf	??___ftadd& (0+255),f,b
  8410  0014C8  B4D8               	btfsc	status,2,c
  8411  0014CA  D008               	goto	l7290
  8412  0014CC  D7E9               	goto	l7282
  8413  0014CE                     l7288:
  8414                           
  8415                           ; BSR set to: 0
  8416  0014CE  0100               	movlb	0	; () banked
  8417  0014D0  90D8               	bcf	status,0,c
  8418  0014D2  33E4               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8419  0014D4  33E3               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8420  0014D6  33E2               	rrcf	___ftadd@f1& (0+255),f,b
  8421  0014D8  0100               	movlb	0	; () banked
  8422  0014DA  2BED               	incf	___ftadd@exp1& (0+255),f,b
  8423  0014DC                     l7290:
  8424                           
  8425                           ; BSR set to: 0
  8426  0014DC  0100               	movlb	0	; () banked
  8427  0014DE  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8428  0014E0  0100               	movlb	0	; () banked
  8429  0014E2  19ED               	xorwf	___ftadd@exp1& (0+255),w,b
  8430  0014E4  B4D8               	btfsc	status,2,c
  8431  0014E6  D02B               	goto	l1363
  8432  0014E8  D7F2               	goto	l7288
  8433  0014EA                     l7292:
  8434                           
  8435                           ; BSR set to: 0
  8436  0014EA  0100               	movlb	0	; () banked
  8437  0014EC  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8438  0014EE  0100               	movlb	0	; () banked
  8439  0014F0  5DEC               	subwf	___ftadd@exp2& (0+255),w,b
  8440  0014F2  B0D8               	btfsc	status,0,c
  8441  0014F4  D024               	goto	l1363
  8442  0014F6                     l7294:
  8443                           
  8444                           ; BSR set to: 0
  8445  0014F6  0100               	movlb	0	; () banked
  8446  0014F8  90D8               	bcf	status,0,c
  8447  0014FA  37E2               	rlcf	___ftadd@f1& (0+255),f,b
  8448  0014FC  37E3               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8449  0014FE  37E4               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8450  001500  0100               	movlb	0	; () banked
  8451  001502  07ED               	decf	___ftadd@exp1& (0+255),f,b
  8452                           
  8453                           ; BSR set to: 0
  8454  001504  0100               	movlb	0	; () banked
  8455  001506  51ED               	movf	___ftadd@exp1& (0+255),w,b
  8456  001508  0100               	movlb	0	; () banked
  8457  00150A  19EC               	xorwf	___ftadd@exp2& (0+255),w,b
  8458  00150C  B4D8               	btfsc	status,2,c
  8459  00150E  D011               	goto	l7302
  8460                           
  8461                           ; BSR set to: 0
  8462  001510  0100               	movlb	0	; () banked
  8463  001512  07EB               	decf	___ftadd@sign& (0+255),f,b
  8464  001514  C0EB  F0E8         	movff	___ftadd@sign,??___ftadd
  8465  001518  0E07               	movlw	7
  8466  00151A  0100               	movlb	0	; () banked
  8467  00151C  17E8               	andwf	??___ftadd& (0+255),f,b
  8468  00151E  B4D8               	btfsc	status,2,c
  8469  001520  D008               	goto	l7302
  8470  001522  D7E9               	goto	l7294
  8471  001524                     l7300:
  8472                           
  8473                           ; BSR set to: 0
  8474  001524  0100               	movlb	0	; () banked
  8475  001526  90D8               	bcf	status,0,c
  8476  001528  33E7               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8477  00152A  33E6               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8478  00152C  33E5               	rrcf	___ftadd@f2& (0+255),f,b
  8479  00152E  0100               	movlb	0	; () banked
  8480  001530  2BEC               	incf	___ftadd@exp2& (0+255),f,b
  8481  001532                     l7302:
  8482                           
  8483                           ; BSR set to: 0
  8484  001532  0100               	movlb	0	; () banked
  8485  001534  51EC               	movf	___ftadd@exp2& (0+255),w,b
  8486  001536  0100               	movlb	0	; () banked
  8487  001538  19ED               	xorwf	___ftadd@exp1& (0+255),w,b
  8488  00153A  A4D8               	btfss	status,2,c
  8489  00153C  D7F3               	goto	l7300
  8490  00153E                     l1363:
  8491                           
  8492                           ; BSR set to: 0
  8493  00153E  0100               	movlb	0	; () banked
  8494  001540  AFEB               	btfss	___ftadd@sign& (0+255),7,b
  8495  001542  D012               	goto	l1372
  8496                           
  8497                           ; BSR set to: 0
  8498  001544  0EFF               	movlw	255
  8499  001546  0100               	movlb	0	; () banked
  8500  001548  1BE2               	xorwf	___ftadd@f1& (0+255),f,b
  8501  00154A  0EFF               	movlw	255
  8502  00154C  0100               	movlb	0	; () banked
  8503  00154E  1BE3               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8504  001550  0EFF               	movlw	255
  8505  001552  0100               	movlb	0	; () banked
  8506  001554  1BE4               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8507  001556  0E01               	movlw	1
  8508  001558  0100               	movlb	0	; () banked
  8509  00155A  27E2               	addwf	___ftadd@f1& (0+255),f,b
  8510  00155C  0E00               	movlw	0
  8511  00155E  0100               	movlb	0	; () banked
  8512  001560  23E3               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8513  001562  0E00               	movlw	0
  8514  001564  0100               	movlb	0	; () banked
  8515  001566  23E4               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8516  001568                     l1372:
  8517                           
  8518                           ; BSR set to: 0
  8519  001568  0100               	movlb	0	; () banked
  8520  00156A  ADEB               	btfss	___ftadd@sign& (0+255),6,b
  8521  00156C  D012               	goto	l7308
  8522                           
  8523                           ; BSR set to: 0
  8524  00156E  0EFF               	movlw	255
  8525  001570  0100               	movlb	0	; () banked
  8526  001572  1BE5               	xorwf	___ftadd@f2& (0+255),f,b
  8527  001574  0EFF               	movlw	255
  8528  001576  0100               	movlb	0	; () banked
  8529  001578  1BE6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8530  00157A  0EFF               	movlw	255
  8531  00157C  0100               	movlb	0	; () banked
  8532  00157E  1BE7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8533  001580  0E01               	movlw	1
  8534  001582  0100               	movlb	0	; () banked
  8535  001584  27E5               	addwf	___ftadd@f2& (0+255),f,b
  8536  001586  0E00               	movlw	0
  8537  001588  0100               	movlb	0	; () banked
  8538  00158A  23E6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8539  00158C  0E00               	movlw	0
  8540  00158E  0100               	movlb	0	; () banked
  8541  001590  23E7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8542  001592                     l7308:
  8543                           
  8544                           ; BSR set to: 0
  8545  001592  0E00               	movlw	0
  8546  001594  0100               	movlb	0	; () banked
  8547  001596  6FEB               	movwf	___ftadd@sign& (0+255),b
  8548                           
  8549                           ; BSR set to: 0
  8550  001598  0100               	movlb	0	; () banked
  8551  00159A  51E2               	movf	___ftadd@f1& (0+255),w,b
  8552  00159C  0100               	movlb	0	; () banked
  8553  00159E  27E5               	addwf	___ftadd@f2& (0+255),f,b
  8554  0015A0  0100               	movlb	0	; () banked
  8555  0015A2  51E3               	movf	(___ftadd@f1+1)& (0+255),w,b
  8556  0015A4  0100               	movlb	0	; () banked
  8557  0015A6  23E6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8558  0015A8  0100               	movlb	0	; () banked
  8559  0015AA  51E4               	movf	(___ftadd@f1+2)& (0+255),w,b
  8560  0015AC  0100               	movlb	0	; () banked
  8561  0015AE  23E7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8562                           
  8563                           ; BSR set to: 0
  8564  0015B0  0100               	movlb	0	; () banked
  8565  0015B2  AFE7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8566  0015B4  D015               	goto	l7318
  8567                           
  8568                           ; BSR set to: 0
  8569  0015B6  0EFF               	movlw	255
  8570  0015B8  0100               	movlb	0	; () banked
  8571  0015BA  1BE5               	xorwf	___ftadd@f2& (0+255),f,b
  8572  0015BC  0EFF               	movlw	255
  8573  0015BE  0100               	movlb	0	; () banked
  8574  0015C0  1BE6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8575  0015C2  0EFF               	movlw	255
  8576  0015C4  0100               	movlb	0	; () banked
  8577  0015C6  1BE7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8578  0015C8  0E01               	movlw	1
  8579  0015CA  0100               	movlb	0	; () banked
  8580  0015CC  27E5               	addwf	___ftadd@f2& (0+255),f,b
  8581  0015CE  0E00               	movlw	0
  8582  0015D0  0100               	movlb	0	; () banked
  8583  0015D2  23E6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8584  0015D4  0E00               	movlw	0
  8585  0015D6  0100               	movlb	0	; () banked
  8586  0015D8  23E7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8587                           
  8588                           ; BSR set to: 0
  8589  0015DA  0E01               	movlw	1
  8590  0015DC  0100               	movlb	0	; () banked
  8591  0015DE  6FEB               	movwf	___ftadd@sign& (0+255),b
  8592  0015E0                     l7318:
  8593                           
  8594                           ; BSR set to: 0
  8595  0015E0  C0E5  F0C7         	movff	___ftadd@f2,___ftpack@arg
  8596  0015E4  C0E6  F0C8         	movff	___ftadd@f2+1,___ftpack@arg+1
  8597  0015E8  C0E7  F0C9         	movff	___ftadd@f2+2,___ftpack@arg+2
  8598  0015EC  C0ED  F0CA         	movff	___ftadd@exp1,___ftpack@exp
  8599  0015F0  C0EB  F0CB         	movff	___ftadd@sign,___ftpack@sign
  8600  0015F4  EC76  F012         	call	___ftpack	;wreg free
  8601  0015F8  C0C7  F0E2         	movff	?___ftpack,?___ftadd
  8602  0015FC  C0C8  F0E3         	movff	?___ftpack+1,?___ftadd+1
  8603  001600  C0C9  F0E4         	movff	?___ftpack+2,?___ftadd+2
  8604  001604  0012               	return	
  8605  001606                     __end_of___ftadd:
  8606                           	opt stack 0
  8607                           tblptru	equ	0xFF8
  8608                           tblptrh	equ	0xFF7
  8609                           tblptrl	equ	0xFF6
  8610                           tablat	equ	0xFF5
  8611                           prodh	equ	0xFF4
  8612                           prodl	equ	0xFF3
  8613                           intcon	equ	0xFF2
  8614                           indf0	equ	0xFEF
  8615                           postinc0	equ	0xFEE
  8616                           fsr0h	equ	0xFEA
  8617                           fsr0l	equ	0xFE9
  8618                           wreg	equ	0xFE8
  8619                           indf1	equ	0xFE7
  8620                           postdec1	equ	0xFE5
  8621                           fsr1h	equ	0xFE2
  8622                           fsr1l	equ	0xFE1
  8623                           indf2	equ	0xFDF
  8624                           postinc2	equ	0xFDE
  8625                           postdec2	equ	0xFDD
  8626                           plusw2	equ	0xFDB
  8627                           fsr2h	equ	0xFDA
  8628                           fsr2l	equ	0xFD9
  8629                           status	equ	0xFD8
  8630                           
  8631 ;; *************** function _select_Program *****************
  8632 ;; Defined at:
  8633 ;;		line 208 in file "user.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;		None
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;		None               void
  8640 ;; Registers used:
  8641 ;;		None
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8651 ;;Total ram usage:        0 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:   12
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_APP_CustomCDCTasks
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text27
  8662  0040A4                     __ptext27:
  8663                           	opt stack 0
  8664  0040A4                     _select_Program:
  8665                           	opt stack 17
  8666                           
  8667                           ;incstack = 0
  8668  0040A4  0012               	return		;funcret
  8669  0040A6                     __end_of_select_Program:
  8670                           	opt stack 0
  8671                           tblptru	equ	0xFF8
  8672                           tblptrh	equ	0xFF7
  8673                           tblptrl	equ	0xFF6
  8674                           tablat	equ	0xFF5
  8675                           prodh	equ	0xFF4
  8676                           prodl	equ	0xFF3
  8677                           intcon	equ	0xFF2
  8678                           indf0	equ	0xFEF
  8679                           postinc0	equ	0xFEE
  8680                           fsr0h	equ	0xFEA
  8681                           fsr0l	equ	0xFE9
  8682                           wreg	equ	0xFE8
  8683                           indf1	equ	0xFE7
  8684                           postdec1	equ	0xFE5
  8685                           fsr1h	equ	0xFE2
  8686                           fsr1l	equ	0xFE1
  8687                           indf2	equ	0xFDF
  8688                           postinc2	equ	0xFDE
  8689                           postdec2	equ	0xFDD
  8690                           plusw2	equ	0xFDB
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8
  8694                           
  8695 ;; *************** function _select_Battery *****************
  8696 ;; Defined at:
  8697 ;;		line 184 in file "user.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;		None
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;		None               void
  8704 ;; Registers used:
  8705 ;;		None
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8711 ;;      Params:         0       0       0       0       0       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8715 ;;Total ram usage:        0 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:   12
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_APP_CustomCDCTasks
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text28
  8726  0040A6                     __ptext28:
  8727                           	opt stack 0
  8728  0040A6                     _select_Battery:
  8729                           	opt stack 17
  8730                           
  8731                           ;incstack = 0
  8732  0040A6  0012               	return		;funcret
  8733  0040A8                     __end_of_select_Battery:
  8734                           	opt stack 0
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           intcon	equ	0xFF2
  8742                           indf0	equ	0xFEF
  8743                           postinc0	equ	0xFEE
  8744                           fsr0h	equ	0xFEA
  8745                           fsr0l	equ	0xFE9
  8746                           wreg	equ	0xFE8
  8747                           indf1	equ	0xFE7
  8748                           postdec1	equ	0xFE5
  8749                           fsr1h	equ	0xFE2
  8750                           fsr1l	equ	0xFE1
  8751                           indf2	equ	0xFDF
  8752                           postinc2	equ	0xFDE
  8753                           postdec2	equ	0xFDD
  8754                           plusw2	equ	0xFDB
  8755                           fsr2h	equ	0xFDA
  8756                           fsr2l	equ	0xFD9
  8757                           status	equ	0xFD8
  8758                           
  8759 ;; *************** function _select_Action *****************
  8760 ;; Defined at:
  8761 ;;		line 196 in file "user.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;		None               void
  8768 ;; Registers used:
  8769 ;;		None
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:   12
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_APP_CustomCDCTasks
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text29
  8790  0040A8                     __ptext29:
  8791                           	opt stack 0
  8792  0040A8                     _select_Action:
  8793                           	opt stack 17
  8794                           
  8795                           ;incstack = 0
  8796  0040A8  0012               	return		;funcret
  8797  0040AA                     __end_of_select_Action:
  8798                           	opt stack 0
  8799                           tblptru	equ	0xFF8
  8800                           tblptrh	equ	0xFF7
  8801                           tblptrl	equ	0xFF6
  8802                           tablat	equ	0xFF5
  8803                           prodh	equ	0xFF4
  8804                           prodl	equ	0xFF3
  8805                           intcon	equ	0xFF2
  8806                           indf0	equ	0xFEF
  8807                           postinc0	equ	0xFEE
  8808                           fsr0h	equ	0xFEA
  8809                           fsr0l	equ	0xFE9
  8810                           wreg	equ	0xFE8
  8811                           indf1	equ	0xFE7
  8812                           postdec1	equ	0xFE5
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           indf2	equ	0xFDF
  8816                           postinc2	equ	0xFDE
  8817                           postdec2	equ	0xFDD
  8818                           plusw2	equ	0xFDB
  8819                           fsr2h	equ	0xFDA
  8820                           fsr2l	equ	0xFD9
  8821                           status	equ	0xFD8
  8822                           
  8823 ;; *************** function _list_Program *****************
  8824 ;; Defined at:
  8825 ;;		line 202 in file "user.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  2   17[BANK0 ] short 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8839 ;;      Params:         0       2       0       0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8842 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8843 ;;Total ram usage:        2 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   12
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_APP_CustomCDCTasks
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text30
  8854  004056                     __ptext30:
  8855                           	opt stack 0
  8856  004056                     _list_Program:
  8857                           	opt stack 17
  8858                           
  8859                           ;user.c: 204: return OK;
  8860                           
  8861                           ;incstack = 0
  8862  004056  0E00               	movlw	0
  8863  004058  0100               	movlb	0	; () banked
  8864  00405A  6FC8               	movwf	(?_list_Program+1)& (0+255),b
  8865  00405C  0E00               	movlw	0
  8866  00405E  6FC7               	movwf	?_list_Program& (0+255),b
  8867  004060  0012               	return	
  8868  004062                     __end_of_list_Program:
  8869                           	opt stack 0
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           indf0	equ	0xFEF
  8878                           postinc0	equ	0xFEE
  8879                           fsr0h	equ	0xFEA
  8880                           fsr0l	equ	0xFE9
  8881                           wreg	equ	0xFE8
  8882                           indf1	equ	0xFE7
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           indf2	equ	0xFDF
  8887                           postinc2	equ	0xFDE
  8888                           postdec2	equ	0xFDD
  8889                           plusw2	equ	0xFDB
  8890                           fsr2h	equ	0xFDA
  8891                           fsr2l	equ	0xFD9
  8892                           status	equ	0xFD8
  8893                           
  8894 ;; *************** function _list_Battery *****************
  8895 ;; Defined at:
  8896 ;;		line 178 in file "user.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2   17[BANK0 ] short 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8910 ;;      Params:         0       2       0       0       0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8913 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8914 ;;Total ram usage:        2 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:   12
  8917 ;; This function calls:
  8918 ;;		Nothing
  8919 ;; This function is called by:
  8920 ;;		_APP_CustomCDCTasks
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text31
  8925  004062                     __ptext31:
  8926                           	opt stack 0
  8927  004062                     _list_Battery:
  8928                           	opt stack 17
  8929                           
  8930                           ;user.c: 180: return OK;
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;incstack = 0
  8934  004062  0E00               	movlw	0
  8935  004064  0100               	movlb	0	; () banked
  8936  004066  6FC8               	movwf	(?_list_Battery+1)& (0+255),b
  8937  004068  0E00               	movlw	0
  8938  00406A  6FC7               	movwf	?_list_Battery& (0+255),b
  8939  00406C  0012               	return	
  8940  00406E                     __end_of_list_Battery:
  8941                           	opt stack 0
  8942                           tblptru	equ	0xFF8
  8943                           tblptrh	equ	0xFF7
  8944                           tblptrl	equ	0xFF6
  8945                           tablat	equ	0xFF5
  8946                           prodh	equ	0xFF4
  8947                           prodl	equ	0xFF3
  8948                           intcon	equ	0xFF2
  8949                           indf0	equ	0xFEF
  8950                           postinc0	equ	0xFEE
  8951                           fsr0h	equ	0xFEA
  8952                           fsr0l	equ	0xFE9
  8953                           wreg	equ	0xFE8
  8954                           indf1	equ	0xFE7
  8955                           postdec1	equ	0xFE5
  8956                           fsr1h	equ	0xFE2
  8957                           fsr1l	equ	0xFE1
  8958                           indf2	equ	0xFDF
  8959                           postinc2	equ	0xFDE
  8960                           postdec2	equ	0xFDD
  8961                           plusw2	equ	0xFDB
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function _list_Action *****************
  8967 ;; Defined at:
  8968 ;;		line 190 in file "user.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  2   17[BANK0 ] short 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8982 ;;      Params:         0       2       0       0       0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8985 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8986 ;;Total ram usage:        2 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:   12
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_APP_CustomCDCTasks
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text32
  8997  00406E                     __ptext32:
  8998                           	opt stack 0
  8999  00406E                     _list_Action:
  9000                           	opt stack 17
  9001                           
  9002                           ;user.c: 192: return OK;
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;incstack = 0
  9006  00406E  0E00               	movlw	0
  9007  004070  0100               	movlb	0	; () banked
  9008  004072  6FC8               	movwf	(?_list_Action+1)& (0+255),b
  9009  004074  0E00               	movlw	0
  9010  004076  6FC7               	movwf	?_list_Action& (0+255),b
  9011  004078  0012               	return	
  9012  00407A                     __end_of_list_Action:
  9013                           	opt stack 0
  9014                           tblptru	equ	0xFF8
  9015                           tblptrh	equ	0xFF7
  9016                           tblptrl	equ	0xFF6
  9017                           tablat	equ	0xFF5
  9018                           prodh	equ	0xFF4
  9019                           prodl	equ	0xFF3
  9020                           intcon	equ	0xFF2
  9021                           indf0	equ	0xFEF
  9022                           postinc0	equ	0xFEE
  9023                           fsr0h	equ	0xFEA
  9024                           fsr0l	equ	0xFE9
  9025                           wreg	equ	0xFE8
  9026                           indf1	equ	0xFE7
  9027                           postdec1	equ	0xFE5
  9028                           fsr1h	equ	0xFE2
  9029                           fsr1l	equ	0xFE1
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           plusw2	equ	0xFDB
  9034                           fsr2h	equ	0xFDA
  9035                           fsr2l	equ	0xFD9
  9036                           status	equ	0xFD8
  9037                           
  9038 ;; *************** function _initialize *****************
  9039 ;; Defined at:
  9040 ;;		line 172 in file "user.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  2   17[BANK0 ] short 
  9047 ;; Registers used:
  9048 ;;		wreg, status,2
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9054 ;;      Params:         0       2       0       0       0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9057 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9058 ;;Total ram usage:        2 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:   12
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_APP_CustomCDCTasks
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text33
  9069  00407A                     __ptext33:
  9070                           	opt stack 0
  9071  00407A                     _initialize:
  9072                           	opt stack 17
  9073                           
  9074                           ;user.c: 174: return OK;
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;incstack = 0
  9078  00407A  0E00               	movlw	0
  9079  00407C  0100               	movlb	0	; () banked
  9080  00407E  6FC8               	movwf	(?_initialize+1)& (0+255),b
  9081  004080  0E00               	movlw	0
  9082  004082  6FC7               	movwf	?_initialize& (0+255),b
  9083  004084  0012               	return	
  9084  004086                     __end_of_initialize:
  9085                           	opt stack 0
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           indf0	equ	0xFEF
  9094                           postinc0	equ	0xFEE
  9095                           fsr0h	equ	0xFEA
  9096                           fsr0l	equ	0xFE9
  9097                           wreg	equ	0xFE8
  9098                           indf1	equ	0xFE7
  9099                           postdec1	equ	0xFE5
  9100                           fsr1h	equ	0xFE2
  9101                           fsr1l	equ	0xFE1
  9102                           indf2	equ	0xFDF
  9103                           postinc2	equ	0xFDE
  9104                           postdec2	equ	0xFDD
  9105                           plusw2	equ	0xFDB
  9106                           fsr2h	equ	0xFDA
  9107                           fsr2l	equ	0xFD9
  9108                           status	equ	0xFD8
  9109                           
  9110 ;; *************** function _end_Charge *****************
  9111 ;; Defined at:
  9112 ;;		line 430 in file "user.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;		None
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;		None               void
  9119 ;; Registers used:
  9120 ;;		None
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9126 ;;      Params:         0       0       0       0       0       0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9130 ;;Total ram usage:        0 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:   12
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_APP_CustomCDCTasks
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text34
  9141  0040AA                     __ptext34:
  9142                           	opt stack 0
  9143  0040AA                     _end_Charge:
  9144                           	opt stack 17
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;incstack = 0
  9148  0040AA  0012               	return		;funcret
  9149  0040AC                     __end_of_end_Charge:
  9150                           	opt stack 0
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           indf0	equ	0xFEF
  9159                           postinc0	equ	0xFEE
  9160                           fsr0h	equ	0xFEA
  9161                           fsr0l	equ	0xFE9
  9162                           wreg	equ	0xFE8
  9163                           indf1	equ	0xFE7
  9164                           postdec1	equ	0xFE5
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           plusw2	equ	0xFDB
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function _check_Precondition *****************
  9176 ;; Defined at:
  9177 ;;		line 224 in file "user.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  precondition    2   21[BANK1 ] PTR short 
  9180 ;;		 -> APP_CustomCDCTasks@precondition(2), 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  voltage         3   25[BANK1 ] float 
  9183 ;;  res             2   23[BANK1 ] short 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  2   21[BANK1 ] short 
  9186 ;; Registers used:
  9187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9193 ;;      Params:         0       0       2       0       0       0       0       0       0
  9194 ;;      Locals:         0       0       5       0       0       0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9196 ;;      Totals:         0       0       7       0       0       0       0       0       0
  9197 ;;Total ram usage:        7 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:   15
  9200 ;; This function calls:
  9201 ;;		_APP_USB_send
  9202 ;;		_V_Eval
  9203 ;;		___ftge
  9204 ;;		___ftmul
  9205 ;;		___lwtoft
  9206 ;; This function is called by:
  9207 ;;		_APP_CustomCDCTasks
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	text35
  9212  0029A4                     __ptext35:
  9213                           	opt stack 0
  9214  0029A4                     _check_Precondition:
  9215                           	opt stack 14
  9216                           
  9217                           ;user.c: 226: signed float voltage = 0;
  9218                           
  9219                           ;incstack = 0
  9220  0029A4  0E00               	movlw	0
  9221  0029A6  0101               	movlb	1	; () banked
  9222  0029A8  6F88               	movwf	check_Precondition@voltage& (0+255),b
  9223  0029AA  0E00               	movlw	0
  9224  0029AC  0101               	movlb	1	; () banked
  9225  0029AE  6F89               	movwf	(check_Precondition@voltage+1)& (0+255),b
  9226  0029B0  0E00               	movlw	0
  9227  0029B2  0101               	movlb	1	; () banked
  9228  0029B4  6F8A               	movwf	(check_Precondition@voltage+2)& (0+255),b
  9229                           
  9230                           ; BSR set to: 1
  9231                           ;user.c: 227: short res;
  9232                           ;user.c: 229: res = V_Eval(0b10000111,&voltage);
  9233  0029B6  0E88               	movlw	low check_Precondition@voltage
  9234  0029B8  0101               	movlb	1	; () banked
  9235  0029BA  6F7E               	movwf	V_Eval@voltage& (0+255),b
  9236  0029BC  0E01               	movlw	high check_Precondition@voltage
  9237  0029BE  0101               	movlb	1	; () banked
  9238  0029C0  6F7F               	movwf	(V_Eval@voltage+1)& (0+255),b
  9239  0029C2  0E87               	movlw	135
  9240  0029C4  ECAB  F015         	call	_V_Eval
  9241  0029C8  C17E  F186         	movff	?_V_Eval,check_Precondition@res
  9242  0029CC  C17F  F187         	movff	?_V_Eval+1,check_Precondition@res+1
  9243                           
  9244                           ;user.c: 230: if (res != OK)
  9245  0029D0  0101               	movlb	1	; () banked
  9246  0029D2  5186               	movf	check_Precondition@res& (0+255),w,b
  9247  0029D4  0101               	movlb	1	; () banked
  9248  0029D6  1187               	iorwf	(check_Precondition@res+1)& (0+255),w,b
  9249  0029D8  B4D8               	btfsc	status,2,c
  9250  0029DA  D006               	goto	l8108
  9251                           
  9252                           ; BSR set to: 1
  9253                           ;user.c: 231: {
  9254                           ;user.c: 232: return KO;
  9255  0029DC  0E00               	movlw	0
  9256  0029DE  0101               	movlb	1	; () banked
  9257  0029E0  6F85               	movwf	(?_check_Precondition+1)& (0+255),b
  9258  0029E2  0E01               	movlw	1
  9259  0029E4  6F84               	movwf	?_check_Precondition& (0+255),b
  9260                           
  9261                           ; BSR set to: 1
  9262  0029E6  0012               	return	
  9263  0029E8                     l8108:
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;user.c: 233: }
  9267                           ;user.c: 235: if (voltage < battery.charge.restore_Lowest_Voltage * battery.number_of_ce
      +                          lls)
  9268  0029E8  C188  F0E2         	movff	check_Precondition@voltage,___ftge@ff1
  9269  0029EC  C189  F0E3         	movff	check_Precondition@voltage+1,___ftge@ff1+1
  9270  0029F0  C18A  F0E4         	movff	check_Precondition@voltage+2,___ftge@ff1+2
  9271  0029F4  C136  F0D6         	movff	_battery+41,___ftmul@f2
  9272  0029F8  C137  F0D7         	movff	_battery+42,___ftmul@f2+1
  9273  0029FC  C138  F0D8         	movff	_battery+43,___ftmul@f2+2
  9274  002A00  C11C  F0CF         	movff	_battery+15,___lwtoft@c
  9275  002A04  C11D  F0D0         	movff	_battery+16,___lwtoft@c+1
  9276  002A08  EC9C  F01F         	call	___lwtoft	;wreg free
  9277  002A0C  C0CF  F0D3         	movff	?___lwtoft,___ftmul@f1
  9278  002A10  C0D0  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  9279  002A14  C0D1  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  9280  002A18  EC13  F00E         	call	___ftmul	;wreg free
  9281  002A1C  C0D3  F0E5         	movff	?___ftmul,___ftge@ff2
  9282  002A20  C0D4  F0E6         	movff	?___ftmul+1,___ftge@ff2+1
  9283  002A24  C0D5  F0E7         	movff	?___ftmul+2,___ftge@ff2+2
  9284  002A28  EC1D  F018         	call	___ftge	;wreg free
  9285  002A2C  0100               	movlb	0	; () banked
  9286  002A2E  B0D8               	btfsc	status,0,c
  9287  002A30  D006               	goto	l8112
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;user.c: 236: {
  9291                           ;user.c: 237: *precondition = 1;
  9292  002A32  C184  FFD9         	movff	check_Precondition@precondition,fsr2l
  9293  002A36  C185  FFDA         	movff	check_Precondition@precondition+1,fsr2h
  9294  002A3A  0E01               	movlw	1
  9295  002A3C  D005               	goto	L5
  9296  002A3E                     l8112:
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;user.c: 239: else
  9300                           ;user.c: 240: {
  9301                           ;user.c: 241: *precondition = 0;
  9302  002A3E  C184  FFD9         	movff	check_Precondition@precondition,fsr2l
  9303  002A42  C185  FFDA         	movff	check_Precondition@precondition+1,fsr2h
  9304  002A46  0E00               	movlw	0
  9305  002A48                     L5:
  9306  002A48  6EDE               	movwf	postinc2,c
  9307  002A4A  0E00               	movlw	0
  9308  002A4C  6EDD               	movwf	postdec2,c
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;user.c: 242: }
  9312                           ;user.c: 244: APP_USB_send("voltage : %f, precondition : %hd",voltage,precondition);
  9313                           
  9314                           ; BSR set to: 0
  9315  002A4E  0E4F               	movlw	low STR_30
  9316  002A50  0100               	movlb	0	; () banked
  9317  002A52  6FE7               	movwf	APP_USB_send@format& (0+255),b
  9318  002A54  0E7E               	movlw	high STR_30
  9319  002A56  0100               	movlb	0	; () banked
  9320  002A58  6FE8               	movwf	(APP_USB_send@format+1)& (0+255),b
  9321  002A5A  C188  F0E9         	movff	check_Precondition@voltage,?_APP_USB_send+2
  9322  002A5E  C189  F0EA         	movff	check_Precondition@voltage+1,?_APP_USB_send+3
  9323  002A62  C18A  F0EB         	movff	check_Precondition@voltage+2,?_APP_USB_send+4
  9324  002A66  C184  F0EC         	movff	check_Precondition@precondition,?_APP_USB_send+5
  9325  002A6A  C185  F0ED         	movff	check_Precondition@precondition+1,?_APP_USB_send+6
  9326  002A6E  EC33  F01D         	call	_APP_USB_send	;wreg free
  9327                           
  9328                           ;user.c: 246: return OK;
  9329  002A72  0E00               	movlw	0
  9330  002A74  0101               	movlb	1	; () banked
  9331  002A76  6F85               	movwf	(?_check_Precondition+1)& (0+255),b
  9332  002A78  0E00               	movlw	0
  9333  002A7A  6F84               	movwf	?_check_Precondition& (0+255),b
  9334  002A7C  0012               	return	
  9335  002A7E                     __end_of_check_Precondition:
  9336                           	opt stack 0
  9337                           tblptru	equ	0xFF8
  9338                           tblptrh	equ	0xFF7
  9339                           tblptrl	equ	0xFF6
  9340                           tablat	equ	0xFF5
  9341                           prodh	equ	0xFF4
  9342                           prodl	equ	0xFF3
  9343                           intcon	equ	0xFF2
  9344                           indf0	equ	0xFEF
  9345                           postinc0	equ	0xFEE
  9346                           fsr0h	equ	0xFEA
  9347                           fsr0l	equ	0xFE9
  9348                           wreg	equ	0xFE8
  9349                           indf1	equ	0xFE7
  9350                           postdec1	equ	0xFE5
  9351                           fsr1h	equ	0xFE2
  9352                           fsr1l	equ	0xFE1
  9353                           indf2	equ	0xFDF
  9354                           postinc2	equ	0xFDE
  9355                           postdec2	equ	0xFDD
  9356                           plusw2	equ	0xFDB
  9357                           fsr2h	equ	0xFDA
  9358                           fsr2l	equ	0xFD9
  9359                           status	equ	0xFD8
  9360                           
  9361 ;; *************** function ___lwtoft *****************
  9362 ;; Defined at:
  9363 ;;		line 28 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\lwtoft.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  c               2   25[BANK0 ] unsigned int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  3   25[BANK0 ] float 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9377 ;;      Params:         0       3       0       0       0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9380 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9381 ;;Total ram usage:        3 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:   13
  9384 ;; This function calls:
  9385 ;;		___ftpack
  9386 ;; This function is called by:
  9387 ;;		_check_Precondition
  9388 ;;		_verifie_Precondition
  9389 ;;		_verifie_Vbat
  9390 ;;		_start_CV
  9391 ;;		_verifie_Ibat
  9392 ;;		_stop_CV
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           	psect	text36
  9397  003F38                     __ptext36:
  9398                           	opt stack 0
  9399  003F38                     ___lwtoft:
  9400                           	opt stack 15
  9401                           
  9402                           ; BSR set to: 1
  9403                           ;incstack = 0
  9404  003F38  C0CF  F0C7         	movff	___lwtoft@c,___ftpack@arg
  9405  003F3C  C0D0  F0C8         	movff	___lwtoft@c+1,___ftpack@arg+1
  9406  003F40  0100               	movlb	0	; () banked
  9407  003F42  6BC9               	clrf	(___ftpack@arg+2)& (0+255),b
  9408  003F44  0E8E               	movlw	142
  9409  003F46  0100               	movlb	0	; () banked
  9410  003F48  6FCA               	movwf	___ftpack@exp& (0+255),b
  9411  003F4A  0E00               	movlw	0
  9412  003F4C  0100               	movlb	0	; () banked
  9413  003F4E  6FCB               	movwf	___ftpack@sign& (0+255),b
  9414  003F50  EC76  F012         	call	___ftpack	;wreg free
  9415  003F54  C0C7  F0CF         	movff	?___ftpack,?___lwtoft
  9416  003F58  C0C8  F0D0         	movff	?___ftpack+1,?___lwtoft+1
  9417  003F5C  C0C9  F0D1         	movff	?___ftpack+2,?___lwtoft+2
  9418  003F60  0012               	return	
  9419  003F62                     __end_of___lwtoft:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           indf0	equ	0xFEF
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           indf1	equ	0xFE7
  9434                           postdec1	equ	0xFE5
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           plusw2	equ	0xFDB
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           
  9445 ;; *************** function ___ftge *****************
  9446 ;; Defined at:
  9447 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftge.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  ff1             3   44[BANK0 ] float 
  9450 ;;  ff2             3   47[BANK0 ] float 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;		None               void
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9462 ;;      Params:         0       6       0       0       0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9464 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9465 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9466 ;;Total ram usage:        9 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:   12
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_I_V_Set
  9473 ;;		_CalcPI
  9474 ;;		_check_Precondition
  9475 ;;		_verifie_Precondition
  9476 ;;		_verifie_Vbat
  9477 ;;		_verifie_Ibat
  9478 ;;		_stop_CV
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text37
  9483  00303A                     __ptext37:
  9484                           	opt stack 0
  9485  00303A                     ___ftge:
  9486                           	opt stack 16
  9487                           
  9488                           ;incstack = 0
  9489  00303A  0100               	movlb	0	; () banked
  9490  00303C  AFE4               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9491  00303E  D01D               	goto	l7432
  9492                           
  9493                           ; BSR set to: 0
  9494  003040  C0E2  F0E8         	movff	___ftge@ff1,??___ftge
  9495  003044  C0E3  F0E9         	movff	___ftge@ff1+1,??___ftge+1
  9496  003048  C0E4  F0EA         	movff	___ftge@ff1+2,??___ftge+2
  9497  00304C  0100               	movlb	0	; () banked
  9498  00304E  1FE8               	comf	??___ftge& (0+255),f,b
  9499  003050  1FE9               	comf	(??___ftge+1)& (0+255),f,b
  9500  003052  1FEA               	comf	(??___ftge+2)& (0+255),f,b
  9501  003054  2BE8               	incf	??___ftge& (0+255),f,b
  9502  003056  0E00               	movlw	0
  9503  003058  23E9               	addwfc	(??___ftge+1)& (0+255),f,b
  9504  00305A  23EA               	addwfc	(??___ftge+2)& (0+255),f,b
  9505  00305C  0E00               	movlw	0
  9506  00305E  0100               	movlb	0	; () banked
  9507  003060  25E8               	addwf	??___ftge& (0+255),w,b
  9508  003062  0100               	movlb	0	; () banked
  9509  003064  6FE2               	movwf	___ftge@ff1& (0+255),b
  9510  003066  0E00               	movlw	0
  9511  003068  0100               	movlb	0	; () banked
  9512  00306A  21E9               	addwfc	(??___ftge+1)& (0+255),w,b
  9513  00306C  0100               	movlb	0	; () banked
  9514  00306E  6FE3               	movwf	(___ftge@ff1+1)& (0+255),b
  9515  003070  0E80               	movlw	128
  9516  003072  0100               	movlb	0	; () banked
  9517  003074  21EA               	addwfc	(??___ftge+2)& (0+255),w,b
  9518  003076  0100               	movlb	0	; () banked
  9519  003078  6FE4               	movwf	(___ftge@ff1+2)& (0+255),b
  9520  00307A                     l7432:
  9521                           
  9522                           ; BSR set to: 0
  9523  00307A  0100               	movlb	0	; () banked
  9524  00307C  AFE7               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9525  00307E  D01D               	goto	l7436
  9526                           
  9527                           ; BSR set to: 0
  9528  003080  C0E5  F0E8         	movff	___ftge@ff2,??___ftge
  9529  003084  C0E6  F0E9         	movff	___ftge@ff2+1,??___ftge+1
  9530  003088  C0E7  F0EA         	movff	___ftge@ff2+2,??___ftge+2
  9531  00308C  0100               	movlb	0	; () banked
  9532  00308E  1FE8               	comf	??___ftge& (0+255),f,b
  9533  003090  1FE9               	comf	(??___ftge+1)& (0+255),f,b
  9534  003092  1FEA               	comf	(??___ftge+2)& (0+255),f,b
  9535  003094  2BE8               	incf	??___ftge& (0+255),f,b
  9536  003096  0E00               	movlw	0
  9537  003098  23E9               	addwfc	(??___ftge+1)& (0+255),f,b
  9538  00309A  23EA               	addwfc	(??___ftge+2)& (0+255),f,b
  9539  00309C  0E00               	movlw	0
  9540  00309E  0100               	movlb	0	; () banked
  9541  0030A0  25E8               	addwf	??___ftge& (0+255),w,b
  9542  0030A2  0100               	movlb	0	; () banked
  9543  0030A4  6FE5               	movwf	___ftge@ff2& (0+255),b
  9544  0030A6  0E00               	movlw	0
  9545  0030A8  0100               	movlb	0	; () banked
  9546  0030AA  21E9               	addwfc	(??___ftge+1)& (0+255),w,b
  9547  0030AC  0100               	movlb	0	; () banked
  9548  0030AE  6FE6               	movwf	(___ftge@ff2+1)& (0+255),b
  9549  0030B0  0E80               	movlw	128
  9550  0030B2  0100               	movlb	0	; () banked
  9551  0030B4  21EA               	addwfc	(??___ftge+2)& (0+255),w,b
  9552  0030B6  0100               	movlb	0	; () banked
  9553  0030B8  6FE7               	movwf	(___ftge@ff2+2)& (0+255),b
  9554  0030BA                     l7436:
  9555                           
  9556                           ; BSR set to: 0
  9557  0030BA  0E00               	movlw	0
  9558  0030BC  0100               	movlb	0	; () banked
  9559  0030BE  1BE2               	xorwf	___ftge@ff1& (0+255),f,b
  9560  0030C0  0E00               	movlw	0
  9561  0030C2  0100               	movlb	0	; () banked
  9562  0030C4  1BE3               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9563  0030C6  0E80               	movlw	128
  9564  0030C8  0100               	movlb	0	; () banked
  9565  0030CA  1BE4               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9566                           
  9567                           ; BSR set to: 0
  9568  0030CC  0E00               	movlw	0
  9569  0030CE  0100               	movlb	0	; () banked
  9570  0030D0  1BE5               	xorwf	___ftge@ff2& (0+255),f,b
  9571  0030D2  0E00               	movlw	0
  9572  0030D4  0100               	movlb	0	; () banked
  9573  0030D6  1BE6               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9574  0030D8  0E80               	movlw	128
  9575  0030DA  0100               	movlb	0	; () banked
  9576  0030DC  1BE7               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9577  0030DE  0100               	movlb	0	; () banked
  9578  0030E0  51E5               	movf	___ftge@ff2& (0+255),w,b
  9579  0030E2  0100               	movlb	0	; () banked
  9580  0030E4  5DE2               	subwf	___ftge@ff1& (0+255),w,b
  9581  0030E6  0100               	movlb	0	; () banked
  9582  0030E8  51E6               	movf	(___ftge@ff2+1)& (0+255),w,b
  9583  0030EA  0100               	movlb	0	; () banked
  9584  0030EC  59E3               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9585  0030EE  0100               	movlb	0	; () banked
  9586  0030F0  51E7               	movf	(___ftge@ff2+2)& (0+255),w,b
  9587  0030F2  0100               	movlb	0	; () banked
  9588  0030F4  59E4               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9589  0030F6  B0D8               	btfsc	status,0,c
  9590  0030F8  D002               	goto	l7442
  9591                           
  9592                           ; BSR set to: 0
  9593  0030FA  90D8               	bcf	status,0,c
  9594  0030FC  0012               	return	
  9595  0030FE                     l7442:
  9596                           
  9597                           ; BSR set to: 0
  9598  0030FE  80D8               	bsf	status,0,c
  9599                           
  9600                           ; BSR set to: 0
  9601  003100  0012               	return	
  9602  003102                     __end_of___ftge:
  9603                           	opt stack 0
  9604                           tblptru	equ	0xFF8
  9605                           tblptrh	equ	0xFF7
  9606                           tblptrl	equ	0xFF6
  9607                           tablat	equ	0xFF5
  9608                           prodh	equ	0xFF4
  9609                           prodl	equ	0xFF3
  9610                           intcon	equ	0xFF2
  9611                           indf0	equ	0xFEF
  9612                           postinc0	equ	0xFEE
  9613                           fsr0h	equ	0xFEA
  9614                           fsr0l	equ	0xFE9
  9615                           wreg	equ	0xFE8
  9616                           indf1	equ	0xFE7
  9617                           postdec1	equ	0xFE5
  9618                           fsr1h	equ	0xFE2
  9619                           fsr1l	equ	0xFE1
  9620                           indf2	equ	0xFDF
  9621                           postinc2	equ	0xFDE
  9622                           postdec2	equ	0xFDD
  9623                           plusw2	equ	0xFDB
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8
  9627                           
  9628 ;; *************** function _V_Eval *****************
  9629 ;; Defined at:
  9630 ;;		line 82 in file "user.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  channel         1    wreg     unsigned char 
  9633 ;;  voltage         2   15[BANK1 ] PTR float 
  9634 ;;		 -> stop_CV@voltage(3), verifie_Ibat@current(3), verifie_Vbat@voltage(3), verifie_Precondition@voltage(3), 
  9635 ;;		 -> check_Precondition@voltage(3), PI(23), 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;  channel         1   17[BANK1 ] unsigned char 
  9638 ;;  temp            3   18[BANK1 ] float 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  2   15[BANK1 ] short 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9648 ;;      Params:         0       0       2       0       0       0       0       0       0
  9649 ;;      Locals:         0       0       4       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9651 ;;      Totals:         0       0       6       0       0       0       0       0       0
  9652 ;;Total ram usage:        6 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:   14
  9655 ;; This function calls:
  9656 ;;		_BusyADC
  9657 ;;		_ReadADC
  9658 ;;		_SelChanConvADC
  9659 ;;		___awtoft
  9660 ;;		___ftdiv
  9661 ;;		___ftmul
  9662 ;; This function is called by:
  9663 ;;		_I_V_Set
  9664 ;;		_check_Precondition
  9665 ;;		_verifie_Precondition
  9666 ;;		_verifie_Vbat
  9667 ;;		_verifie_Ibat
  9668 ;;		_stop_CV
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text38
  9673  002B56                     __ptext38:
  9674                           	opt stack 0
  9675  002B56                     _V_Eval:
  9676                           	opt stack 14
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;incstack = 0
  9680                           ;V_Eval@channel stored from wreg
  9681  002B56  0101               	movlb	1	; () banked
  9682  002B58  6F80               	movwf	V_Eval@channel& (0+255),b
  9683                           
  9684                           ;user.c: 84: signed float temp = 0;
  9685  002B5A  0E00               	movlw	0
  9686  002B5C  0101               	movlb	1	; () banked
  9687  002B5E  6F81               	movwf	V_Eval@temp& (0+255),b
  9688  002B60  0E00               	movlw	0
  9689  002B62  0101               	movlb	1	; () banked
  9690  002B64  6F82               	movwf	(V_Eval@temp+1)& (0+255),b
  9691  002B66  0E00               	movlw	0
  9692  002B68  0101               	movlb	1	; () banked
  9693  002B6A  6F83               	movwf	(V_Eval@temp+2)& (0+255),b
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;user.c: 85: SelChanConvADC(channel);
  9697  002B6C  0101               	movlb	1	; () banked
  9698  002B6E  5180               	movf	V_Eval@channel& (0+255),w,b
  9699  002B70  ECED  F01F         	call	_SelChanConvADC
  9700                           
  9701                           ;user.c: 86: timeout = 10;
  9702  002B74  0E00               	movlw	0
  9703  002B76  0100               	movlb	0	; () banked
  9704  002B78  6F99               	movwf	(_timeout+1)& (0+255),b
  9705  002B7A  0E0A               	movlw	10
  9706  002B7C  6F98               	movwf	_timeout& (0+255),b
  9707  002B7E                     l7664:
  9708                           
  9709                           ; BSR set to: 0
  9710  002B7E  EC43  F020         	call	_BusyADC	;wreg free
  9711  002B82  0900               	iorlw	0
  9712  002B84  B4D8               	btfsc	status,2,c
  9713  002B86  D006               	goto	l7668
  9714  002B88  0100               	movlb	0	; () banked
  9715  002B8A  5198               	movf	_timeout& (0+255),w,b
  9716  002B8C  0100               	movlb	0	; () banked
  9717  002B8E  1199               	iorwf	(_timeout+1)& (0+255),w,b
  9718  002B90  A4D8               	btfss	status,2,c
  9719  002B92  D7F5               	goto	l7664
  9720  002B94                     l7668:
  9721                           
  9722                           ;user.c: 89: if (timeout == 0)
  9723  002B94  0100               	movlb	0	; () banked
  9724  002B96  5198               	movf	_timeout& (0+255),w,b
  9725  002B98  0100               	movlb	0	; () banked
  9726  002B9A  1199               	iorwf	(_timeout+1)& (0+255),w,b
  9727  002B9C  A4D8               	btfss	status,2,c
  9728  002B9E  D006               	goto	l7674
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;user.c: 90: {
  9732                           ;user.c: 91: return KO;
  9733  002BA0  0E00               	movlw	0
  9734  002BA2  0101               	movlb	1	; () banked
  9735  002BA4  6F7F               	movwf	(?_V_Eval+1)& (0+255),b
  9736  002BA6  0E01               	movlw	1
  9737  002BA8  6F7E               	movwf	?_V_Eval& (0+255),b
  9738                           
  9739                           ; BSR set to: 1
  9740  002BAA  0012               	return	
  9741  002BAC                     l7674:
  9742                           
  9743                           ;user.c: 92: }
  9744                           ;user.c: 94: temp = ReadADC();
  9745  002BAC  EC1A  F020         	call	_ReadADC	;wreg free
  9746  002BB0  C0C7  F0CF         	movff	?_ReadADC,___awtoft@c
  9747  002BB4  C0C8  F0D0         	movff	?_ReadADC+1,___awtoft@c+1
  9748  002BB8  EC74  F01E         	call	___awtoft	;wreg free
  9749  002BBC  C0CF  F181         	movff	?___awtoft,V_Eval@temp
  9750  002BC0  C0D0  F182         	movff	?___awtoft+1,V_Eval@temp+1
  9751  002BC4  C0D1  F183         	movff	?___awtoft+2,V_Eval@temp+2
  9752                           
  9753                           ;user.c: 95: *voltage = (temp / 1024.0) * 5.0;
  9754  002BC8  0E00               	movlw	0
  9755  002BCA  0101               	movlb	1	; () banked
  9756  002BCC  6F72               	movwf	___ftdiv@f2& (0+255),b
  9757  002BCE  0E80               	movlw	128
  9758  002BD0  0101               	movlb	1	; () banked
  9759  002BD2  6F73               	movwf	(___ftdiv@f2+1)& (0+255),b
  9760  002BD4  0E44               	movlw	68
  9761  002BD6  0101               	movlb	1	; () banked
  9762  002BD8  6F74               	movwf	(___ftdiv@f2+2)& (0+255),b
  9763  002BDA  C181  F16F         	movff	V_Eval@temp,___ftdiv@f1
  9764  002BDE  C182  F170         	movff	V_Eval@temp+1,___ftdiv@f1+1
  9765  002BE2  C183  F171         	movff	V_Eval@temp+2,___ftdiv@f1+2
  9766  002BE6  EC6D  F00F         	call	___ftdiv	;wreg free
  9767  002BEA  C16F  F0D3         	movff	?___ftdiv,___ftmul@f1
  9768  002BEE  C170  F0D4         	movff	?___ftdiv+1,___ftmul@f1+1
  9769  002BF2  C171  F0D5         	movff	?___ftdiv+2,___ftmul@f1+2
  9770  002BF6  0E00               	movlw	0
  9771  002BF8  0100               	movlb	0	; () banked
  9772  002BFA  6FD6               	movwf	___ftmul@f2& (0+255),b
  9773  002BFC  0EA0               	movlw	160
  9774  002BFE  0100               	movlb	0	; () banked
  9775  002C00  6FD7               	movwf	(___ftmul@f2+1)& (0+255),b
  9776  002C02  0E40               	movlw	64
  9777  002C04  0100               	movlb	0	; () banked
  9778  002C06  6FD8               	movwf	(___ftmul@f2+2)& (0+255),b
  9779  002C08  EC13  F00E         	call	___ftmul	;wreg free
  9780  002C0C  C17E  FFD9         	movff	V_Eval@voltage,fsr2l
  9781  002C10  C17F  FFDA         	movff	V_Eval@voltage+1,fsr2h
  9782  002C14  C0D3  FFDE         	movff	?___ftmul,postinc2
  9783  002C18  C0D4  FFDE         	movff	?___ftmul+1,postinc2
  9784  002C1C  C0D5  FFDE         	movff	?___ftmul+2,postinc2
  9785                           
  9786                           ;user.c: 97: return OK;
  9787  002C20  0E00               	movlw	0
  9788  002C22  0101               	movlb	1	; () banked
  9789  002C24  6F7F               	movwf	(?_V_Eval+1)& (0+255),b
  9790  002C26  0E00               	movlw	0
  9791  002C28  6F7E               	movwf	?_V_Eval& (0+255),b
  9792  002C2A  0012               	return	
  9793  002C2C                     __end_of_V_Eval:
  9794                           	opt stack 0
  9795                           tblptru	equ	0xFF8
  9796                           tblptrh	equ	0xFF7
  9797                           tblptrl	equ	0xFF6
  9798                           tablat	equ	0xFF5
  9799                           prodh	equ	0xFF4
  9800                           prodl	equ	0xFF3
  9801                           intcon	equ	0xFF2
  9802                           indf0	equ	0xFEF
  9803                           postinc0	equ	0xFEE
  9804                           fsr0h	equ	0xFEA
  9805                           fsr0l	equ	0xFE9
  9806                           wreg	equ	0xFE8
  9807                           indf1	equ	0xFE7
  9808                           postdec1	equ	0xFE5
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           postdec2	equ	0xFDD
  9814                           plusw2	equ	0xFDB
  9815                           fsr2h	equ	0xFDA
  9816                           fsr2l	equ	0xFD9
  9817                           status	equ	0xFD8
  9818                           
  9819 ;; *************** function ___ftmul *****************
  9820 ;; Defined at:
  9821 ;;		line 62 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftmul.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  f1              3   29[BANK0 ] float 
  9824 ;;  f2              3   32[BANK0 ] float 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  9827 ;;  sign            1   43[BANK0 ] unsigned char 
  9828 ;;  cntr            1   42[BANK0 ] unsigned char 
  9829 ;;  exp             1   38[BANK0 ] unsigned char 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  3   29[BANK0 ] float 
  9832 ;; Registers used:
  9833 ;;		wreg, status,2, status,0, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9839 ;;      Params:         0       6       0       0       0       0       0       0       0
  9840 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9841 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9842 ;;      Totals:         0      15       0       0       0       0       0       0       0
  9843 ;;Total ram usage:       15 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; Hardware stack levels required when called:   13
  9846 ;; This function calls:
  9847 ;;		___ftpack
  9848 ;; This function is called by:
  9849 ;;		_V_Eval
  9850 ;;		_CalcPI
  9851 ;;		_check_Precondition
  9852 ;;		_verifie_Precondition
  9853 ;;		_verifie_Vbat
  9854 ;;		_start_CV
  9855 ;;		_verifie_Ibat
  9856 ;;		_stop_CV
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text39
  9861  001C26                     __ptext39:
  9862                           	opt stack 0
  9863  001C26                     ___ftmul:
  9864                           	opt stack 15
  9865                           
  9866                           ; BSR set to: 1
  9867                           ;incstack = 0
  9868  001C26  C0D5  F0D9         	movff	___ftmul@f1+2,??___ftmul
  9869  001C2A  0100               	movlb	0	; () banked
  9870  001C2C  6BDA               	clrf	(??___ftmul+1)& (0+255),b
  9871  001C2E  6BDB               	clrf	(??___ftmul+2)& (0+255),b
  9872  001C30  0100               	movlb	0	; () banked
  9873  001C32  35D4               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9874  001C34  0100               	movlb	0	; () banked
  9875  001C36  37D9               	rlcf	??___ftmul& (0+255),f,b
  9876  001C38  E301               	bnc	u7511
  9877  001C3A  81DA               	bsf	(??___ftmul+1)& (0+255),0,b
  9878  001C3C                     u7511:
  9879  001C3C  0100               	movlb	0	; () banked
  9880  001C3E  51D9               	movf	??___ftmul& (0+255),w,b
  9881  001C40  0100               	movlb	0	; () banked
  9882  001C42  6FDC               	movwf	___ftmul@exp& (0+255),b
  9883  001C44  0100               	movlb	0	; () banked
  9884  001C46  51DC               	movf	___ftmul@exp& (0+255),w,b
  9885  001C48  A4D8               	btfss	status,2,c
  9886  001C4A  D00A               	goto	l7374
  9887                           
  9888                           ; BSR set to: 0
  9889  001C4C  0E00               	movlw	0
  9890  001C4E  0100               	movlb	0	; () banked
  9891  001C50  6FD3               	movwf	?___ftmul& (0+255),b
  9892  001C52  0E00               	movlw	0
  9893  001C54  0100               	movlb	0	; () banked
  9894  001C56  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  9895  001C58  0E00               	movlw	0
  9896  001C5A  0100               	movlb	0	; () banked
  9897  001C5C  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  9898                           
  9899                           ; BSR set to: 0
  9900  001C5E  0012               	return	
  9901  001C60                     l7374:
  9902                           
  9903                           ; BSR set to: 0
  9904  001C60  C0D8  F0D9         	movff	___ftmul@f2+2,??___ftmul
  9905  001C64  0100               	movlb	0	; () banked
  9906  001C66  6BDA               	clrf	(??___ftmul+1)& (0+255),b
  9907  001C68  6BDB               	clrf	(??___ftmul+2)& (0+255),b
  9908  001C6A  0100               	movlb	0	; () banked
  9909  001C6C  35D7               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9910  001C6E  0100               	movlb	0	; () banked
  9911  001C70  37D9               	rlcf	??___ftmul& (0+255),f,b
  9912  001C72  E301               	bnc	u7531
  9913  001C74  81DA               	bsf	(??___ftmul+1)& (0+255),0,b
  9914  001C76                     u7531:
  9915  001C76  0100               	movlb	0	; () banked
  9916  001C78  51D9               	movf	??___ftmul& (0+255),w,b
  9917  001C7A  0100               	movlb	0	; () banked
  9918  001C7C  6FE1               	movwf	___ftmul@sign& (0+255),b
  9919  001C7E  0100               	movlb	0	; () banked
  9920  001C80  51E1               	movf	___ftmul@sign& (0+255),w,b
  9921  001C82  A4D8               	btfss	status,2,c
  9922  001C84  D00A               	goto	l7380
  9923                           
  9924                           ; BSR set to: 0
  9925  001C86  0E00               	movlw	0
  9926  001C88  0100               	movlb	0	; () banked
  9927  001C8A  6FD3               	movwf	?___ftmul& (0+255),b
  9928  001C8C  0E00               	movlw	0
  9929  001C8E  0100               	movlb	0	; () banked
  9930  001C90  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  9931  001C92  0E00               	movlw	0
  9932  001C94  0100               	movlb	0	; () banked
  9933  001C96  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  9934                           
  9935                           ; BSR set to: 0
  9936  001C98  0012               	return	
  9937  001C9A                     l7380:
  9938                           
  9939                           ; BSR set to: 0
  9940  001C9A  0100               	movlb	0	; () banked
  9941  001C9C  51E1               	movf	___ftmul@sign& (0+255),w,b
  9942  001C9E  0F7B               	addlw	123
  9943  001CA0  0100               	movlb	0	; () banked
  9944  001CA2  27DC               	addwf	___ftmul@exp& (0+255),f,b
  9945                           
  9946                           ; BSR set to: 0
  9947  001CA4  C0D5  F0E1         	movff	___ftmul@f1+2,___ftmul@sign
  9948  001CA8  0100               	movlb	0	; () banked
  9949  001CAA  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  9950  001CAC  0100               	movlb	0	; () banked
  9951  001CAE  1BE1               	xorwf	___ftmul@sign& (0+255),f,b
  9952  001CB0  0E80               	movlw	128
  9953  001CB2  0100               	movlb	0	; () banked
  9954  001CB4  17E1               	andwf	___ftmul@sign& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 0
  9957  001CB6  0100               	movlb	0	; () banked
  9958  001CB8  8FD4               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9959                           
  9960                           ; BSR set to: 0
  9961  001CBA  0100               	movlb	0	; () banked
  9962  001CBC  8FD7               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9963                           
  9964                           ; BSR set to: 0
  9965  001CBE  0EFF               	movlw	255
  9966  001CC0  0100               	movlb	0	; () banked
  9967  001CC2  17D6               	andwf	___ftmul@f2& (0+255),f,b
  9968  001CC4  0EFF               	movlw	255
  9969  001CC6  0100               	movlb	0	; () banked
  9970  001CC8  17D7               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9971  001CCA  0E00               	movlw	0
  9972  001CCC  0100               	movlb	0	; () banked
  9973  001CCE  17D8               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9974                           
  9975                           ; BSR set to: 0
  9976  001CD0  0E00               	movlw	0
  9977  001CD2  0100               	movlb	0	; () banked
  9978  001CD4  6FDD               	movwf	___ftmul@f3_as_product& (0+255),b
  9979  001CD6  0E00               	movlw	0
  9980  001CD8  0100               	movlb	0	; () banked
  9981  001CDA  6FDE               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9982  001CDC  0E00               	movlw	0
  9983  001CDE  0100               	movlb	0	; () banked
  9984  001CE0  6FDF               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9985                           
  9986                           ; BSR set to: 0
  9987  001CE2  0E07               	movlw	7
  9988  001CE4  0100               	movlb	0	; () banked
  9989  001CE6  6FE0               	movwf	___ftmul@cntr& (0+255),b
  9990  001CE8                     l7394:
  9991                           
  9992                           ; BSR set to: 0
  9993  001CE8  0100               	movlb	0	; () banked
  9994  001CEA  A1D3               	btfss	___ftmul@f1& (0+255),0,b
  9995  001CEC  D00C               	goto	l7398
  9996                           
  9997                           ; BSR set to: 0
  9998  001CEE  0100               	movlb	0	; () banked
  9999  001CF0  51D6               	movf	___ftmul@f2& (0+255),w,b
 10000  001CF2  0100               	movlb	0	; () banked
 10001  001CF4  27DD               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10002  001CF6  0100               	movlb	0	; () banked
 10003  001CF8  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
 10004  001CFA  0100               	movlb	0	; () banked
 10005  001CFC  23DE               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10006  001CFE  0100               	movlb	0	; () banked
 10007  001D00  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
 10008  001D02  0100               	movlb	0	; () banked
 10009  001D04  23DF               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10010  001D06                     l7398:
 10011                           
 10012                           ; BSR set to: 0
 10013  001D06  0100               	movlb	0	; () banked
 10014  001D08  90D8               	bcf	status,0,c
 10015  001D0A  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10016  001D0C  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10017  001D0E  33D3               	rrcf	___ftmul@f1& (0+255),f,b
 10018  001D10  0100               	movlb	0	; () banked
 10019  001D12  90D8               	bcf	status,0,c
 10020  001D14  37D6               	rlcf	___ftmul@f2& (0+255),f,b
 10021  001D16  37D7               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10022  001D18  37D8               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10023                           
 10024                           ; BSR set to: 0
 10025  001D1A  0100               	movlb	0	; () banked
 10026  001D1C  2FE0               	decfsz	___ftmul@cntr& (0+255),f,b
 10027  001D1E  D7E4               	goto	l7394
 10028                           
 10029                           ; BSR set to: 0
 10030                           
 10031                           ; BSR set to: 0
 10032  001D20  0E09               	movlw	9
 10033  001D22  0100               	movlb	0	; () banked
 10034  001D24  6FE0               	movwf	___ftmul@cntr& (0+255),b
 10035  001D26                     l7404:
 10036                           
 10037                           ; BSR set to: 0
 10038  001D26  0100               	movlb	0	; () banked
 10039  001D28  A1D3               	btfss	___ftmul@f1& (0+255),0,b
 10040  001D2A  D00C               	goto	l7408
 10041                           
 10042                           ; BSR set to: 0
 10043  001D2C  0100               	movlb	0	; () banked
 10044  001D2E  51D6               	movf	___ftmul@f2& (0+255),w,b
 10045  001D30  0100               	movlb	0	; () banked
 10046  001D32  27DD               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10047  001D34  0100               	movlb	0	; () banked
 10048  001D36  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
 10049  001D38  0100               	movlb	0	; () banked
 10050  001D3A  23DE               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10051  001D3C  0100               	movlb	0	; () banked
 10052  001D3E  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
 10053  001D40  0100               	movlb	0	; () banked
 10054  001D42  23DF               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10055  001D44                     l7408:
 10056                           
 10057                           ; BSR set to: 0
 10058  001D44  0100               	movlb	0	; () banked
 10059  001D46  90D8               	bcf	status,0,c
 10060  001D48  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10061  001D4A  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10062  001D4C  33D3               	rrcf	___ftmul@f1& (0+255),f,b
 10063  001D4E  0100               	movlb	0	; () banked
 10064  001D50  90D8               	bcf	status,0,c
 10065  001D52  33DF               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10066  001D54  33DE               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10067  001D56  33DD               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10068                           
 10069                           ; BSR set to: 0
 10070  001D58  0100               	movlb	0	; () banked
 10071  001D5A  2FE0               	decfsz	___ftmul@cntr& (0+255),f,b
 10072  001D5C  D7E4               	goto	l7404
 10073                           
 10074                           ; BSR set to: 0
 10075                           
 10076                           ; BSR set to: 0
 10077  001D5E  C0DD  F0C7         	movff	___ftmul@f3_as_product,___ftpack@arg
 10078  001D62  C0DE  F0C8         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10079  001D66  C0DF  F0C9         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10080  001D6A  C0DC  F0CA         	movff	___ftmul@exp,___ftpack@exp
 10081  001D6E  C0E1  F0CB         	movff	___ftmul@sign,___ftpack@sign
 10082  001D72  EC76  F012         	call	___ftpack	;wreg free
 10083  001D76  C0C7  F0D3         	movff	?___ftpack,?___ftmul
 10084  001D7A  C0C8  F0D4         	movff	?___ftpack+1,?___ftmul+1
 10085  001D7E  C0C9  F0D5         	movff	?___ftpack+2,?___ftmul+2
 10086  001D82  0012               	return	
 10087  001D84                     __end_of___ftmul:
 10088                           	opt stack 0
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           intcon	equ	0xFF2
 10096                           indf0	equ	0xFEF
 10097                           postinc0	equ	0xFEE
 10098                           fsr0h	equ	0xFEA
 10099                           fsr0l	equ	0xFE9
 10100                           wreg	equ	0xFE8
 10101                           indf1	equ	0xFE7
 10102                           postdec1	equ	0xFE5
 10103                           fsr1h	equ	0xFE2
 10104                           fsr1l	equ	0xFE1
 10105                           indf2	equ	0xFDF
 10106                           postinc2	equ	0xFDE
 10107                           postdec2	equ	0xFDD
 10108                           plusw2	equ	0xFDB
 10109                           fsr2h	equ	0xFDA
 10110                           fsr2l	equ	0xFD9
 10111                           status	equ	0xFD8
 10112                           
 10113 ;; *************** function ___ftdiv *****************
 10114 ;; Defined at:
 10115 ;;		line 54 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftdiv.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;  f1              3    0[BANK1 ] float 
 10118 ;;  f2              3    3[BANK1 ] float 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  f3              3   10[BANK1 ] float 
 10121 ;;  sign            1   14[BANK1 ] unsigned char 
 10122 ;;  exp             1   13[BANK1 ] unsigned char 
 10123 ;;  cntr            1    9[BANK1 ] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  3    0[BANK1 ] float 
 10126 ;; Registers used:
 10127 ;;		wreg, status,2, status,0, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10133 ;;      Params:         0       0       6       0       0       0       0       0       0
 10134 ;;      Locals:         0       0       6       0       0       0       0       0       0
 10135 ;;      Temps:          0       0       3       0       0       0       0       0       0
 10136 ;;      Totals:         0       0      15       0       0       0       0       0       0
 10137 ;;Total ram usage:       15 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:   13
 10140 ;; This function calls:
 10141 ;;		___ftpack
 10142 ;; This function is called by:
 10143 ;;		_V_Eval
 10144 ;;		_CalcPI
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text40
 10149  001EDA                     __ptext40:
 10150                           	opt stack 0
 10151  001EDA                     ___ftdiv:
 10152                           	opt stack 14
 10153                           
 10154                           ;incstack = 0
 10155  001EDA  C171  F175         	movff	___ftdiv@f1+2,??___ftdiv
 10156  001EDE  0101               	movlb	1	; () banked
 10157  001EE0  6B76               	clrf	(??___ftdiv+1)& (0+255),b
 10158  001EE2  6B77               	clrf	(??___ftdiv+2)& (0+255),b
 10159  001EE4  0101               	movlb	1	; () banked
 10160  001EE6  3570               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 10161  001EE8  0101               	movlb	1	; () banked
 10162  001EEA  3775               	rlcf	??___ftdiv& (0+255),f,b
 10163  001EEC  E301               	bnc	u7461
 10164  001EEE  8176               	bsf	(??___ftdiv+1)& (0+255),0,b
 10165  001EF0                     u7461:
 10166  001EF0  0101               	movlb	1	; () banked
 10167  001EF2  5175               	movf	??___ftdiv& (0+255),w,b
 10168  001EF4  0101               	movlb	1	; () banked
 10169  001EF6  6F7C               	movwf	___ftdiv@exp& (0+255),b
 10170  001EF8  0101               	movlb	1	; () banked
 10171  001EFA  517C               	movf	___ftdiv@exp& (0+255),w,b
 10172  001EFC  A4D8               	btfss	status,2,c
 10173  001EFE  D00A               	goto	l7328
 10174                           
 10175                           ; BSR set to: 1
 10176  001F00  0E00               	movlw	0
 10177  001F02  0101               	movlb	1	; () banked
 10178  001F04  6F6F               	movwf	?___ftdiv& (0+255),b
 10179  001F06  0E00               	movlw	0
 10180  001F08  0101               	movlb	1	; () banked
 10181  001F0A  6F70               	movwf	(?___ftdiv+1)& (0+255),b
 10182  001F0C  0E00               	movlw	0
 10183  001F0E  0101               	movlb	1	; () banked
 10184  001F10  6F71               	movwf	(?___ftdiv+2)& (0+255),b
 10185                           
 10186                           ; BSR set to: 1
 10187  001F12  0012               	return	
 10188  001F14                     l7328:
 10189                           
 10190                           ; BSR set to: 1
 10191  001F14  C174  F175         	movff	___ftdiv@f2+2,??___ftdiv
 10192  001F18  0101               	movlb	1	; () banked
 10193  001F1A  6B76               	clrf	(??___ftdiv+1)& (0+255),b
 10194  001F1C  6B77               	clrf	(??___ftdiv+2)& (0+255),b
 10195  001F1E  0101               	movlb	1	; () banked
 10196  001F20  3573               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 10197  001F22  0101               	movlb	1	; () banked
 10198  001F24  3775               	rlcf	??___ftdiv& (0+255),f,b
 10199  001F26  E301               	bnc	u7481
 10200  001F28  8176               	bsf	(??___ftdiv+1)& (0+255),0,b
 10201  001F2A                     u7481:
 10202  001F2A  0101               	movlb	1	; () banked
 10203  001F2C  5175               	movf	??___ftdiv& (0+255),w,b
 10204  001F2E  0101               	movlb	1	; () banked
 10205  001F30  6F7D               	movwf	___ftdiv@sign& (0+255),b
 10206  001F32  0101               	movlb	1	; () banked
 10207  001F34  517D               	movf	___ftdiv@sign& (0+255),w,b
 10208  001F36  A4D8               	btfss	status,2,c
 10209  001F38  D00A               	goto	l7334
 10210                           
 10211                           ; BSR set to: 1
 10212  001F3A  0E00               	movlw	0
 10213  001F3C  0101               	movlb	1	; () banked
 10214  001F3E  6F6F               	movwf	?___ftdiv& (0+255),b
 10215  001F40  0E00               	movlw	0
 10216  001F42  0101               	movlb	1	; () banked
 10217  001F44  6F70               	movwf	(?___ftdiv+1)& (0+255),b
 10218  001F46  0E00               	movlw	0
 10219  001F48  0101               	movlb	1	; () banked
 10220  001F4A  6F71               	movwf	(?___ftdiv+2)& (0+255),b
 10221                           
 10222                           ; BSR set to: 1
 10223  001F4C  0012               	return	
 10224  001F4E                     l7334:
 10225                           
 10226                           ; BSR set to: 1
 10227  001F4E  0E00               	movlw	0
 10228  001F50  0101               	movlb	1	; () banked
 10229  001F52  6F79               	movwf	___ftdiv@f3& (0+255),b
 10230  001F54  0E00               	movlw	0
 10231  001F56  0101               	movlb	1	; () banked
 10232  001F58  6F7A               	movwf	(___ftdiv@f3+1)& (0+255),b
 10233  001F5A  0E00               	movlw	0
 10234  001F5C  0101               	movlb	1	; () banked
 10235  001F5E  6F7B               	movwf	(___ftdiv@f3+2)& (0+255),b
 10236                           
 10237                           ; BSR set to: 1
 10238  001F60  0101               	movlb	1	; () banked
 10239  001F62  517D               	movf	___ftdiv@sign& (0+255),w,b
 10240  001F64  0F89               	addlw	137
 10241  001F66  0101               	movlb	1	; () banked
 10242  001F68  5F7C               	subwf	___ftdiv@exp& (0+255),f,b
 10243                           
 10244                           ; BSR set to: 1
 10245  001F6A  C171  F17D         	movff	___ftdiv@f1+2,___ftdiv@sign
 10246                           
 10247                           ; BSR set to: 1
 10248  001F6E  0101               	movlb	1	; () banked
 10249  001F70  5174               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10250  001F72  0101               	movlb	1	; () banked
 10251  001F74  1B7D               	xorwf	___ftdiv@sign& (0+255),f,b
 10252                           
 10253                           ; BSR set to: 1
 10254  001F76  0E80               	movlw	128
 10255  001F78  0101               	movlb	1	; () banked
 10256  001F7A  177D               	andwf	___ftdiv@sign& (0+255),f,b
 10257                           
 10258                           ; BSR set to: 1
 10259  001F7C  0101               	movlb	1	; () banked
 10260  001F7E  8F70               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 10261                           
 10262                           ; BSR set to: 1
 10263  001F80  0EFF               	movlw	255
 10264  001F82  0101               	movlb	1	; () banked
 10265  001F84  176F               	andwf	___ftdiv@f1& (0+255),f,b
 10266  001F86  0EFF               	movlw	255
 10267  001F88  0101               	movlb	1	; () banked
 10268  001F8A  1770               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 10269  001F8C  0E00               	movlw	0
 10270  001F8E  0101               	movlb	1	; () banked
 10271  001F90  1771               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 1
 10274  001F92  0101               	movlb	1	; () banked
 10275  001F94  8F73               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 10276                           
 10277                           ; BSR set to: 1
 10278  001F96  0EFF               	movlw	255
 10279  001F98  0101               	movlb	1	; () banked
 10280  001F9A  1772               	andwf	___ftdiv@f2& (0+255),f,b
 10281  001F9C  0EFF               	movlw	255
 10282  001F9E  0101               	movlb	1	; () banked
 10283  001FA0  1773               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 10284  001FA2  0E00               	movlw	0
 10285  001FA4  0101               	movlb	1	; () banked
 10286  001FA6  1774               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 10287                           
 10288                           ; BSR set to: 1
 10289  001FA8  0E18               	movlw	24
 10290  001FAA  0101               	movlb	1	; () banked
 10291  001FAC  6F78               	movwf	___ftdiv@cntr& (0+255),b
 10292  001FAE                     l7354:
 10293                           
 10294                           ; BSR set to: 1
 10295  001FAE  0101               	movlb	1	; () banked
 10296  001FB0  90D8               	bcf	status,0,c
 10297  001FB2  3779               	rlcf	___ftdiv@f3& (0+255),f,b
 10298  001FB4  377A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 10299  001FB6  377B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 10300                           
 10301                           ; BSR set to: 1
 10302  001FB8  0101               	movlb	1	; () banked
 10303  001FBA  5172               	movf	___ftdiv@f2& (0+255),w,b
 10304  001FBC  0101               	movlb	1	; () banked
 10305  001FBE  5D6F               	subwf	___ftdiv@f1& (0+255),w,b
 10306  001FC0  0101               	movlb	1	; () banked
 10307  001FC2  5173               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10308  001FC4  0101               	movlb	1	; () banked
 10309  001FC6  5970               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 10310  001FC8  0101               	movlb	1	; () banked
 10311  001FCA  5174               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10312  001FCC  0101               	movlb	1	; () banked
 10313  001FCE  5971               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 10314  001FD0  A0D8               	btfss	status,0,c
 10315  001FD2  D00E               	goto	l1383
 10316                           
 10317                           ; BSR set to: 1
 10318  001FD4  0101               	movlb	1	; () banked
 10319  001FD6  5172               	movf	___ftdiv@f2& (0+255),w,b
 10320  001FD8  0101               	movlb	1	; () banked
 10321  001FDA  5F6F               	subwf	___ftdiv@f1& (0+255),f,b
 10322  001FDC  0101               	movlb	1	; () banked
 10323  001FDE  5173               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10324  001FE0  0101               	movlb	1	; () banked
 10325  001FE2  5B70               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 10326  001FE4  0101               	movlb	1	; () banked
 10327  001FE6  5174               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10328  001FE8  0101               	movlb	1	; () banked
 10329  001FEA  5B71               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 10330                           
 10331                           ; BSR set to: 1
 10332  001FEC  0101               	movlb	1	; () banked
 10333  001FEE  8179               	bsf	___ftdiv@f3& (0+255),0,b
 10334  001FF0                     l1383:
 10335                           
 10336                           ; BSR set to: 1
 10337  001FF0  0101               	movlb	1	; () banked
 10338  001FF2  90D8               	bcf	status,0,c
 10339  001FF4  376F               	rlcf	___ftdiv@f1& (0+255),f,b
 10340  001FF6  3770               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 10341  001FF8  3771               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10342                           
 10343                           ; BSR set to: 1
 10344  001FFA  0101               	movlb	1	; () banked
 10345  001FFC  2F78               	decfsz	___ftdiv@cntr& (0+255),f,b
 10346  001FFE  D7D7               	goto	l7354
 10347                           
 10348                           ; BSR set to: 1
 10349                           
 10350                           ; BSR set to: 1
 10351  002000  C179  F0C7         	movff	___ftdiv@f3,___ftpack@arg
 10352  002004  C17A  F0C8         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10353  002008  C17B  F0C9         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10354  00200C  C17C  F0CA         	movff	___ftdiv@exp,___ftpack@exp
 10355  002010  C17D  F0CB         	movff	___ftdiv@sign,___ftpack@sign
 10356  002014  EC76  F012         	call	___ftpack	;wreg free
 10357  002018  C0C7  F16F         	movff	?___ftpack,?___ftdiv
 10358  00201C  C0C8  F170         	movff	?___ftpack+1,?___ftdiv+1
 10359  002020  C0C9  F171         	movff	?___ftpack+2,?___ftdiv+2
 10360  002024  0012               	return	
 10361  002026                     __end_of___ftdiv:
 10362                           	opt stack 0
 10363                           tblptru	equ	0xFF8
 10364                           tblptrh	equ	0xFF7
 10365                           tblptrl	equ	0xFF6
 10366                           tablat	equ	0xFF5
 10367                           prodh	equ	0xFF4
 10368                           prodl	equ	0xFF3
 10369                           intcon	equ	0xFF2
 10370                           indf0	equ	0xFEF
 10371                           postinc0	equ	0xFEE
 10372                           fsr0h	equ	0xFEA
 10373                           fsr0l	equ	0xFE9
 10374                           wreg	equ	0xFE8
 10375                           indf1	equ	0xFE7
 10376                           postdec1	equ	0xFE5
 10377                           fsr1h	equ	0xFE2
 10378                           fsr1l	equ	0xFE1
 10379                           indf2	equ	0xFDF
 10380                           postinc2	equ	0xFDE
 10381                           postdec2	equ	0xFDD
 10382                           plusw2	equ	0xFDB
 10383                           fsr2h	equ	0xFDA
 10384                           fsr2l	equ	0xFD9
 10385                           status	equ	0xFD8
 10386                           
 10387 ;; *************** function ___awtoft *****************
 10388 ;; Defined at:
 10389 ;;		line 32 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\awtoft.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  c               2   25[BANK0 ] int 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  sign            1   28[BANK0 ] unsigned char 
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  3   25[BANK0 ] float 
 10396 ;; Registers used:
 10397 ;;		wreg, status,2, status,0, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10403 ;;      Params:         0       3       0       0       0       0       0       0       0
 10404 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10406 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10407 ;;Total ram usage:        4 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   13
 10410 ;; This function calls:
 10411 ;;		___ftpack
 10412 ;; This function is called by:
 10413 ;;		_V_Eval
 10414 ;;		_CalcPI
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text41
 10419  003CE8                     __ptext41:
 10420                           	opt stack 0
 10421  003CE8                     ___awtoft:
 10422                           	opt stack 14
 10423                           
 10424                           ;incstack = 0
 10425  003CE8  0E00               	movlw	0
 10426  003CEA  0100               	movlb	0	; () banked
 10427  003CEC  6FD2               	movwf	___awtoft@sign& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430  003CEE  0100               	movlb	0	; () banked
 10431  003CF0  AFD0               	btfss	(___awtoft@c+1)& (0+255),7,b
 10432  003CF2  D008               	goto	l7424
 10433                           
 10434                           ; BSR set to: 0
 10435  003CF4  0100               	movlb	0	; () banked
 10436  003CF6  6DCF               	negf	___awtoft@c& (0+255),b
 10437  003CF8  1FD0               	comf	(___awtoft@c+1)& (0+255),f,b
 10438  003CFA  B0D8               	btfsc	status,0,c
 10439  003CFC  2BD0               	incf	(___awtoft@c+1)& (0+255),f,b
 10440                           
 10441                           ; BSR set to: 0
 10442  003CFE  0E01               	movlw	1
 10443  003D00  0100               	movlb	0	; () banked
 10444  003D02  6FD2               	movwf	___awtoft@sign& (0+255),b
 10445  003D04                     l7424:
 10446                           
 10447                           ; BSR set to: 0
 10448  003D04  C0CF  F0C7         	movff	___awtoft@c,___ftpack@arg
 10449  003D08  C0D0  F0C8         	movff	___awtoft@c+1,___ftpack@arg+1
 10450  003D0C  0100               	movlb	0	; () banked
 10451  003D0E  6BC9               	clrf	(___ftpack@arg+2)& (0+255),b
 10452  003D10  0E8E               	movlw	142
 10453  003D12  0100               	movlb	0	; () banked
 10454  003D14  6FCA               	movwf	___ftpack@exp& (0+255),b
 10455  003D16  C0D2  F0CB         	movff	___awtoft@sign,___ftpack@sign
 10456  003D1A  EC76  F012         	call	___ftpack	;wreg free
 10457  003D1E  C0C7  F0CF         	movff	?___ftpack,?___awtoft
 10458  003D22  C0C8  F0D0         	movff	?___ftpack+1,?___awtoft+1
 10459  003D26  C0C9  F0D1         	movff	?___ftpack+2,?___awtoft+2
 10460  003D2A  0012               	return	
 10461  003D2C                     __end_of___awtoft:
 10462                           	opt stack 0
 10463                           tblptru	equ	0xFF8
 10464                           tblptrh	equ	0xFF7
 10465                           tblptrl	equ	0xFF6
 10466                           tablat	equ	0xFF5
 10467                           prodh	equ	0xFF4
 10468                           prodl	equ	0xFF3
 10469                           intcon	equ	0xFF2
 10470                           indf0	equ	0xFEF
 10471                           postinc0	equ	0xFEE
 10472                           fsr0h	equ	0xFEA
 10473                           fsr0l	equ	0xFE9
 10474                           wreg	equ	0xFE8
 10475                           indf1	equ	0xFE7
 10476                           postdec1	equ	0xFE5
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           postdec2	equ	0xFDD
 10482                           plusw2	equ	0xFDB
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487 ;; *************** function ___ftpack *****************
 10488 ;; Defined at:
 10489 ;;		line 62 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\float.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;  arg             3   17[BANK0 ] unsigned um
 10492 ;;  exp             1   20[BANK0 ] unsigned char 
 10493 ;;  sign            1   21[BANK0 ] unsigned char 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  3   17[BANK0 ] float 
 10498 ;; Registers used:
 10499 ;;		wreg, status,2, status,0
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10505 ;;      Params:         0       5       0       0       0       0       0       0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10507 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10508 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10509 ;;Total ram usage:        8 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:   12
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		___awtoft
 10516 ;;		___ftadd
 10517 ;;		___ftdiv
 10518 ;;		___ftmul
 10519 ;;		___lwtoft
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text42
 10524  0024EC                     __ptext42:
 10525                           	opt stack 0
 10526  0024EC                     ___ftpack:
 10527                           	opt stack 15
 10528                           
 10529                           ;incstack = 0
 10530  0024EC  0100               	movlb	0	; () banked
 10531  0024EE  51CA               	movf	___ftpack@exp& (0+255),w,b
 10532  0024F0  0100               	movlb	0	; () banked
 10533  0024F2  B4D8               	btfsc	status,2,c
 10534  0024F4  D008               	goto	l6944
 10535                           
 10536                           ; BSR set to: 0
 10537  0024F6  0100               	movlb	0	; () banked
 10538  0024F8  51C7               	movf	___ftpack@arg& (0+255),w,b
 10539  0024FA  0100               	movlb	0	; () banked
 10540  0024FC  11C8               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10541  0024FE  0100               	movlb	0	; () banked
 10542  002500  11C9               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10543  002502  A4D8               	btfss	status,2,c
 10544  002504  D011               	goto	l6950
 10545  002506                     l6944:
 10546                           
 10547                           ; BSR set to: 0
 10548  002506  0E00               	movlw	0
 10549  002508  0100               	movlb	0	; () banked
 10550  00250A  6FC7               	movwf	?___ftpack& (0+255),b
 10551  00250C  0E00               	movlw	0
 10552  00250E  0100               	movlb	0	; () banked
 10553  002510  6FC8               	movwf	(?___ftpack+1)& (0+255),b
 10554  002512  0E00               	movlw	0
 10555  002514  0100               	movlb	0	; () banked
 10556  002516  6FC9               	movwf	(?___ftpack+2)& (0+255),b
 10557                           
 10558                           ; BSR set to: 0
 10559  002518  0012               	return	
 10560  00251A                     l6948:
 10561                           
 10562                           ; BSR set to: 0
 10563  00251A  0100               	movlb	0	; () banked
 10564  00251C  2BCA               	incf	___ftpack@exp& (0+255),f,b
 10565  00251E  0100               	movlb	0	; () banked
 10566  002520  90D8               	bcf	status,0,c
 10567  002522  33C9               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10568  002524  33C8               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10569  002526  33C7               	rrcf	___ftpack@arg& (0+255),f,b
 10570  002528                     l6950:
 10571                           
 10572                           ; BSR set to: 0
 10573  002528  0E00               	movlw	0
 10574  00252A  0100               	movlb	0	; () banked
 10575  00252C  15C7               	andwf	___ftpack@arg& (0+255),w,b
 10576  00252E  0100               	movlb	0	; () banked
 10577  002530  6FCC               	movwf	??___ftpack& (0+255),b
 10578  002532  0E00               	movlw	0
 10579  002534  0100               	movlb	0	; () banked
 10580  002536  15C8               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10581  002538  0100               	movlb	0	; () banked
 10582  00253A  6FCD               	movwf	(??___ftpack+1)& (0+255),b
 10583  00253C  0EFE               	movlw	254
 10584  00253E  0100               	movlb	0	; () banked
 10585  002540  15C9               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10586  002542  0100               	movlb	0	; () banked
 10587  002544  6FCE               	movwf	(??___ftpack+2)& (0+255),b
 10588  002546  0100               	movlb	0	; () banked
 10589  002548  51CC               	movf	??___ftpack& (0+255),w,b
 10590  00254A  0100               	movlb	0	; () banked
 10591  00254C  11CD               	iorwf	(??___ftpack+1)& (0+255),w,b
 10592  00254E  0100               	movlb	0	; () banked
 10593  002550  11CE               	iorwf	(??___ftpack+2)& (0+255),w,b
 10594  002552  B4D8               	btfsc	status,2,c
 10595  002554  D011               	goto	l6956
 10596  002556  D7E1               	goto	l6948
 10597  002558                     l6952:
 10598                           
 10599                           ; BSR set to: 0
 10600  002558  0100               	movlb	0	; () banked
 10601  00255A  2BCA               	incf	___ftpack@exp& (0+255),f,b
 10602                           
 10603                           ; BSR set to: 0
 10604  00255C  0E01               	movlw	1
 10605  00255E  0100               	movlb	0	; () banked
 10606  002560  27C7               	addwf	___ftpack@arg& (0+255),f,b
 10607  002562  0E00               	movlw	0
 10608  002564  0100               	movlb	0	; () banked
 10609  002566  23C8               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10610  002568  0E00               	movlw	0
 10611  00256A  0100               	movlb	0	; () banked
 10612  00256C  23C9               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10613  00256E  0100               	movlb	0	; () banked
 10614  002570  90D8               	bcf	status,0,c
 10615  002572  33C9               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10616  002574  33C8               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10617  002576  33C7               	rrcf	___ftpack@arg& (0+255),f,b
 10618  002578                     l6956:
 10619                           
 10620                           ; BSR set to: 0
 10621  002578  0E00               	movlw	0
 10622  00257A  0100               	movlb	0	; () banked
 10623  00257C  15C7               	andwf	___ftpack@arg& (0+255),w,b
 10624  00257E  0100               	movlb	0	; () banked
 10625  002580  6FCC               	movwf	??___ftpack& (0+255),b
 10626  002582  0E00               	movlw	0
 10627  002584  0100               	movlb	0	; () banked
 10628  002586  15C8               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10629  002588  0100               	movlb	0	; () banked
 10630  00258A  6FCD               	movwf	(??___ftpack+1)& (0+255),b
 10631  00258C  0EFF               	movlw	255
 10632  00258E  0100               	movlb	0	; () banked
 10633  002590  15C9               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10634  002592  0100               	movlb	0	; () banked
 10635  002594  6FCE               	movwf	(??___ftpack+2)& (0+255),b
 10636  002596  0100               	movlb	0	; () banked
 10637  002598  51CC               	movf	??___ftpack& (0+255),w,b
 10638  00259A  0100               	movlb	0	; () banked
 10639  00259C  11CD               	iorwf	(??___ftpack+1)& (0+255),w,b
 10640  00259E  0100               	movlb	0	; () banked
 10641  0025A0  11CE               	iorwf	(??___ftpack+2)& (0+255),w,b
 10642  0025A2  B4D8               	btfsc	status,2,c
 10643  0025A4  D008               	goto	l6960
 10644  0025A6  D7D8               	goto	l6952
 10645  0025A8                     l6958:
 10646                           
 10647                           ; BSR set to: 0
 10648  0025A8  0100               	movlb	0	; () banked
 10649  0025AA  07CA               	decf	___ftpack@exp& (0+255),f,b
 10650  0025AC  0100               	movlb	0	; () banked
 10651  0025AE  90D8               	bcf	status,0,c
 10652  0025B0  37C7               	rlcf	___ftpack@arg& (0+255),f,b
 10653  0025B2  37C8               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10654  0025B4  37C9               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10655  0025B6                     l6960:
 10656                           
 10657                           ; BSR set to: 0
 10658  0025B6  0100               	movlb	0	; () banked
 10659  0025B8  BFC8               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10660  0025BA  D004               	goto	l1325
 10661                           
 10662                           ; BSR set to: 0
 10663  0025BC  0E02               	movlw	2
 10664  0025BE  0100               	movlb	0	; () banked
 10665  0025C0  61CA               	cpfslt	___ftpack@exp& (0+255),b
 10666  0025C2  D7F2               	goto	l6958
 10667  0025C4                     l1325:
 10668                           
 10669                           ; BSR set to: 0
 10670  0025C4  0100               	movlb	0	; () banked
 10671  0025C6  B1CA               	btfsc	___ftpack@exp& (0+255),0,b
 10672  0025C8  D002               	goto	l6966
 10673                           
 10674                           ; BSR set to: 0
 10675  0025CA  0100               	movlb	0	; () banked
 10676  0025CC  9FC8               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10677  0025CE                     l6966:
 10678                           
 10679                           ; BSR set to: 0
 10680  0025CE  0100               	movlb	0	; () banked
 10681  0025D0  90D8               	bcf	status,0,c
 10682  0025D2  33CA               	rrcf	___ftpack@exp& (0+255),f,b
 10683  0025D4  0100               	movlb	0	; () banked
 10684  0025D6  51CA               	movf	___ftpack@exp& (0+255),w,b
 10685  0025D8  0100               	movlb	0	; () banked
 10686  0025DA  13C9               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10687                           
 10688                           ; BSR set to: 0
 10689  0025DC  0100               	movlb	0	; () banked
 10690  0025DE  51CB               	movf	___ftpack@sign& (0+255),w,b
 10691  0025E0  0100               	movlb	0	; () banked
 10692  0025E2  B4D8               	btfsc	status,2,c
 10693  0025E4  D002               	goto	l6972
 10694                           
 10695                           ; BSR set to: 0
 10696  0025E6  0100               	movlb	0	; () banked
 10697  0025E8  8FC9               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10698  0025EA                     l6972:
 10699                           
 10700                           ; BSR set to: 0
 10701  0025EA  C0C7  F0C7         	movff	___ftpack@arg,?___ftpack
 10702  0025EE  C0C8  F0C8         	movff	___ftpack@arg+1,?___ftpack+1
 10703  0025F2  C0C9  F0C9         	movff	___ftpack@arg+2,?___ftpack+2
 10704  0025F6  0012               	return	
 10705  0025F8                     __end_of___ftpack:
 10706                           	opt stack 0
 10707                           tblptru	equ	0xFF8
 10708                           tblptrh	equ	0xFF7
 10709                           tblptrl	equ	0xFF6
 10710                           tablat	equ	0xFF5
 10711                           prodh	equ	0xFF4
 10712                           prodl	equ	0xFF3
 10713                           intcon	equ	0xFF2
 10714                           indf0	equ	0xFEF
 10715                           postinc0	equ	0xFEE
 10716                           fsr0h	equ	0xFEA
 10717                           fsr0l	equ	0xFE9
 10718                           wreg	equ	0xFE8
 10719                           indf1	equ	0xFE7
 10720                           postdec1	equ	0xFE5
 10721                           fsr1h	equ	0xFE2
 10722                           fsr1l	equ	0xFE1
 10723                           indf2	equ	0xFDF
 10724                           postinc2	equ	0xFDE
 10725                           postdec2	equ	0xFDD
 10726                           plusw2	equ	0xFDB
 10727                           fsr2h	equ	0xFDA
 10728                           fsr2l	equ	0xFD9
 10729                           status	equ	0xFD8
 10730                           
 10731 ;; *************** function _SelChanConvADC *****************
 10732 ;; Defined at:
 10733 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcselchconv.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  channel         1    wreg     unsigned char 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  channel         1   18[BANK0 ] unsigned char 
 10738 ;; Return value:  Size  Location     Type
 10739 ;;		None               void
 10740 ;; Registers used:
 10741 ;;		wreg, status,2, status,0
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0
 10748 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10749 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10750 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10751 ;;Total ram usage:        2 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:   12
 10754 ;; This function calls:
 10755 ;;		Nothing
 10756 ;; This function is called by:
 10757 ;;		_V_Eval
 10758 ;; This function uses a non-reentrant model
 10759 ;;
 10760                           
 10761                           	psect	text43
 10762  003FDA                     __ptext43:
 10763                           	opt stack 0
 10764  003FDA                     _SelChanConvADC:
 10765                           	opt stack 15
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;incstack = 0
 10769                           ;SelChanConvADC@channel stored from wreg
 10770  003FDA  0100               	movlb	0	; () banked
 10771  003FDC  6FC8               	movwf	SelChanConvADC@channel& (0+255),b
 10772  003FDE  C0C8  F0C7         	movff	SelChanConvADC@channel,??_SelChanConvADC
 10773  003FE2  0100               	movlb	0	; () banked
 10774  003FE4  90D8               	bcf	status,0,c
 10775  003FE6  33C7               	rrcf	??_SelChanConvADC& (0+255),f,b
 10776  003FE8  0E3C               	movlw	60
 10777  003FEA  0100               	movlb	0	; () banked
 10778  003FEC  17C7               	andwf	??_SelChanConvADC& (0+255),f,b
 10779  003FEE  50C2               	movf	4034,w,c	;volatile
 10780  003FF0  0BC3               	andlw	195
 10781  003FF2  0100               	movlb	0	; () banked
 10782  003FF4  11C7               	iorwf	??_SelChanConvADC& (0+255),w,b
 10783  003FF6  6EC2               	movwf	4034,c	;volatile
 10784                           
 10785                           ; BSR set to: 0
 10786  003FF8  82C2               	bsf	4034,1,c	;volatile
 10787                           
 10788                           ; BSR set to: 0
 10789  003FFA  0012               	return		;funcret
 10790  003FFC                     __end_of_SelChanConvADC:
 10791                           	opt stack 0
 10792                           tblptru	equ	0xFF8
 10793                           tblptrh	equ	0xFF7
 10794                           tblptrl	equ	0xFF6
 10795                           tablat	equ	0xFF5
 10796                           prodh	equ	0xFF4
 10797                           prodl	equ	0xFF3
 10798                           intcon	equ	0xFF2
 10799                           indf0	equ	0xFEF
 10800                           postinc0	equ	0xFEE
 10801                           fsr0h	equ	0xFEA
 10802                           fsr0l	equ	0xFE9
 10803                           wreg	equ	0xFE8
 10804                           indf1	equ	0xFE7
 10805                           postdec1	equ	0xFE5
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           indf2	equ	0xFDF
 10809                           postinc2	equ	0xFDE
 10810                           postdec2	equ	0xFDD
 10811                           plusw2	equ	0xFDB
 10812                           fsr2h	equ	0xFDA
 10813                           fsr2l	equ	0xFD9
 10814                           status	equ	0xFD8
 10815                           
 10816 ;; *************** function _ReadADC *****************
 10817 ;; Defined at:
 10818 ;;		line 24 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcread.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  2   17[BANK0 ] int 
 10825 ;; Registers used:
 10826 ;;		wreg, status,2
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10832 ;;      Params:         0       2       0       0       0       0       0       0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10834 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10835 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10836 ;;Total ram usage:        4 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:   12
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		_V_Eval
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text44
 10847  004034                     __ptext44:
 10848                           	opt stack 0
 10849  004034                     _ReadADC:
 10850                           	opt stack 15
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;incstack = 0
 10854  004034  50C4               	movf	4036,w,c	;volatile
 10855  004036  0100               	movlb	0	; () banked
 10856  004038  6FC9               	movwf	??_ReadADC& (0+255),b
 10857  00403A  50C3               	movf	4035,w,c	;volatile
 10858  00403C  0100               	movlb	0	; () banked
 10859  00403E  6FC7               	movwf	?_ReadADC& (0+255),b
 10860  004040  C0C9  F0C8         	movff	??_ReadADC,?_ReadADC+1
 10861  004044  0012               	return	
 10862  004046                     __end_of_ReadADC:
 10863                           	opt stack 0
 10864                           tblptru	equ	0xFF8
 10865                           tblptrh	equ	0xFF7
 10866                           tblptrl	equ	0xFF6
 10867                           tablat	equ	0xFF5
 10868                           prodh	equ	0xFF4
 10869                           prodl	equ	0xFF3
 10870                           intcon	equ	0xFF2
 10871                           indf0	equ	0xFEF
 10872                           postinc0	equ	0xFEE
 10873                           fsr0h	equ	0xFEA
 10874                           fsr0l	equ	0xFE9
 10875                           wreg	equ	0xFE8
 10876                           indf1	equ	0xFE7
 10877                           postdec1	equ	0xFE5
 10878                           fsr1h	equ	0xFE2
 10879                           fsr1l	equ	0xFE1
 10880                           indf2	equ	0xFDF
 10881                           postinc2	equ	0xFDE
 10882                           postdec2	equ	0xFDD
 10883                           plusw2	equ	0xFDB
 10884                           fsr2h	equ	0xFDA
 10885                           fsr2l	equ	0xFD9
 10886                           status	equ	0xFD8
 10887                           
 10888 ;; *************** function _BusyADC *****************
 10889 ;; Defined at:
 10890 ;;		line 26 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcbusy.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;		None
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1    wreg      unsigned char 
 10897 ;; Registers used:
 10898 ;;		wreg
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10904 ;;      Params:         0       0       0       0       0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10907 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10908 ;;Total ram usage:        0 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:   12
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_V_Eval
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           	psect	text45
 10919  004086                     __ptext45:
 10920                           	opt stack 0
 10921  004086                     _BusyADC:
 10922                           	opt stack 15
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;incstack = 0
 10926  004086  A2C2               	btfss	4034,1,c	;volatile
 10927  004088  D002               	goto	u6840
 10928  00408A  0E01               	movlw	1
 10929  00408C  0012               	return	
 10930  00408E                     u6840:
 10931  00408E  0E00               	movlw	0
 10932  004090  0012               	return	
 10933  004092                     __end_of_BusyADC:
 10934                           	opt stack 0
 10935                           tblptru	equ	0xFF8
 10936                           tblptrh	equ	0xFF7
 10937                           tblptrl	equ	0xFF6
 10938                           tablat	equ	0xFF5
 10939                           prodh	equ	0xFF4
 10940                           prodl	equ	0xFF3
 10941                           intcon	equ	0xFF2
 10942                           indf0	equ	0xFEF
 10943                           postinc0	equ	0xFEE
 10944                           fsr0h	equ	0xFEA
 10945                           fsr0l	equ	0xFE9
 10946                           wreg	equ	0xFE8
 10947                           indf1	equ	0xFE7
 10948                           postdec1	equ	0xFE5
 10949                           fsr1h	equ	0xFE2
 10950                           fsr1l	equ	0xFE1
 10951                           indf2	equ	0xFDF
 10952                           postinc2	equ	0xFDE
 10953                           postdec2	equ	0xFDD
 10954                           plusw2	equ	0xFDB
 10955                           fsr2h	equ	0xFDA
 10956                           fsr2l	equ	0xFD9
 10957                           status	equ	0xFD8
 10958                           
 10959 ;; *************** function _APP_USB_send *****************
 10960 ;; Defined at:
 10961 ;;		line 100 in file "app_custom_cdc.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  format          2   49[BANK0 ] PTR const unsigned char 
 10964 ;;		 -> STR_30(33), STR_1(3), 
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  args            2    0[BANK1 ] PTR void [1]
 10967 ;;		 -> ?_APP_USB_send(0), 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;		None               void
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10977 ;;      Params:         0       7       0       0       0       0       0       0       0
 10978 ;;      Locals:         0       0       2       0       0       0       0       0       0
 10979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10980 ;;      Totals:         0       7       2       0       0       0       0       0       0
 10981 ;;Total ram usage:        9 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:   14
 10984 ;; This function calls:
 10985 ;;		_putUSBUSART
 10986 ;;		_sprintf
 10987 ;;		_strlen
 10988 ;; This function is called by:
 10989 ;;		_APP_CustomCDCTasks
 10990 ;;		_check_Precondition
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text46
 10995  003A66                     __ptext46:
 10996                           	opt stack 0
 10997  003A66                     _APP_USB_send:
 10998                           	opt stack 14
 10999                           
 11000                           ;app_custom_cdc.c: 102: va_list args;
 11001                           ;app_custom_cdc.c: 103: *args = __va_start();
 11002                           
 11003                           ;incstack = 0
 11004  003A66  0EE9               	movlw	low (?_APP_USB_send+2)
 11005  003A68  0101               	movlb	1	; () banked
 11006  003A6A  6F6F               	movwf	APP_USB_send@args& (0+255),b
 11007  003A6C  0E00               	movlw	high (?_APP_USB_send+2)
 11008  003A6E  0101               	movlb	1	; () banked
 11009  003A70  6F70               	movwf	(APP_USB_send@args+1)& (0+255),b
 11010                           
 11011                           ; BSR set to: 1
 11012                           ;app_custom_cdc.c: 104: sprintf(usbInBuffer,format,args);
 11013  003A72  0E40               	movlw	low _usbInBuffer
 11014  003A74  0100               	movlb	0	; () banked
 11015  003A76  6FCE               	movwf	sprintf@sp& (0+255),b
 11016  003A78  0E02               	movlw	high _usbInBuffer
 11017  003A7A  0100               	movlb	0	; () banked
 11018  003A7C  6FCF               	movwf	(sprintf@sp+1)& (0+255),b
 11019  003A7E  C0E7  F0D0         	movff	APP_USB_send@format,sprintf@f
 11020  003A82  C0E8  F0D1         	movff	APP_USB_send@format+1,sprintf@f+1
 11021  003A86  0E6F               	movlw	low APP_USB_send@args
 11022  003A88  0100               	movlb	0	; () banked
 11023  003A8A  6FD2               	movwf	(?_sprintf+4)& (0+255),b
 11024  003A8C  0E01               	movlw	high APP_USB_send@args
 11025  003A8E  0100               	movlb	0	; () banked
 11026  003A90  6FD3               	movwf	(?_sprintf+5)& (0+255),b
 11027  003A92  EC4E  F004         	call	_sprintf	;wreg free
 11028                           
 11029                           ;app_custom_cdc.c: 105: if (( USBDeviceState < CONFIGURED_STATE ) || ( UCONbits.SUSPND =
      +                          = 1 ))
 11030  003A96  0E1F               	movlw	31
 11031  003A98  0100               	movlb	0	; () banked
 11032  003A9A  659A               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 11033  003A9C  0012               	return	
 11034                           
 11035                           ; BSR set to: 0
 11036  003A9E  B26D               	btfsc	3949,1,c	;volatile
 11037  003AA0  0012               	return	
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;app_custom_cdc.c: 109: else
 11041                           ;app_custom_cdc.c: 110: {
 11042                           ;app_custom_cdc.c: 111: if ((cdc_trf_state == 0))
 11043                           
 11044                           ; BSR set to: 0
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;app_custom_cdc.c: 108: }
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;app_custom_cdc.c: 106: {
 11051                           ;app_custom_cdc.c: 107: return;
 11052  003AA2  0100               	movlb	0	; () banked
 11053  003AA4  519D               	movf	_cdc_trf_state& (0+255),w,b
 11054  003AA6  A4D8               	btfss	status,2,c
 11055  003AA8  0012               	return	
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;app_custom_cdc.c: 112: {
 11059                           ;app_custom_cdc.c: 113: putUSBUSART(usbInBuffer,strlen(usbInBuffer));
 11060  003AAA  0E40               	movlw	low _usbInBuffer
 11061  003AAC  0100               	movlb	0	; () banked
 11062  003AAE  6FCD               	movwf	putUSBUSART@data& (0+255),b
 11063  003AB0  0E02               	movlw	high _usbInBuffer
 11064  003AB2  0100               	movlb	0	; () banked
 11065  003AB4  6FCE               	movwf	(putUSBUSART@data+1)& (0+255),b
 11066  003AB6  0E40               	movlw	low _usbInBuffer
 11067  003AB8  0100               	movlb	0	; () banked
 11068  003ABA  6FC7               	movwf	strlen@s& (0+255),b
 11069  003ABC  0E02               	movlw	high _usbInBuffer
 11070  003ABE  0100               	movlb	0	; () banked
 11071  003AC0  6FC8               	movwf	(strlen@s+1)& (0+255),b
 11072  003AC2  EC4F  F01E         	call	_strlen	;wreg free
 11073  003AC6  0100               	movlb	0	; () banked
 11074  003AC8  51C7               	movf	?_strlen& (0+255),w,b
 11075  003ACA  0100               	movlb	0	; () banked
 11076  003ACC  6FCF               	movwf	putUSBUSART@length& (0+255),b
 11077  003ACE  ECDA  F01F         	call	_putUSBUSART	;wreg free
 11078  003AD2  0012               	return	
 11079  003AD4                     __end_of_APP_USB_send:
 11080                           	opt stack 0
 11081                           tblptru	equ	0xFF8
 11082                           tblptrh	equ	0xFF7
 11083                           tblptrl	equ	0xFF6
 11084                           tablat	equ	0xFF5
 11085                           prodh	equ	0xFF4
 11086                           prodl	equ	0xFF3
 11087                           intcon	equ	0xFF2
 11088                           indf0	equ	0xFEF
 11089                           postinc0	equ	0xFEE
 11090                           fsr0h	equ	0xFEA
 11091                           fsr0l	equ	0xFE9
 11092                           wreg	equ	0xFE8
 11093                           indf1	equ	0xFE7
 11094                           postdec1	equ	0xFE5
 11095                           fsr1h	equ	0xFE2
 11096                           fsr1l	equ	0xFE1
 11097                           indf2	equ	0xFDF
 11098                           postinc2	equ	0xFDE
 11099                           postdec2	equ	0xFDD
 11100                           plusw2	equ	0xFDB
 11101                           fsr2h	equ	0xFDA
 11102                           fsr2l	equ	0xFD9
 11103                           status	equ	0xFD8
 11104                           
 11105 ;; *************** function _strlen *****************
 11106 ;; Defined at:
 11107 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strlen.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  s               2   17[BANK0 ] PTR const unsigned char 
 11110 ;;		 -> usbInBuffer(64), 
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;  cp              2   21[BANK0 ] PTR const unsigned char 
 11113 ;;		 -> usbInBuffer(64), 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  2   17[BANK0 ] unsigned int 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11123 ;;      Params:         0       2       0       0       0       0       0       0       0
 11124 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11125 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11126 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11127 ;;Total ram usage:        6 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:   12
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_APP_USB_send
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text47
 11138  003C9E                     __ptext47:
 11139                           	opt stack 0
 11140  003C9E                     _strlen:
 11141                           	opt stack 15
 11142                           
 11143                           ;incstack = 0
 11144  003C9E  C0C7  F0CB         	movff	strlen@s,strlen@cp
 11145  003CA2  C0C8  F0CC         	movff	strlen@s+1,strlen@cp+1
 11146  003CA6  D003               	goto	l7638
 11147  003CA8                     l7636:
 11148  003CA8  0100               	movlb	0	; () banked
 11149  003CAA  4BCB               	infsnz	strlen@cp& (0+255),f,b
 11150  003CAC  2BCC               	incf	(strlen@cp+1)& (0+255),f,b
 11151  003CAE                     l7638:
 11152  003CAE  C0CB  FFD9         	movff	strlen@cp,fsr2l
 11153  003CB2  C0CC  FFDA         	movff	strlen@cp+1,fsr2h
 11154  003CB6  50DF               	movf	indf2,w,c
 11155  003CB8  A4D8               	btfss	status,2,c
 11156  003CBA  D7F6               	goto	l7636
 11157  003CBC  C0C7  F0C9         	movff	strlen@s,??_strlen
 11158  003CC0  C0C8  F0CA         	movff	strlen@s+1,??_strlen+1
 11159  003CC4  0100               	movlb	0	; () banked
 11160  003CC6  1FC9               	comf	??_strlen& (0+255),f,b
 11161  003CC8  1FCA               	comf	(??_strlen+1)& (0+255),f,b
 11162  003CCA  4BC9               	infsnz	??_strlen& (0+255),f,b
 11163  003CCC  2BCA               	incf	(??_strlen+1)& (0+255),f,b
 11164  003CCE  0100               	movlb	0	; () banked
 11165  003CD0  51CB               	movf	strlen@cp& (0+255),w,b
 11166  003CD2  0100               	movlb	0	; () banked
 11167  003CD4  25C9               	addwf	??_strlen& (0+255),w,b
 11168  003CD6  0100               	movlb	0	; () banked
 11169  003CD8  6FC7               	movwf	?_strlen& (0+255),b
 11170  003CDA  0100               	movlb	0	; () banked
 11171  003CDC  51CC               	movf	(strlen@cp+1)& (0+255),w,b
 11172  003CDE  0100               	movlb	0	; () banked
 11173  003CE0  21CA               	addwfc	(??_strlen+1)& (0+255),w,b
 11174  003CE2  0100               	movlb	0	; () banked
 11175  003CE4  6FC8               	movwf	(?_strlen+1)& (0+255),b
 11176  003CE6  0012               	return	
 11177  003CE8                     __end_of_strlen:
 11178                           	opt stack 0
 11179                           tblptru	equ	0xFF8
 11180                           tblptrh	equ	0xFF7
 11181                           tblptrl	equ	0xFF6
 11182                           tablat	equ	0xFF5
 11183                           prodh	equ	0xFF4
 11184                           prodl	equ	0xFF3
 11185                           intcon	equ	0xFF2
 11186                           indf0	equ	0xFEF
 11187                           postinc0	equ	0xFEE
 11188                           fsr0h	equ	0xFEA
 11189                           fsr0l	equ	0xFE9
 11190                           wreg	equ	0xFE8
 11191                           indf1	equ	0xFE7
 11192                           postdec1	equ	0xFE5
 11193                           fsr1h	equ	0xFE2
 11194                           fsr1l	equ	0xFE1
 11195                           indf2	equ	0xFDF
 11196                           postinc2	equ	0xFDE
 11197                           postdec2	equ	0xFDD
 11198                           plusw2	equ	0xFDB
 11199                           fsr2h	equ	0xFDA
 11200                           fsr2l	equ	0xFD9
 11201                           status	equ	0xFD8
 11202                           
 11203 ;; *************** function _sprintf *****************
 11204 ;; Defined at:
 11205 ;;		line 492 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\doprnt.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  sp              2   24[BANK0 ] PTR unsigned char 
 11208 ;;		 -> usbInBuffer(64), 
 11209 ;;  f               2   26[BANK0 ] PTR const unsigned char 
 11210 ;;		 -> STR_30(33), STR_1(3), 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  idx             1   34[BANK0 ] unsigned char 
 11213 ;;  tmpval          4    0        struct .
 11214 ;;  width           2   45[BANK0 ] int 
 11215 ;;  flag            2   43[BANK0 ] unsigned short 
 11216 ;;  len             2   41[BANK0 ] unsigned int 
 11217 ;;  val             2   39[BANK0 ] unsigned int 
 11218 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
 11219 ;;		 -> sprintf@c(1), 
 11220 ;;  ap              2   35[BANK0 ] PTR void [1]
 11221 ;;		 -> ?_sprintf(2), 
 11222 ;;  c               1   48[BANK0 ] char 
 11223 ;;  prec            1   47[BANK0 ] char 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  2   24[BANK0 ] int 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11233 ;;      Params:         0       6       0       0       0       0       0       0       0
 11234 ;;      Locals:         0      15       0       0       0       0       0       0       0
 11235 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11236 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11237 ;;Total ram usage:       25 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:   13
 11240 ;; This function calls:
 11241 ;;		___lwdiv
 11242 ;;		___wmul
 11243 ;;		_isdigit
 11244 ;; This function is called by:
 11245 ;;		_APP_USB_send
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text48
 11250  00089C                     __ptext48:
 11251                           	opt stack 0
 11252  00089C                     _sprintf:
 11253                           	opt stack 14
 11254                           
 11255                           ;doprnt.c: 494: va_list ap;
 11256                           ;doprnt.c: 499: signed char c;
 11257                           ;doprnt.c: 501: int width;
 11258                           ;doprnt.c: 506: signed char prec;
 11259                           ;doprnt.c: 508: unsigned short flag;
 11260                           ;doprnt.c: 523: union {
 11261                           ;doprnt.c: 524: unsigned long vd;
 11262                           ;doprnt.c: 525: double integ;
 11263                           ;doprnt.c: 526: } tmpval;
 11264                           ;doprnt.c: 528: unsigned int val;
 11265                           ;doprnt.c: 529: unsigned len;
 11266                           ;doprnt.c: 530: const char * cp;
 11267                           ;doprnt.c: 533: *ap = __va_start();
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;incstack = 0
 11271  00089C  0ED2               	movlw	low (?_sprintf+4)
 11272  00089E  0100               	movlb	0	; () banked
 11273  0008A0  6FD9               	movwf	sprintf@ap& (0+255),b
 11274  0008A2  0E00               	movlw	high (?_sprintf+4)
 11275  0008A4  0100               	movlb	0	; () banked
 11276  0008A6  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
 11277                           
 11278                           ;doprnt.c: 536: while(c = *f++) {
 11279  0008A8  D232               	goto	l7628
 11280  0008AA                     l7474:
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;doprnt.c: 538: if(c != '%')
 11284  0008AA  0E25               	movlw	37
 11285  0008AC  0100               	movlb	0	; () banked
 11286  0008AE  19E6               	xorwf	sprintf@c& (0+255),w,b
 11287  0008B0  B4D8               	btfsc	status,2,c
 11288  0008B2  D00A               	goto	l7480
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;doprnt.c: 540: {
 11292                           ;doprnt.c: 541: ((*sp++ = (c)));
 11293  0008B4  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 11294  0008B8  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 11295  0008BC  C0E6  FFDF         	movff	sprintf@c,indf2
 11296                           
 11297                           ; BSR set to: 0
 11298  0008C0  0100               	movlb	0	; () banked
 11299  0008C2  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 11300  0008C4  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 11301                           
 11302                           ;doprnt.c: 542: continue;
 11303  0008C6  D223               	goto	l7628
 11304  0008C8                     l7480:
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;doprnt.c: 543: }
 11308                           ;doprnt.c: 546: width = 0;
 11309  0008C8  0E00               	movlw	0
 11310  0008CA  0100               	movlb	0	; () banked
 11311  0008CC  6FE4               	movwf	(sprintf@width+1)& (0+255),b
 11312  0008CE  0E00               	movlw	0
 11313  0008D0  6FE3               	movwf	sprintf@width& (0+255),b
 11314                           
 11315                           ;doprnt.c: 548: flag = 0;
 11316  0008D2  0E00               	movlw	0
 11317  0008D4  0100               	movlb	0	; () banked
 11318  0008D6  6FE2               	movwf	(sprintf@flag+1)& (0+255),b
 11319  0008D8  0E00               	movlw	0
 11320  0008DA  6FE1               	movwf	sprintf@flag& (0+255),b
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;doprnt.c: 551: switch(*f) {
 11324                           
 11325                           ;doprnt.c: 550: for(;;) {
 11326  0008DC  D005               	goto	l7486
 11327  0008DE                     l7482:
 11328                           
 11329                           ;doprnt.c: 554: flag |= 0x08;
 11330  0008DE  0100               	movlb	0	; () banked
 11331  0008E0  87E1               	bsf	sprintf@flag& (0+255),3,b
 11332                           
 11333                           ;doprnt.c: 555: f++;
 11334  0008E2  0100               	movlb	0	; () banked
 11335  0008E4  4BD0               	infsnz	sprintf@f& (0+255),f,b
 11336  0008E6  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 11337  0008E8                     l7486:
 11338  0008E8  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11339  0008EC  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11340  0008F0                     	if	0	;tblptru may be non-zero
 11341  0008F0                     	endif
 11342  0008F0                     	if	0	;tblptru may be non-zero
 11343  0008F0                     	endif
 11344  0008F0  0008               	tblrd		*
 11345  0008F2  50F5               	movf	tablat,w,c
 11346                           
 11347                           ; Switch size 1, requested type "space"
 11348                           ; Number of cases is 1, Range of values is 45 to 45
 11349                           ; switch strategies available:
 11350                           ; Name         Instructions Cycles
 11351                           ; simple_byte            4     3 (average)
 11352                           ;	Chosen strategy is simple_byte
 11353  0008F4  0A2D               	xorlw	45	; case 45
 11354  0008F6  B4D8               	btfsc	status,2,c
 11355  0008F8  D7F2               	goto	l7482
 11356                           
 11357                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11358                           
 11359                           ;doprnt.c: 586: }
 11360                           
 11361                           ;doprnt.c: 585: break;
 11362  0008FA  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11363  0008FE  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11364  000902                     	if	0	;tblptru may be non-zero
 11365  000902                     	endif
 11366  000902                     	if	0	;tblptru may be non-zero
 11367  000902                     	endif
 11368  000902  0008               	tblrd		*
 11369  000904  50F5               	movf	tablat,w,c
 11370  000906  ECB1  F01F         	call	_isdigit
 11371  00090A  A0D8               	btfss	status,0,c
 11372  00090C  D040               	goto	l7500
 11373                           
 11374                           ;doprnt.c: 598: width = 0;
 11375  00090E  0E00               	movlw	0
 11376  000910  0100               	movlb	0	; () banked
 11377  000912  6FE4               	movwf	(sprintf@width+1)& (0+255),b
 11378  000914  0E00               	movlw	0
 11379  000916  6FE3               	movwf	sprintf@width& (0+255),b
 11380  000918                     l7492:
 11381                           
 11382                           ;doprnt.c: 600: width *= 10;
 11383  000918  C0E3  F0C7         	movff	sprintf@width,___wmul@multiplier
 11384  00091C  C0E4  F0C8         	movff	sprintf@width+1,___wmul@multiplier+1
 11385  000920  0E00               	movlw	0
 11386  000922  0100               	movlb	0	; () banked
 11387  000924  6FCA               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11388  000926  0E0A               	movlw	10
 11389  000928  6FC9               	movwf	___wmul@multiplicand& (0+255),b
 11390  00092A  ECD5  F01E         	call	___wmul	;wreg free
 11391  00092E  C0C7  F0E3         	movff	?___wmul,sprintf@width
 11392  000932  C0C8  F0E4         	movff	?___wmul+1,sprintf@width+1
 11393                           
 11394                           ;doprnt.c: 601: width += *f++ - '0';
 11395  000936  0ED0               	movlw	208
 11396  000938  0100               	movlb	0	; () banked
 11397  00093A  6FD4               	movwf	??_sprintf& (0+255),b
 11398  00093C  0EFF               	movlw	255
 11399  00093E  0100               	movlb	0	; () banked
 11400  000940  6FD5               	movwf	(??_sprintf+1)& (0+255),b
 11401  000942  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11402  000946  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11403  00094A                     	if	0	;tblptru may be non-zero
 11404  00094A                     	endif
 11405  00094A                     	if	0	;tblptru may be non-zero
 11406  00094A                     	endif
 11407  00094A  0008               	tblrd		*
 11408  00094C  50F5               	movf	tablat,w,c
 11409  00094E  0100               	movlb	0	; () banked
 11410  000950  6FD6               	movwf	(??_sprintf+2)& (0+255),b
 11411  000952  6BD7               	clrf	(??_sprintf+3)& (0+255),b
 11412  000954  0100               	movlb	0	; () banked
 11413  000956  51D4               	movf	??_sprintf& (0+255),w,b
 11414  000958  0100               	movlb	0	; () banked
 11415  00095A  27D6               	addwf	(??_sprintf+2)& (0+255),f,b
 11416  00095C  0100               	movlb	0	; () banked
 11417  00095E  51D5               	movf	(??_sprintf+1)& (0+255),w,b
 11418  000960  0100               	movlb	0	; () banked
 11419  000962  23D7               	addwfc	(??_sprintf+3)& (0+255),f,b
 11420  000964  0100               	movlb	0	; () banked
 11421  000966  51D6               	movf	(??_sprintf+2)& (0+255),w,b
 11422  000968  0100               	movlb	0	; () banked
 11423  00096A  27E3               	addwf	sprintf@width& (0+255),f,b
 11424  00096C  0100               	movlb	0	; () banked
 11425  00096E  51D7               	movf	(??_sprintf+3)& (0+255),w,b
 11426  000970  0100               	movlb	0	; () banked
 11427  000972  23E4               	addwfc	(sprintf@width+1)& (0+255),f,b
 11428                           
 11429                           ; BSR set to: 0
 11430  000974  0100               	movlb	0	; () banked
 11431  000976  4BD0               	infsnz	sprintf@f& (0+255),f,b
 11432  000978  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11436  00097A  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11437  00097E  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11438  000982                     	if	0	;tblptru may be non-zero
 11439  000982                     	endif
 11440  000982                     	if	0	;tblptru may be non-zero
 11441  000982                     	endif
 11442  000982  0008               	tblrd		*
 11443  000984  50F5               	movf	tablat,w,c
 11444  000986  ECB1  F01F         	call	_isdigit
 11445  00098A  B0D8               	btfsc	status,0,c
 11446  00098C  D7C5               	goto	l7492
 11447  00098E                     l7500:
 11448                           
 11449                           ;doprnt.c: 608: }
 11450                           ;doprnt.c: 611: if(*f == '.') {
 11451  00098E  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11452  000992  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11453  000996                     	if	0	;tblptru may be non-zero
 11454  000996                     	endif
 11455  000996                     	if	0	;tblptru may be non-zero
 11456  000996                     	endif
 11457  000996  0008               	tblrd		*
 11458  000998  50F5               	movf	tablat,w,c
 11459  00099A  0A2E               	xorlw	46
 11460  00099C  A4D8               	btfss	status,2,c
 11461  00099E  D027               	goto	l7512
 11462                           
 11463                           ;doprnt.c: 612: flag |= 0x4000;
 11464  0009A0  0100               	movlb	0	; () banked
 11465  0009A2  8DE2               	bsf	(sprintf@flag+1)& (0+255),6,b
 11466                           
 11467                           ;doprnt.c: 613: f++;
 11468  0009A4  0100               	movlb	0	; () banked
 11469  0009A6  4BD0               	infsnz	sprintf@f& (0+255),f,b
 11470  0009A8  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;doprnt.c: 620: {
 11474                           ;doprnt.c: 621: prec = 0;
 11475  0009AA  0E00               	movlw	0
 11476  0009AC  0100               	movlb	0	; () banked
 11477  0009AE  6FE5               	movwf	sprintf@prec& (0+255),b
 11478                           
 11479                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 11480  0009B0  D013               	goto	l7510
 11481  0009B2                     l7506:
 11482                           
 11483                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 11484  0009B2  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11485  0009B6  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11486  0009BA                     	if	0	;tblptru may be non-zero
 11487  0009BA                     	endif
 11488  0009BA                     	if	0	;tblptru may be non-zero
 11489  0009BA                     	endif
 11490  0009BA  0008               	tblrd		*
 11491  0009BC  CFF5 F0D4          	movff	tablat,??_sprintf
 11492  0009C0  0100               	movlb	0	; () banked
 11493  0009C2  51E5               	movf	sprintf@prec& (0+255),w,b
 11494  0009C4  0D0A               	mullw	10
 11495  0009C6  50F3               	movf	prodl,w,c
 11496  0009C8  0100               	movlb	0	; () banked
 11497  0009CA  25D4               	addwf	??_sprintf& (0+255),w,b
 11498  0009CC  0FD0               	addlw	208
 11499  0009CE  0100               	movlb	0	; () banked
 11500  0009D0  6FE5               	movwf	sprintf@prec& (0+255),b
 11501                           
 11502                           ; BSR set to: 0
 11503  0009D2  0100               	movlb	0	; () banked
 11504  0009D4  4BD0               	infsnz	sprintf@f& (0+255),f,b
 11505  0009D6  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 11506  0009D8                     l7510:
 11507                           
 11508                           ; BSR set to: 0
 11509  0009D8  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11510  0009DC  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11511  0009E0                     	if	0	;tblptru may be non-zero
 11512  0009E0                     	endif
 11513  0009E0                     	if	0	;tblptru may be non-zero
 11514  0009E0                     	endif
 11515  0009E0  0008               	tblrd		*
 11516  0009E2  50F5               	movf	tablat,w,c
 11517  0009E4  ECB1  F01F         	call	_isdigit
 11518  0009E8  A0D8               	btfss	status,0,c
 11519  0009EA  D095               	goto	l7560
 11520  0009EC  D7E2               	goto	l7506
 11521  0009EE                     l7512:
 11522                           
 11523                           ;doprnt.c: 626: prec = 0;
 11524  0009EE  0E00               	movlw	0
 11525  0009F0  0100               	movlb	0	; () banked
 11526  0009F2  6FE5               	movwf	sprintf@prec& (0+255),b
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;doprnt.c: 630: }
 11530                           ;doprnt.c: 635: switch(c = *f++) {
 11531  0009F4  D090               	goto	l7560
 11532  0009F6                     l7514:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;doprnt.c: 707: flag |= 0x2000;
 11536  0009F6  0100               	movlb	0	; () banked
 11537  0009F8  8BE2               	bsf	(sprintf@flag+1)& (0+255),5,b
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;doprnt.c: 723: break;
 11541                           
 11542                           ;doprnt.c: 718: case 'x':
 11543  0009FA  D0A2               	goto	l7562
 11544  0009FC                     l7516:
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;doprnt.c: 753: if(prec && prec < len)
 11548  0009FC  0100               	movlb	0	; () banked
 11549  0009FE  51E5               	movf	sprintf@prec& (0+255),w,b
 11550  000A00  0100               	movlb	0	; () banked
 11551  000A02  B4D8               	btfsc	status,2,c
 11552  000A04  D017               	goto	l7522
 11553                           
 11554                           ; BSR set to: 0
 11555  000A06  C0E5  F0D4         	movff	sprintf@prec,??_sprintf
 11556  000A0A  0100               	movlb	0	; () banked
 11557  000A0C  6BD5               	clrf	(??_sprintf+1)& (0+255),b
 11558  000A0E  BFD4               	btfsc	??_sprintf& (0+255),7,b
 11559  000A10  07D5               	decf	(??_sprintf+1)& (0+255),f,b
 11560  000A12  0100               	movlb	0	; () banked
 11561  000A14  51DF               	movf	sprintf@len& (0+255),w,b
 11562  000A16  0100               	movlb	0	; () banked
 11563  000A18  5DD4               	subwf	??_sprintf& (0+255),w,b
 11564  000A1A  0100               	movlb	0	; () banked
 11565  000A1C  51E0               	movf	(sprintf@len+1)& (0+255),w,b
 11566  000A1E  0100               	movlb	0	; () banked
 11567  000A20  59D5               	subwfb	(??_sprintf+1)& (0+255),w,b
 11568  000A22  B0D8               	btfsc	status,0,c
 11569  000A24  D007               	goto	l7522
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;doprnt.c: 754: len = prec;
 11573  000A26  0100               	movlb	0	; () banked
 11574  000A28  51E5               	movf	sprintf@prec& (0+255),w,b
 11575  000A2A  0100               	movlb	0	; () banked
 11576  000A2C  6FDF               	movwf	sprintf@len& (0+255),b
 11577  000A2E  6BE0               	clrf	(sprintf@len+1)& (0+255),b
 11578  000A30  BFDF               	btfsc	sprintf@len& (0+255),7,b
 11579  000A32  07E0               	decf	(sprintf@len+1)& (0+255),f,b
 11580  000A34                     l7522:
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;doprnt.c: 757: if(width > len)
 11584  000A34  0100               	movlb	0	; () banked
 11585  000A36  51E3               	movf	sprintf@width& (0+255),w,b
 11586  000A38  0100               	movlb	0	; () banked
 11587  000A3A  5DDF               	subwf	sprintf@len& (0+255),w,b
 11588  000A3C  0100               	movlb	0	; () banked
 11589  000A3E  51E4               	movf	(sprintf@width+1)& (0+255),w,b
 11590  000A40  0100               	movlb	0	; () banked
 11591  000A42  59E0               	subwfb	(sprintf@len+1)& (0+255),w,b
 11592  000A44  B0D8               	btfsc	status,0,c
 11593  000A46  D009               	goto	l7526
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;doprnt.c: 758: width -= len;
 11597  000A48  0100               	movlb	0	; () banked
 11598  000A4A  51DF               	movf	sprintf@len& (0+255),w,b
 11599  000A4C  0100               	movlb	0	; () banked
 11600  000A4E  5FE3               	subwf	sprintf@width& (0+255),f,b
 11601  000A50  0100               	movlb	0	; () banked
 11602  000A52  51E0               	movf	(sprintf@len+1)& (0+255),w,b
 11603  000A54  0100               	movlb	0	; () banked
 11604  000A56  5BE4               	subwfb	(sprintf@width+1)& (0+255),f,b
 11605  000A58  D005               	goto	l7528
 11606  000A5A                     l7526:
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;doprnt.c: 759: else
 11610                           ;doprnt.c: 760: width = 0;
 11611  000A5A  0E00               	movlw	0
 11612  000A5C  0100               	movlb	0	; () banked
 11613  000A5E  6FE4               	movwf	(sprintf@width+1)& (0+255),b
 11614  000A60  0E00               	movlw	0
 11615  000A62  6FE3               	movwf	sprintf@width& (0+255),b
 11616  000A64                     l7528:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;doprnt.c: 762: if(!(flag & 0x08))
 11620  000A64  0100               	movlb	0	; () banked
 11621  000A66  A7E1               	btfss	sprintf@flag& (0+255),3,b
 11622  000A68  D00A               	goto	l7536
 11623  000A6A  D025               	goto	l7544
 11624  000A6C                     l7532:
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11628  000A6C  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 11629  000A70  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 11630  000A74  0E20               	movlw	32
 11631  000A76  6EDF               	movwf	indf2,c
 11632                           
 11633                           ; BSR set to: 0
 11634  000A78  0100               	movlb	0	; () banked
 11635  000A7A  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 11636  000A7C  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 11637  000A7E                     l7536:
 11638                           
 11639                           ; BSR set to: 0
 11640  000A7E  0100               	movlb	0	; () banked
 11641  000A80  07E3               	decf	sprintf@width& (0+255),f,b
 11642  000A82  A0D8               	btfss	status,0,c
 11643  000A84  07E4               	decf	(sprintf@width+1)& (0+255),f,b
 11644  000A86  0100               	movlb	0	; () banked
 11645  000A88  29E3               	incf	sprintf@width& (0+255),w,b
 11646  000A8A  E1F0               	bnz	l7532
 11647  000A8C  0100               	movlb	0	; () banked
 11648  000A8E  29E4               	incf	(sprintf@width+1)& (0+255),w,b
 11649  000A90  B4D8               	btfsc	status,2,c
 11650  000A92  D011               	goto	l7544
 11651  000A94  D7EB               	goto	l7532
 11652  000A96                     l7538:
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11656  000A96  C0DB  FFD9         	movff	sprintf@cp,fsr2l
 11657  000A9A  C0DC  FFDA         	movff	sprintf@cp+1,fsr2h
 11658  000A9E  C0CE  FFE1         	movff	sprintf@sp,fsr1l
 11659  000AA2  C0CF  FFE2         	movff	sprintf@sp+1,fsr1h
 11660  000AA6  CFDF FFE7          	movff	indf2,indf1
 11661                           
 11662                           ; BSR set to: 0
 11663  000AAA  0100               	movlb	0	; () banked
 11664  000AAC  4BDB               	infsnz	sprintf@cp& (0+255),f,b
 11665  000AAE  2BDC               	incf	(sprintf@cp+1)& (0+255),f,b
 11666                           
 11667                           ; BSR set to: 0
 11668  000AB0  0100               	movlb	0	; () banked
 11669  000AB2  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 11670  000AB4  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 11671  000AB6                     l7544:
 11672                           
 11673                           ; BSR set to: 0
 11674  000AB6  0100               	movlb	0	; () banked
 11675  000AB8  07DF               	decf	sprintf@len& (0+255),f,b
 11676  000ABA  A0D8               	btfss	status,0,c
 11677  000ABC  07E0               	decf	(sprintf@len+1)& (0+255),f,b
 11678  000ABE  0100               	movlb	0	; () banked
 11679  000AC0  29DF               	incf	sprintf@len& (0+255),w,b
 11680  000AC2  E1E9               	bnz	l7538
 11681  000AC4  0100               	movlb	0	; () banked
 11682  000AC6  29E0               	incf	(sprintf@len+1)& (0+255),w,b
 11683  000AC8  A4D8               	btfss	status,2,c
 11684  000ACA  D7E5               	goto	l7538
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;doprnt.c: 770: if(flag & 0x08)
 11688  000ACC  0100               	movlb	0	; () banked
 11689  000ACE  B7E1               	btfsc	sprintf@flag& (0+255),3,b
 11690  000AD0  D00A               	goto	l7552
 11691  000AD2  D11D               	goto	l7628
 11692  000AD4                     l7548:
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;doprnt.c: 772: ((*sp++ = (' ')));
 11696  000AD4  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 11697  000AD8  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 11698  000ADC  0E20               	movlw	32
 11699  000ADE  6EDF               	movwf	indf2,c
 11700                           
 11701                           ; BSR set to: 0
 11702  000AE0  0100               	movlb	0	; () banked
 11703  000AE2  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 11704  000AE4  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 11705  000AE6                     l7552:
 11706                           
 11707                           ; BSR set to: 0
 11708  000AE6  0100               	movlb	0	; () banked
 11709  000AE8  07E3               	decf	sprintf@width& (0+255),f,b
 11710  000AEA  A0D8               	btfss	status,0,c
 11711  000AEC  07E4               	decf	(sprintf@width+1)& (0+255),f,b
 11712  000AEE  0100               	movlb	0	; () banked
 11713  000AF0  29E3               	incf	sprintf@width& (0+255),w,b
 11714  000AF2  E1F0               	bnz	l7548
 11715  000AF4  0100               	movlb	0	; () banked
 11716  000AF6  29E4               	incf	(sprintf@width+1)& (0+255),w,b
 11717  000AF8  B4D8               	btfsc	status,2,c
 11718  000AFA  D109               	goto	l7628
 11719  000AFC  D7EB               	goto	l7548
 11720  000AFE                     l7554:
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;doprnt.c: 805: cp = (char *)&c;
 11724  000AFE  0EE6               	movlw	low sprintf@c
 11725  000B00  0100               	movlb	0	; () banked
 11726  000B02  6FDB               	movwf	sprintf@cp& (0+255),b
 11727  000B04  0E00               	movlw	high sprintf@c
 11728  000B06  0100               	movlb	0	; () banked
 11729  000B08  6FDC               	movwf	(sprintf@cp+1)& (0+255),b
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;doprnt.c: 806: len = 1;
 11733  000B0A  0E00               	movlw	0
 11734  000B0C  0100               	movlb	0	; () banked
 11735  000B0E  6FE0               	movwf	(sprintf@len+1)& (0+255),b
 11736  000B10  0E01               	movlw	1
 11737  000B12  6FDF               	movwf	sprintf@len& (0+255),b
 11738                           
 11739                           ;doprnt.c: 807: goto dostring;
 11740  000B14  D773               	goto	l7516
 11741  000B16                     l7560:
 11742  000B16  C0D0  FFF6         	movff	sprintf@f,tblptrl
 11743  000B1A  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 11744  000B1E  0100               	movlb	0	; () banked
 11745  000B20  4BD0               	infsnz	sprintf@f& (0+255),f,b
 11746  000B22  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 11747  000B24                     	if	0	;tblptru may be non-zero
 11748  000B24                     	endif
 11749  000B24                     	if	0	;tblptru may be non-zero
 11750  000B24                     	endif
 11751  000B24  0008               	tblrd		*
 11752  000B26  CFF5 F0E6          	movff	tablat,sprintf@c
 11753  000B2A  0100               	movlb	0	; () banked
 11754  000B2C  51E6               	movf	sprintf@c& (0+255),w,b
 11755                           
 11756                           ; Switch size 1, requested type "space"
 11757                           ; Number of cases is 3, Range of values is 0 to 120
 11758                           ; switch strategies available:
 11759                           ; Name         Instructions Cycles
 11760                           ; simple_byte           10     6 (average)
 11761                           ;	Chosen strategy is simple_byte
 11762  000B2E  0A00               	xorlw	0	; case 0
 11763  000B30  B4D8               	btfsc	status,2,c
 11764  000B32  D0FB               	goto	l7630
 11765  000B34  0A70               	xorlw	112	; case 112
 11766  000B36  B4D8               	btfsc	status,2,c
 11767  000B38  D75E               	goto	l7514
 11768  000B3A  0A08               	xorlw	8	; case 120
 11769  000B3C  A4D8               	btfss	status,2,c
 11770  000B3E  D7DF               	goto	l7554
 11771  000B40                     l7562:
 11772                           
 11773                           ; BSR set to: 0
 11774                           ;doprnt.c: 1273: {
 11775                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11776  000B40  C0D9  FFD9         	movff	sprintf@ap,fsr2l
 11777  000B44  C0DA  FFDA         	movff	sprintf@ap+1,fsr2h
 11778  000B48  CFDE F0DD          	movff	postinc2,sprintf@val
 11779  000B4C  CFDD F0DE          	movff	postdec2,sprintf@val+1
 11780                           
 11781                           ; BSR set to: 0
 11782  000B50  0E02               	movlw	2
 11783  000B52  0100               	movlb	0	; () banked
 11784  000B54  27D9               	addwf	sprintf@ap& (0+255),f,b
 11785  000B56  0E00               	movlw	0
 11786  000B58  23DA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;doprnt.c: 1287: }
 11790                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11791  000B5A  0100               	movlb	0	; () banked
 11792  000B5C  51E5               	movf	sprintf@prec& (0+255),w,b
 11793  000B5E  0100               	movlb	0	; () banked
 11794  000B60  A4D8               	btfss	status,2,c
 11795  000B62  D008               	goto	l7572
 11796                           
 11797                           ; BSR set to: 0
 11798  000B64  0100               	movlb	0	; () banked
 11799  000B66  51DD               	movf	sprintf@val& (0+255),w,b
 11800  000B68  0100               	movlb	0	; () banked
 11801  000B6A  11DE               	iorwf	(sprintf@val+1)& (0+255),w,b
 11802  000B6C  A4D8               	btfss	status,2,c
 11803  000B6E  D002               	goto	l7572
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;doprnt.c: 1291: prec++;
 11807  000B70  0100               	movlb	0	; () banked
 11808  000B72  2BE5               	incf	sprintf@prec& (0+255),f,b
 11809  000B74                     l7572:
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11813  000B74  0E01               	movlw	1
 11814  000B76  0100               	movlb	0	; () banked
 11815  000B78  6FE6               	movwf	sprintf@c& (0+255),b
 11816  000B7A                     l7574:
 11817                           
 11818                           ; BSR set to: 0
 11819  000B7A  0E04               	movlw	4
 11820  000B7C  0100               	movlb	0	; () banked
 11821  000B7E  19E6               	xorwf	sprintf@c& (0+255),w,b
 11822  000B80  B4D8               	btfsc	status,2,c
 11823  000B82  D016               	goto	l7586
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11827                           
 11828                           ; BSR set to: 0
 11829                           
 11830                           ; BSR set to: 0
 11831  000B84  0100               	movlb	0	; () banked
 11832  000B86  51E6               	movf	sprintf@c& (0+255),w,b
 11833  000B88  0D02               	mullw	2
 11834  000B8A  0E4A               	movlw	low _hexpowers
 11835  000B8C  24F3               	addwf	prodl,w,c
 11836  000B8E  6EF6               	movwf	tblptrl,c
 11837  000B90  0E7D               	movlw	high _hexpowers
 11838  000B92  20F4               	addwfc	prodh,w,c
 11839  000B94  6EF7               	movwf	tblptrh,c
 11840  000B96                     	if	0	;There are less than 3 active tblptr bytes
 11841  000B96                     	endif
 11842  000B96  0009               	tblrd		*+
 11843  000B98  50F5               	movf	tablat,w,c
 11844  000B9A  0100               	movlb	0	; () banked
 11845  000B9C  5DDD               	subwf	sprintf@val& (0+255),w,b
 11846  000B9E  0009               	tblrd		*+
 11847  000BA0  50F5               	movf	tablat,w,c
 11848  000BA2  0100               	movlb	0	; () banked
 11849  000BA4  59DE               	subwfb	(sprintf@val+1)& (0+255),w,b
 11850  000BA6  A0D8               	btfss	status,0,c
 11851  000BA8  D003               	goto	l7586
 11852                           
 11853                           ; BSR set to: 0
 11854                           
 11855                           ; BSR set to: 0
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;doprnt.c: 1318: break;
 11859  000BAA  0100               	movlb	0	; () banked
 11860  000BAC  2BE6               	incf	sprintf@c& (0+255),f,b
 11861  000BAE  D7E5               	goto	l7574
 11862  000BB0                     l7586:
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;doprnt.c: 1339: if(c < prec)
 11866  000BB0  0100               	movlb	0	; () banked
 11867  000BB2  51E6               	movf	sprintf@c& (0+255),w,b
 11868  000BB4  0A80               	xorlw	128
 11869  000BB6  0100               	movlb	0	; () banked
 11870  000BB8  6FD4               	movwf	??_sprintf& (0+255),b
 11871  000BBA  0100               	movlb	0	; () banked
 11872  000BBC  51E5               	movf	sprintf@prec& (0+255),w,b
 11873  000BBE  0A80               	xorlw	128
 11874  000BC0  0100               	movlb	0	; () banked
 11875  000BC2  5DD4               	subwf	??_sprintf& (0+255),w,b
 11876  000BC4  B0D8               	btfsc	status,0,c
 11877  000BC6  D003               	goto	l7590
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;doprnt.c: 1340: c = prec;
 11881  000BC8  C0E5  F0E6         	movff	sprintf@prec,sprintf@c
 11882  000BCC  D00D               	goto	l7594
 11883  000BCE                     l7590:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;doprnt.c: 1341: else if(prec < c)
 11887  000BCE  0100               	movlb	0	; () banked
 11888  000BD0  51E5               	movf	sprintf@prec& (0+255),w,b
 11889  000BD2  0A80               	xorlw	128
 11890  000BD4  0100               	movlb	0	; () banked
 11891  000BD6  6FD4               	movwf	??_sprintf& (0+255),b
 11892  000BD8  0100               	movlb	0	; () banked
 11893  000BDA  51E6               	movf	sprintf@c& (0+255),w,b
 11894  000BDC  0A80               	xorlw	128
 11895  000BDE  0100               	movlb	0	; () banked
 11896  000BE0  5DD4               	subwf	??_sprintf& (0+255),w,b
 11897  000BE2  A0D8               	btfss	status,0,c
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;doprnt.c: 1342: prec = c;
 11901  000BE4  C0E6  F0E5         	movff	sprintf@c,sprintf@prec
 11902  000BE8                     l7594:
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;doprnt.c: 1381: if(width > c)
 11906  000BE8  0E80               	movlw	128
 11907  000BEA  0100               	movlb	0	; () banked
 11908  000BEC  BFE6               	btfsc	sprintf@c& (0+255),7,b
 11909  000BEE  0E7F               	movlw	127
 11910  000BF0  0100               	movlb	0	; () banked
 11911  000BF2  6FD4               	movwf	??_sprintf& (0+255),b
 11912  000BF4  0100               	movlb	0	; () banked
 11913  000BF6  51E3               	movf	sprintf@width& (0+255),w,b
 11914  000BF8  0100               	movlb	0	; () banked
 11915  000BFA  5DE6               	subwf	sprintf@c& (0+255),w,b
 11916  000BFC  0100               	movlb	0	; () banked
 11917  000BFE  51E4               	movf	(sprintf@width+1)& (0+255),w,b
 11918  000C00  0A80               	xorlw	128
 11919  000C02  0100               	movlb	0	; () banked
 11920  000C04  59D4               	subwfb	??_sprintf& (0+255),w,b
 11921  000C06  B0D8               	btfsc	status,0,c
 11922  000C08  D00B               	goto	l7598
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;doprnt.c: 1382: width -= c;
 11926  000C0A  0100               	movlb	0	; () banked
 11927  000C0C  51E6               	movf	sprintf@c& (0+255),w,b
 11928  000C0E  0100               	movlb	0	; () banked
 11929  000C10  5FE3               	subwf	sprintf@width& (0+255),f,b
 11930  000C12  0E00               	movlw	0
 11931  000C14  0100               	movlb	0	; () banked
 11932  000C16  BFE6               	btfsc	sprintf@c& (0+255),7,b
 11933  000C18  0EFF               	movlw	255
 11934  000C1A  0100               	movlb	0	; () banked
 11935  000C1C  5BE4               	subwfb	(sprintf@width+1)& (0+255),f,b
 11936  000C1E  D005               	goto	l7600
 11937  000C20                     l7598:
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;doprnt.c: 1383: else
 11941                           ;doprnt.c: 1384: width = 0;
 11942  000C20  0E00               	movlw	0
 11943  000C22  0100               	movlb	0	; () banked
 11944  000C24  6FE4               	movwf	(sprintf@width+1)& (0+255),b
 11945  000C26  0E00               	movlw	0
 11946  000C28  6FE3               	movwf	sprintf@width& (0+255),b
 11947  000C2A                     l7600:
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;doprnt.c: 1422: {
 11951                           ;doprnt.c: 1424: if(width
 11952                           ;doprnt.c: 1426: && !(flag & 0x08)
 11953                           ;doprnt.c: 1428: )
 11954  000C2A  0100               	movlb	0	; () banked
 11955  000C2C  51E3               	movf	sprintf@width& (0+255),w,b
 11956  000C2E  0100               	movlb	0	; () banked
 11957  000C30  11E4               	iorwf	(sprintf@width+1)& (0+255),w,b
 11958  000C32  B4D8               	btfsc	status,2,c
 11959  000C34  D046               	goto	l7618
 11960                           
 11961                           ; BSR set to: 0
 11962  000C36  0100               	movlb	0	; () banked
 11963  000C38  B7E1               	btfsc	sprintf@flag& (0+255),3,b
 11964  000C3A  D043               	goto	l7618
 11965  000C3C                     l7604:
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11969  000C3C  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 11970  000C40  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 11971  000C44  0E20               	movlw	32
 11972  000C46  6EDF               	movwf	indf2,c
 11973                           
 11974                           ; BSR set to: 0
 11975  000C48  0100               	movlb	0	; () banked
 11976  000C4A  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 11977  000C4C  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;doprnt.c: 1431: while(--width);
 11981  000C4E  0100               	movlb	0	; () banked
 11982  000C50  07E3               	decf	sprintf@width& (0+255),f,b
 11983  000C52  A0D8               	btfss	status,0,c
 11984  000C54  07E4               	decf	(sprintf@width+1)& (0+255),f,b
 11985  000C56  0100               	movlb	0	; () banked
 11986  000C58  51E3               	movf	sprintf@width& (0+255),w,b
 11987  000C5A  0100               	movlb	0	; () banked
 11988  000C5C  11E4               	iorwf	(sprintf@width+1)& (0+255),w,b
 11989  000C5E  B4D8               	btfsc	status,2,c
 11990  000C60  D030               	goto	l7618
 11991  000C62  D7EC               	goto	l7604
 11992  000C64                     l7610:
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;doprnt.c: 1478: {
 11996                           ;doprnt.c: 1499: {
 11997                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11998  000C64  C0DD  F0C7         	movff	sprintf@val,___lwdiv@dividend
 11999  000C68  C0DE  F0C8         	movff	sprintf@val+1,___lwdiv@dividend+1
 12000  000C6C  0100               	movlb	0	; () banked
 12001  000C6E  51E5               	movf	sprintf@prec& (0+255),w,b
 12002  000C70  0D02               	mullw	2
 12003  000C72  0E4A               	movlw	low _hexpowers
 12004  000C74  24F3               	addwf	prodl,w,c
 12005  000C76  6EF6               	movwf	tblptrl,c
 12006  000C78  0E7D               	movlw	high _hexpowers
 12007  000C7A  20F4               	addwfc	prodh,w,c
 12008  000C7C  6EF7               	movwf	tblptrh,c
 12009  000C7E                     	if	0	;There are less than 3 active tblptr bytes
 12010  000C7E                     	endif
 12011  000C7E  0009               	tblrd		*+
 12012  000C80  CFF5 F0C9          	movff	tablat,___lwdiv@divisor
 12013  000C84  000A               	tblrd		*-
 12014  000C86  CFF5 F0CA          	movff	tablat,___lwdiv@divisor+1
 12015  000C8A  EC4D  F01C         	call	___lwdiv	;wreg free
 12016  000C8E  0100               	movlb	0	; () banked
 12017  000C90  51C7               	movf	?___lwdiv& (0+255),w,b
 12018  000C92  0B0F               	andlw	15
 12019  000C94  0100               	movlb	0	; () banked
 12020  000C96  6FD8               	movwf	sprintf@idx& (0+255),b
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 12024  000C98  0100               	movlb	0	; () banked
 12025  000C9A  51D8               	movf	sprintf@idx& (0+255),w,b
 12026  000C9C  0D01               	mullw	1
 12027  000C9E  0EC3               	movlw	low STR_40
 12028  000CA0  24F3               	addwf	prodl,w,c
 12029  000CA2  6EF6               	movwf	tblptrl,c
 12030  000CA4  0E7F               	movlw	high STR_40
 12031  000CA6  20F4               	addwfc	prodh,w,c
 12032  000CA8  6EF7               	movwf	tblptrh,c
 12033  000CAA                     	if	0	;There are less than 3 active tblptr bytes
 12034  000CAA                     	endif
 12035  000CAA  0008               	tblrd		*
 12036  000CAC  CFF5 F0E6          	movff	tablat,sprintf@c
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;doprnt.c: 1508: }
 12040                           ;doprnt.c: 1523: }
 12041                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12042  000CB0  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 12043  000CB4  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 12044  000CB8  C0E6  FFDF         	movff	sprintf@c,indf2
 12045                           
 12046                           ; BSR set to: 0
 12047  000CBC  0100               	movlb	0	; () banked
 12048  000CBE  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 12049  000CC0  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 12050  000CC2                     l7618:
 12051                           
 12052                           ; BSR set to: 0
 12053  000CC2  0100               	movlb	0	; () banked
 12054  000CC4  07E5               	decf	sprintf@prec& (0+255),f,b
 12055  000CC6  0100               	movlb	0	; () banked
 12056  000CC8  29E5               	incf	sprintf@prec& (0+255),w,b
 12057  000CCA  A4D8               	btfss	status,2,c
 12058  000CCC  D7CB               	goto	l7610
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;doprnt.c: 1525: }
 12062                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 12063  000CCE  0100               	movlb	0	; () banked
 12064  000CD0  A7E1               	btfss	sprintf@flag& (0+255),3,b
 12065  000CD2  D01D               	goto	l7628
 12066                           
 12067                           ; BSR set to: 0
 12068  000CD4  0100               	movlb	0	; () banked
 12069  000CD6  BFE4               	btfsc	(sprintf@width+1)& (0+255),7,b
 12070  000CD8  D01A               	goto	l7628
 12071  000CDA  0100               	movlb	0	; () banked
 12072  000CDC  51E4               	movf	(sprintf@width+1)& (0+255),w,b
 12073  000CDE  E104               	bnz	l7622
 12074  000CE0  0100               	movlb	0	; () banked
 12075  000CE2  05E3               	decf	sprintf@width& (0+255),w,b
 12076  000CE4  A0D8               	btfss	status,0,c
 12077  000CE6  D013               	goto	l7628
 12078  000CE8                     l7622:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 12082  000CE8  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 12083  000CEC  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 12084  000CF0  0E20               	movlw	32
 12085  000CF2  6EDF               	movwf	indf2,c
 12086                           
 12087                           ; BSR set to: 0
 12088  000CF4  0100               	movlb	0	; () banked
 12089  000CF6  4BCE               	infsnz	sprintf@sp& (0+255),f,b
 12090  000CF8  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;doprnt.c: 1531: while(--width);
 12094  000CFA  0100               	movlb	0	; () banked
 12095  000CFC  07E3               	decf	sprintf@width& (0+255),f,b
 12096  000CFE  A0D8               	btfss	status,0,c
 12097  000D00  07E4               	decf	(sprintf@width+1)& (0+255),f,b
 12098  000D02  0100               	movlb	0	; () banked
 12099  000D04  51E3               	movf	sprintf@width& (0+255),w,b
 12100  000D06  0100               	movlb	0	; () banked
 12101  000D08  11E4               	iorwf	(sprintf@width+1)& (0+255),w,b
 12102  000D0A  A4D8               	btfss	status,2,c
 12103  000D0C  D7ED               	goto	l7622
 12104  000D0E                     l7628:
 12105                           
 12106                           ; BSR set to: 0
 12107  000D0E  C0D0  FFF6         	movff	sprintf@f,tblptrl
 12108  000D12  C0D1  FFF7         	movff	sprintf@f+1,tblptrh
 12109  000D16  0100               	movlb	0	; () banked
 12110  000D18  4BD0               	infsnz	sprintf@f& (0+255),f,b
 12111  000D1A  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
 12112  000D1C                     	if	0	;tblptru may be non-zero
 12113  000D1C                     	endif
 12114  000D1C                     	if	0	;tblptru may be non-zero
 12115  000D1C                     	endif
 12116  000D1C  0008               	tblrd		*
 12117  000D1E  CFF5 F0E6          	movff	tablat,sprintf@c
 12118  000D22  0100               	movlb	0	; () banked
 12119  000D24  51E6               	movf	sprintf@c& (0+255),w,b
 12120  000D26  A4D8               	btfss	status,2,c
 12121  000D28  D5C0               	goto	l7474
 12122  000D2A                     l7630:
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;doprnt.c: 1538: *sp = 0;
 12126  000D2A  C0CE  FFD9         	movff	sprintf@sp,fsr2l
 12127  000D2E  C0CF  FFDA         	movff	sprintf@sp+1,fsr2h
 12128  000D32  0E00               	movlw	0
 12129  000D34  6EDF               	movwf	indf2,c
 12130  000D36  0012               	return	
 12131  000D38                     __end_of_sprintf:
 12132                           	opt stack 0
 12133                           tblptru	equ	0xFF8
 12134                           tblptrh	equ	0xFF7
 12135                           tblptrl	equ	0xFF6
 12136                           tablat	equ	0xFF5
 12137                           prodh	equ	0xFF4
 12138                           prodl	equ	0xFF3
 12139                           intcon	equ	0xFF2
 12140                           indf0	equ	0xFEF
 12141                           postinc0	equ	0xFEE
 12142                           fsr0h	equ	0xFEA
 12143                           fsr0l	equ	0xFE9
 12144                           wreg	equ	0xFE8
 12145                           indf1	equ	0xFE7
 12146                           postdec1	equ	0xFE5
 12147                           fsr1h	equ	0xFE2
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           postdec2	equ	0xFDD
 12152                           plusw2	equ	0xFDB
 12153                           fsr2h	equ	0xFDA
 12154                           fsr2l	equ	0xFD9
 12155                           status	equ	0xFD8
 12156                           
 12157 ;; *************** function _isdigit *****************
 12158 ;; Defined at:
 12159 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\isdigit.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  c               1    wreg     unsigned char 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  c               1   19[BANK0 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;		None               void
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0
 12174 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12175 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12176 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12177 ;;Total ram usage:        3 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:   12
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		_sprintf
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text49
 12188  003F62                     __ptext49:
 12189                           	opt stack 0
 12190  003F62                     _isdigit:
 12191                           	opt stack 14
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;incstack = 0
 12195                           ;isdigit@c stored from wreg
 12196  003F62  0100               	movlb	0	; () banked
 12197  003F64  6FC9               	movwf	isdigit@c& (0+255),b
 12198  003F66  0E00               	movlw	0
 12199  003F68  0100               	movlb	0	; () banked
 12200  003F6A  6FC8               	movwf	_isdigit$3312& (0+255),b
 12201                           
 12202                           ; BSR set to: 0
 12203  003F6C  0E3A               	movlw	58
 12204  003F6E  0100               	movlb	0	; () banked
 12205  003F70  61C9               	cpfslt	isdigit@c& (0+255),b
 12206  003F72  D007               	goto	l7242
 12207                           
 12208                           ; BSR set to: 0
 12209  003F74  0E2F               	movlw	47
 12210  003F76  0100               	movlb	0	; () banked
 12211  003F78  65C9               	cpfsgt	isdigit@c& (0+255),b
 12212  003F7A  D003               	goto	l7242
 12213                           
 12214                           ; BSR set to: 0
 12215  003F7C  0E01               	movlw	1
 12216  003F7E  0100               	movlb	0	; () banked
 12217  003F80  6FC8               	movwf	_isdigit$3312& (0+255),b
 12218  003F82                     l7242:
 12219                           
 12220                           ; BSR set to: 0
 12221  003F82  C0C8  F0C7         	movff	_isdigit$3312,??_isdigit
 12222  003F86  0100               	movlb	0	; () banked
 12223  003F88  31C7               	rrcf	??_isdigit& (0+255),w,b
 12224  003F8A  0012               	return	
 12225  003F8C                     __end_of_isdigit:
 12226                           	opt stack 0
 12227                           tblptru	equ	0xFF8
 12228                           tblptrh	equ	0xFF7
 12229                           tblptrl	equ	0xFF6
 12230                           tablat	equ	0xFF5
 12231                           prodh	equ	0xFF4
 12232                           prodl	equ	0xFF3
 12233                           intcon	equ	0xFF2
 12234                           indf0	equ	0xFEF
 12235                           postinc0	equ	0xFEE
 12236                           fsr0h	equ	0xFEA
 12237                           fsr0l	equ	0xFE9
 12238                           wreg	equ	0xFE8
 12239                           indf1	equ	0xFE7
 12240                           postdec1	equ	0xFE5
 12241                           fsr1h	equ	0xFE2
 12242                           fsr1l	equ	0xFE1
 12243                           indf2	equ	0xFDF
 12244                           postinc2	equ	0xFDE
 12245                           postdec2	equ	0xFDD
 12246                           plusw2	equ	0xFDB
 12247                           fsr2h	equ	0xFDA
 12248                           fsr2l	equ	0xFD9
 12249                           status	equ	0xFD8
 12250                           
 12251 ;; *************** function ___wmul *****************
 12252 ;; Defined at:
 12253 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\Umul16.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  multiplier      2   17[BANK0 ] unsigned int 
 12256 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  product         2   21[BANK0 ] unsigned int 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  2   17[BANK0 ] unsigned int 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0, prodl, prodh
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12268 ;;      Params:         0       4       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12271 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12272 ;;Total ram usage:        6 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:   12
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_sprintf
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text50
 12283  003DAA                     __ptext50:
 12284                           	opt stack 0
 12285  003DAA                     ___wmul:
 12286                           	opt stack 14
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;incstack = 0
 12290  003DAA  0100               	movlb	0	; () banked
 12291  003DAC  51C7               	movf	___wmul@multiplier& (0+255),w,b
 12292  003DAE  0100               	movlb	0	; () banked
 12293  003DB0  03C9               	mulwf	___wmul@multiplicand& (0+255),b
 12294  003DB2  CFF3 F0CB          	movff	prodl,___wmul@product
 12295  003DB6  CFF4 F0CC          	movff	prodh,___wmul@product+1
 12296  003DBA  0100               	movlb	0	; () banked
 12297  003DBC  51C7               	movf	___wmul@multiplier& (0+255),w,b
 12298  003DBE  0100               	movlb	0	; () banked
 12299  003DC0  03CA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12300  003DC2  50F3               	movf	prodl,w,c
 12301  003DC4  0100               	movlb	0	; () banked
 12302  003DC6  27CC               	addwf	(___wmul@product+1)& (0+255),f,b
 12303  003DC8  0100               	movlb	0	; () banked
 12304  003DCA  51C8               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12305  003DCC  0100               	movlb	0	; () banked
 12306  003DCE  03C9               	mulwf	___wmul@multiplicand& (0+255),b
 12307  003DD0  50F3               	movf	prodl,w,c
 12308  003DD2  0100               	movlb	0	; () banked
 12309  003DD4  27CC               	addwf	(___wmul@product+1)& (0+255),f,b
 12310                           
 12311                           ; BSR set to: 0
 12312  003DD6  C0CB  F0C7         	movff	___wmul@product,?___wmul
 12313  003DDA  C0CC  F0C8         	movff	___wmul@product+1,?___wmul+1
 12314  003DDE  0012               	return	
 12315  003DE0                     __end_of___wmul:
 12316                           	opt stack 0
 12317                           tblptru	equ	0xFF8
 12318                           tblptrh	equ	0xFF7
 12319                           tblptrl	equ	0xFF6
 12320                           tablat	equ	0xFF5
 12321                           prodh	equ	0xFF4
 12322                           prodl	equ	0xFF3
 12323                           intcon	equ	0xFF2
 12324                           indf0	equ	0xFEF
 12325                           postinc0	equ	0xFEE
 12326                           fsr0h	equ	0xFEA
 12327                           fsr0l	equ	0xFE9
 12328                           wreg	equ	0xFE8
 12329                           indf1	equ	0xFE7
 12330                           postdec1	equ	0xFE5
 12331                           fsr1h	equ	0xFE2
 12332                           fsr1l	equ	0xFE1
 12333                           indf2	equ	0xFDF
 12334                           postinc2	equ	0xFDE
 12335                           postdec2	equ	0xFDD
 12336                           plusw2	equ	0xFDB
 12337                           fsr2h	equ	0xFDA
 12338                           fsr2l	equ	0xFD9
 12339                           status	equ	0xFD8
 12340                           
 12341 ;; *************** function ___lwdiv *****************
 12342 ;; Defined at:
 12343 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\lwdiv.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  dividend        2   17[BANK0 ] unsigned int 
 12346 ;;  divisor         2   19[BANK0 ] unsigned int 
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;  quotient        2   22[BANK0 ] unsigned int 
 12349 ;;  counter         1   21[BANK0 ] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  2   17[BANK0 ] unsigned int 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12359 ;;      Params:         0       4       0       0       0       0       0       0       0
 12360 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12361 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12362 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12363 ;;Total ram usage:        7 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:   12
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_sprintf
 12370 ;;		_utoa
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           	psect	text51
 12375  00389A                     __ptext51:
 12376                           	opt stack 0
 12377  00389A                     ___lwdiv:
 12378                           	opt stack 14
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;incstack = 0
 12382  00389A  0E00               	movlw	0
 12383  00389C  0100               	movlb	0	; () banked
 12384  00389E  6FCD               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12385  0038A0  0E00               	movlw	0
 12386  0038A2  6FCC               	movwf	___lwdiv@quotient& (0+255),b
 12387                           
 12388                           ; BSR set to: 0
 12389  0038A4  0100               	movlb	0	; () banked
 12390  0038A6  51C9               	movf	___lwdiv@divisor& (0+255),w,b
 12391  0038A8  0100               	movlb	0	; () banked
 12392  0038AA  11CA               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12393  0038AC  B4D8               	btfsc	status,2,c
 12394  0038AE  D02C               	goto	l1508
 12395                           
 12396                           ; BSR set to: 0
 12397  0038B0  0E01               	movlw	1
 12398  0038B2  0100               	movlb	0	; () banked
 12399  0038B4  6FCB               	movwf	___lwdiv@counter& (0+255),b
 12400  0038B6  D006               	goto	l7458
 12401  0038B8                     l7456:
 12402                           
 12403                           ; BSR set to: 0
 12404  0038B8  0100               	movlb	0	; () banked
 12405  0038BA  90D8               	bcf	status,0,c
 12406  0038BC  37C9               	rlcf	___lwdiv@divisor& (0+255),f,b
 12407  0038BE  37CA               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12408  0038C0  0100               	movlb	0	; () banked
 12409  0038C2  2BCB               	incf	___lwdiv@counter& (0+255),f,b
 12410  0038C4                     l7458:
 12411                           
 12412                           ; BSR set to: 0
 12413  0038C4  0100               	movlb	0	; () banked
 12414  0038C6  AFCA               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12415  0038C8  D7F7               	goto	l7456
 12416  0038CA                     l7460:
 12417                           
 12418                           ; BSR set to: 0
 12419  0038CA  0100               	movlb	0	; () banked
 12420  0038CC  90D8               	bcf	status,0,c
 12421  0038CE  37CC               	rlcf	___lwdiv@quotient& (0+255),f,b
 12422  0038D0  37CD               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12423                           
 12424                           ; BSR set to: 0
 12425  0038D2  0100               	movlb	0	; () banked
 12426  0038D4  51C9               	movf	___lwdiv@divisor& (0+255),w,b
 12427  0038D6  0100               	movlb	0	; () banked
 12428  0038D8  5DC7               	subwf	___lwdiv@dividend& (0+255),w,b
 12429  0038DA  0100               	movlb	0	; () banked
 12430  0038DC  51CA               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12431  0038DE  0100               	movlb	0	; () banked
 12432  0038E0  59C8               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12433  0038E2  A0D8               	btfss	status,0,c
 12434  0038E4  D00A               	goto	l7468
 12435                           
 12436                           ; BSR set to: 0
 12437  0038E6  0100               	movlb	0	; () banked
 12438  0038E8  51C9               	movf	___lwdiv@divisor& (0+255),w,b
 12439  0038EA  0100               	movlb	0	; () banked
 12440  0038EC  5FC7               	subwf	___lwdiv@dividend& (0+255),f,b
 12441  0038EE  0100               	movlb	0	; () banked
 12442  0038F0  51CA               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12443  0038F2  0100               	movlb	0	; () banked
 12444  0038F4  5BC8               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12445                           
 12446                           ; BSR set to: 0
 12447  0038F6  0100               	movlb	0	; () banked
 12448  0038F8  81CC               	bsf	___lwdiv@quotient& (0+255),0,b
 12449  0038FA                     l7468:
 12450                           
 12451                           ; BSR set to: 0
 12452  0038FA  0100               	movlb	0	; () banked
 12453  0038FC  90D8               	bcf	status,0,c
 12454  0038FE  33CA               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12455  003900  33C9               	rrcf	___lwdiv@divisor& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458  003902  0100               	movlb	0	; () banked
 12459  003904  2FCB               	decfsz	___lwdiv@counter& (0+255),f,b
 12460  003906  D7E1               	goto	l7460
 12461  003908                     l1508:
 12462                           
 12463                           ; BSR set to: 0
 12464  003908  C0CC  F0C7         	movff	___lwdiv@quotient,?___lwdiv
 12465  00390C  C0CD  F0C8         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12466                           
 12467                           ; BSR set to: 0
 12468  003910  0012               	return		;funcret
 12469  003912                     __end_of___lwdiv:
 12470                           	opt stack 0
 12471                           tblptru	equ	0xFF8
 12472                           tblptrh	equ	0xFF7
 12473                           tblptrl	equ	0xFF6
 12474                           tablat	equ	0xFF5
 12475                           prodh	equ	0xFF4
 12476                           prodl	equ	0xFF3
 12477                           intcon	equ	0xFF2
 12478                           indf0	equ	0xFEF
 12479                           postinc0	equ	0xFEE
 12480                           fsr0h	equ	0xFEA
 12481                           fsr0l	equ	0xFE9
 12482                           wreg	equ	0xFE8
 12483                           indf1	equ	0xFE7
 12484                           postdec1	equ	0xFE5
 12485                           fsr1h	equ	0xFE2
 12486                           fsr1l	equ	0xFE1
 12487                           indf2	equ	0xFDF
 12488                           postinc2	equ	0xFDE
 12489                           postdec2	equ	0xFDD
 12490                           plusw2	equ	0xFDB
 12491                           fsr2h	equ	0xFDA
 12492                           fsr2l	equ	0xFD9
 12493                           status	equ	0xFD8
 12494                           
 12495 ;; *************** function _putUSBUSART *****************
 12496 ;; Defined at:
 12497 ;;		line 621 in file "../mla/v2014_07_22/framework/usb/src/usb_device_cdc.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;  data            2   23[BANK0 ] PTR unsigned char 
 12500 ;;		 -> usbInBuffer(64), 
 12501 ;;  length          1   25[BANK0 ] unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;		None               void
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12513 ;;      Params:         0       3       0       0       0       0       0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12516 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12517 ;;Total ram usage:        3 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:   12
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_APP_USB_send
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text52
 12528  003FB4                     __ptext52:
 12529                           	opt stack 0
 12530  003FB4                     _putUSBUSART:
 12531                           	opt stack 15
 12532                           
 12533                           ;usb_device_cdc.c: 646: {PIE2bits.USBIE = 0;};
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;incstack = 0
 12537  003FB4  9AA0               	bcf	4000,5,c	;volatile
 12538                           
 12539                           ;usb_device_cdc.c: 647: if(cdc_trf_state == 0)
 12540  003FB6  0100               	movlb	0	; () banked
 12541  003FB8  519D               	movf	_cdc_trf_state& (0+255),w,b
 12542  003FBA  A4D8               	btfss	status,2,c
 12543  003FBC  D00C               	goto	l7656
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device_cdc.c: 648: {
 12547                           ;usb_device_cdc.c: 649: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 12548  003FBE  C0CD  F08E         	movff	putUSBUSART@data,_pCDCSrc
 12549  003FC2  C0CE  F08F         	movff	putUSBUSART@data+1,_pCDCSrc+1
 12550                           
 12551                           ; BSR set to: 0
 12552  003FC6  C0CF  F09E         	movff	putUSBUSART@length,_cdc_tx_len
 12553                           
 12554                           ; BSR set to: 0
 12555  003FCA  0E01               	movlw	1
 12556  003FCC  0100               	movlb	0	; () banked
 12557  003FCE  6F9B               	movwf	_cdc_mem_type& (0+255),b
 12558                           
 12559                           ; BSR set to: 0
 12560  003FD0  0E01               	movlw	1
 12561  003FD2  0100               	movlb	0	; () banked
 12562  003FD4  6F9D               	movwf	_cdc_trf_state& (0+255),b
 12563  003FD6                     l7656:
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;usb_device_cdc.c: 650: }
 12567                           ;usb_device_cdc.c: 651: {PIE2bits.USBIE = 1;};
 12568  003FD6  8AA0               	bsf	4000,5,c	;volatile
 12569                           
 12570                           ; BSR set to: 0
 12571  003FD8  0012               	return		;funcret
 12572  003FDA                     __end_of_putUSBUSART:
 12573                           	opt stack 0
 12574                           tblptru	equ	0xFF8
 12575                           tblptrh	equ	0xFF7
 12576                           tblptrl	equ	0xFF6
 12577                           tablat	equ	0xFF5
 12578                           prodh	equ	0xFF4
 12579                           prodl	equ	0xFF3
 12580                           intcon	equ	0xFF2
 12581                           indf0	equ	0xFEF
 12582                           postinc0	equ	0xFEE
 12583                           fsr0h	equ	0xFEA
 12584                           fsr0l	equ	0xFE9
 12585                           wreg	equ	0xFE8
 12586                           indf1	equ	0xFE7
 12587                           postdec1	equ	0xFE5
 12588                           fsr1h	equ	0xFE2
 12589                           fsr1l	equ	0xFE1
 12590                           indf2	equ	0xFDF
 12591                           postinc2	equ	0xFDE
 12592                           postdec2	equ	0xFDD
 12593                           plusw2	equ	0xFDB
 12594                           fsr2h	equ	0xFDA
 12595                           fsr2l	equ	0xFD9
 12596                           status	equ	0xFD8
 12597                           
 12598 ;; *************** function _check_Lipo *****************
 12599 ;; Defined at:
 12600 ;;		line 214 in file "user.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;		None
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;		None
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  2   17[BANK0 ] short 
 12607 ;; Registers used:
 12608 ;;		wreg, status,2
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12614 ;;      Params:         0       2       0       0       0       0       0       0       0
 12615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12617 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12618 ;;Total ram usage:        2 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:   12
 12621 ;; This function calls:
 12622 ;;		Nothing
 12623 ;; This function is called by:
 12624 ;;		_APP_CustomCDCTasks
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628                           	psect	text53
 12629  004092                     __ptext53:
 12630                           	opt stack 0
 12631  004092                     _check_Lipo:
 12632                           	opt stack 17
 12633                           
 12634                           ;user.c: 220: return OK;
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;incstack = 0
 12638  004092  0E00               	movlw	0
 12639  004094  0100               	movlb	0	; () banked
 12640  004096  6FC8               	movwf	(?_check_Lipo+1)& (0+255),b
 12641  004098  0E00               	movlw	0
 12642  00409A  6FC7               	movwf	?_check_Lipo& (0+255),b
 12643  00409C  0012               	return	
 12644  00409E                     __end_of_check_Lipo:
 12645                           	opt stack 0
 12646                           tblptru	equ	0xFF8
 12647                           tblptrh	equ	0xFF7
 12648                           tblptrl	equ	0xFF6
 12649                           tablat	equ	0xFF5
 12650                           prodh	equ	0xFF4
 12651                           prodl	equ	0xFF3
 12652                           intcon	equ	0xFF2
 12653                           indf0	equ	0xFEF
 12654                           postinc0	equ	0xFEE
 12655                           fsr0h	equ	0xFEA
 12656                           fsr0l	equ	0xFE9
 12657                           wreg	equ	0xFE8
 12658                           indf1	equ	0xFE7
 12659                           postdec1	equ	0xFE5
 12660                           fsr1h	equ	0xFE2
 12661                           fsr1l	equ	0xFE1
 12662                           indf2	equ	0xFDF
 12663                           postinc2	equ	0xFDE
 12664                           postdec2	equ	0xFDD
 12665                           plusw2	equ	0xFDB
 12666                           fsr2h	equ	0xFDA
 12667                           fsr2l	equ	0xFD9
 12668                           status	equ	0xFD8
 12669                           
 12670 ;; *************** function _SYS_InterruptLow *****************
 12671 ;; Defined at:
 12672 ;;		line 32 in file "system.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;		None               void
 12679 ;; Registers used:
 12680 ;;		None
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12688 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12689 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12690 ;;Total ram usage:       17 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:   11
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		Interrupt level 1
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	intcodelo
 12701  000018                     __pintcodelo:
 12702                           	opt stack 0
 12703  000018                     _SYS_InterruptLow:
 12704                           	opt stack 13
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;incstack = 0
 12708  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12709  00001A  CFD8 F001          	movff	status,??_SYS_InterruptLow
 12710  00001E  CFE8 F002          	movff	wreg,??_SYS_InterruptLow+1
 12711  000022  CFE0 F003          	movff	bsr,??_SYS_InterruptLow+2
 12712  000026  CFFA F004          	movff	pclath,??_SYS_InterruptLow+3
 12713  00002A  CFFB F005          	movff	pclatu,??_SYS_InterruptLow+4
 12714  00002E  CFE9 F006          	movff	fsr0l,??_SYS_InterruptLow+5
 12715  000032  CFEA F007          	movff	fsr0h,??_SYS_InterruptLow+6
 12716  000036  CFE1 F008          	movff	fsr1l,??_SYS_InterruptLow+7
 12717  00003A  CFE2 F009          	movff	fsr1h,??_SYS_InterruptLow+8
 12718  00003E  CFD9 F00A          	movff	fsr2l,??_SYS_InterruptLow+9
 12719  000042  CFDA F00B          	movff	fsr2h,??_SYS_InterruptLow+10
 12720  000046  CFF3 F00C          	movff	prodl,??_SYS_InterruptLow+11
 12721  00004A  CFF4 F00D          	movff	prodh,??_SYS_InterruptLow+12
 12722  00004E  CFF6 F00E          	movff	tblptrl,??_SYS_InterruptLow+13
 12723  000052  CFF7 F00F          	movff	tblptrh,??_SYS_InterruptLow+14
 12724  000056  CFF8 F010          	movff	tblptru,??_SYS_InterruptLow+15
 12725  00005A  CFF5 F011          	movff	tablat,??_SYS_InterruptLow+16
 12726  00005E  C011  FFF5         	movff	??_SYS_InterruptLow+16,tablat
 12727  000062  C010  FFF8         	movff	??_SYS_InterruptLow+15,tblptru
 12728  000066  C00F  FFF7         	movff	??_SYS_InterruptLow+14,tblptrh
 12729  00006A  C00E  FFF6         	movff	??_SYS_InterruptLow+13,tblptrl
 12730  00006E  C00D  FFF4         	movff	??_SYS_InterruptLow+12,prodh
 12731  000072  C00C  FFF3         	movff	??_SYS_InterruptLow+11,prodl
 12732  000076  C00B  FFDA         	movff	??_SYS_InterruptLow+10,fsr2h
 12733  00007A  C00A  FFD9         	movff	??_SYS_InterruptLow+9,fsr2l
 12734  00007E  C009  FFE2         	movff	??_SYS_InterruptLow+8,fsr1h
 12735  000082  C008  FFE1         	movff	??_SYS_InterruptLow+7,fsr1l
 12736  000086  C007  FFEA         	movff	??_SYS_InterruptLow+6,fsr0h
 12737  00008A  C006  FFE9         	movff	??_SYS_InterruptLow+5,fsr0l
 12738  00008E  C005  FFFB         	movff	??_SYS_InterruptLow+4,pclatu
 12739  000092  C004  FFFA         	movff	??_SYS_InterruptLow+3,pclath
 12740  000096  C003  FFE0         	movff	??_SYS_InterruptLow+2,bsr
 12741  00009A  C002  FFE8         	movff	??_SYS_InterruptLow+1,wreg
 12742  00009E  C001  FFD8         	movff	??_SYS_InterruptLow,status
 12743  0000A2  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12744  0000A4  0010               	retfie	
 12745  0000A6                     __end_of_SYS_InterruptLow:
 12746                           	opt stack 0
 12747                           pclatu	equ	0xFFB
 12748                           pclath	equ	0xFFA
 12749                           tblptru	equ	0xFF8
 12750                           tblptrh	equ	0xFF7
 12751                           tblptrl	equ	0xFF6
 12752                           tablat	equ	0xFF5
 12753                           prodh	equ	0xFF4
 12754                           prodl	equ	0xFF3
 12755                           intcon	equ	0xFF2
 12756                           indf0	equ	0xFEF
 12757                           postinc0	equ	0xFEE
 12758                           fsr0h	equ	0xFEA
 12759                           fsr0l	equ	0xFE9
 12760                           wreg	equ	0xFE8
 12761                           indf1	equ	0xFE7
 12762                           postdec1	equ	0xFE5
 12763                           fsr1h	equ	0xFE2
 12764                           fsr1l	equ	0xFE1
 12765                           bsr	equ	0xFE0
 12766                           indf2	equ	0xFDF
 12767                           postinc2	equ	0xFDE
 12768                           postdec2	equ	0xFDD
 12769                           plusw2	equ	0xFDB
 12770                           fsr2h	equ	0xFDA
 12771                           fsr2l	equ	0xFD9
 12772                           status	equ	0xFD8
 12773                           
 12774 ;; *************** function _SYS_InterruptHigh *****************
 12775 ;; Defined at:
 12776 ;;		line 9 in file "system.c"
 12777 ;; Parameters:    Size  Location     Type
 12778 ;;		None
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;		None               void
 12783 ;; Registers used:
 12784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12790 ;;      Params:         0       0       0       0       0       0       0       0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12792 ;;      Temps:          0      14       0       0       0       0       0       0       0
 12793 ;;      Totals:         0      14       0       0       0       0       0       0       0
 12794 ;;Total ram usage:       14 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:   10
 12797 ;; This function calls:
 12798 ;;		_USBDeviceTasks
 12799 ;; This function is called by:
 12800 ;;		Interrupt level 2
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	intcode
 12805  000008                     __pintcode:
 12806                           	opt stack 0
 12807  000008                     _SYS_InterruptHigh:
 12808                           	opt stack 13
 12809                           
 12810                           ;incstack = 0
 12811  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12812  00000A  CFFA F0B9          	movff	pclath,??_SYS_InterruptHigh
 12813  00000E  CFFB F0BA          	movff	pclatu,??_SYS_InterruptHigh+1
 12814  000012  EDC2  F01C         	call	int_func,f	;refresh shadow registers
 12815                           pclatu	equ	0xFFB
 12816                           pclath	equ	0xFFA
 12817                           tblptru	equ	0xFF8
 12818                           tblptrh	equ	0xFF7
 12819                           tblptrl	equ	0xFF6
 12820                           tablat	equ	0xFF5
 12821                           prodh	equ	0xFF4
 12822                           prodl	equ	0xFF3
 12823                           intcon	equ	0xFF2
 12824                           indf0	equ	0xFEF
 12825                           postinc0	equ	0xFEE
 12826                           fsr0h	equ	0xFEA
 12827                           fsr0l	equ	0xFE9
 12828                           wreg	equ	0xFE8
 12829                           indf1	equ	0xFE7
 12830                           postdec1	equ	0xFE5
 12831                           fsr1h	equ	0xFE2
 12832                           fsr1l	equ	0xFE1
 12833                           bsr	equ	0xFE0
 12834                           indf2	equ	0xFDF
 12835                           postinc2	equ	0xFDE
 12836                           postdec2	equ	0xFDD
 12837                           plusw2	equ	0xFDB
 12838                           fsr2h	equ	0xFDA
 12839                           fsr2l	equ	0xFD9
 12840                           status	equ	0xFD8
 12841                           
 12842                           	psect	intcode_body
 12843  003984                     __pintcode_body:
 12844                           	opt stack 13
 12845  003984                     int_func:
 12846                           	opt stack 13
 12847  003984  0006               	pop		; remove dummy address from shadow register refresh
 12848  003986  CFE9 F0BB          	movff	fsr0l,??_SYS_InterruptHigh+2
 12849  00398A  CFEA F0BC          	movff	fsr0h,??_SYS_InterruptHigh+3
 12850  00398E  CFE1 F0BD          	movff	fsr1l,??_SYS_InterruptHigh+4
 12851  003992  CFE2 F0BE          	movff	fsr1h,??_SYS_InterruptHigh+5
 12852  003996  CFD9 F0BF          	movff	fsr2l,??_SYS_InterruptHigh+6
 12853  00399A  CFDA F0C0          	movff	fsr2h,??_SYS_InterruptHigh+7
 12854  00399E  CFF3 F0C1          	movff	prodl,??_SYS_InterruptHigh+8
 12855  0039A2  CFF4 F0C2          	movff	prodh,??_SYS_InterruptHigh+9
 12856  0039A6  CFF6 F0C3          	movff	tblptrl,??_SYS_InterruptHigh+10
 12857  0039AA  CFF7 F0C4          	movff	tblptrh,??_SYS_InterruptHigh+11
 12858  0039AE  CFF8 F0C5          	movff	tblptru,??_SYS_InterruptHigh+12
 12859  0039B2  CFF5 F0C6          	movff	tablat,??_SYS_InterruptHigh+13
 12860                           
 12861                           ;system.c: 29: USBDeviceTasks();
 12862  0039B6  ECB1  F010         	call	_USBDeviceTasks	;wreg free
 12863  0039BA  C0C6  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 12864  0039BE  C0C5  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 12865  0039C2  C0C4  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 12866  0039C6  C0C3  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 12867  0039CA  C0C2  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 12868  0039CE  C0C1  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 12869  0039D2  C0C0  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 12870  0039D6  C0BF  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 12871  0039DA  C0BE  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 12872  0039DE  C0BD  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 12873  0039E2  C0BC  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 12874  0039E6  C0BB  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 12875  0039EA  C0BA  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 12876  0039EE  C0B9  FFFA         	movff	??_SYS_InterruptHigh,pclath
 12877  0039F2  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12878  0039F4  0011               	retfie		f
 12879  0039F6                     __end_of_SYS_InterruptHigh:
 12880                           	opt stack 0
 12881                           pclatu	equ	0xFFB
 12882                           pclath	equ	0xFFA
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           intcon	equ	0xFF2
 12890                           indf0	equ	0xFEF
 12891                           postinc0	equ	0xFEE
 12892                           fsr0h	equ	0xFEA
 12893                           fsr0l	equ	0xFE9
 12894                           wreg	equ	0xFE8
 12895                           indf1	equ	0xFE7
 12896                           postdec1	equ	0xFE5
 12897                           fsr1h	equ	0xFE2
 12898                           fsr1l	equ	0xFE1
 12899                           bsr	equ	0xFE0
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           postdec2	equ	0xFDD
 12903                           plusw2	equ	0xFDB
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _USBDeviceTasks *****************
 12909 ;; Defined at:
 12910 ;;		line 489 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  i               1    2[BANK0 ] unsigned char 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;		None               void
 12917 ;; Registers used:
 12918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0
 12925 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12927 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12928 ;;Total ram usage:        1 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    9
 12931 ;; This function calls:
 12932 ;;		_USBCtrlEPAllowStatusStage
 12933 ;;		_USBCtrlEPService
 12934 ;;		_USBStallHandler
 12935 ;;		_USBSuspend
 12936 ;;		_USBWakeFromSuspend
 12937 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12938 ;;		i2_USBDeviceInit
 12939 ;; This function is called by:
 12940 ;;		_SYS_InterruptHigh
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text56
 12945  002162                     __ptext56:
 12946                           	opt stack 0
 12947  002162                     _USBDeviceTasks:
 12948                           	opt stack 13
 12949                           
 12950                           ;usb_device.c: 491: uint8_t i;
 12951                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 12952                           
 12953                           ;incstack = 0
 12954  002162  0100               	movlb	0	; () banked
 12955  002164  059A               	decf	_USBDeviceState& (0+255),w,b	;volatile
 12956  002166  B4D8               	btfsc	status,2,c
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;usb_device.c: 603: {
 12960                           ;usb_device.c: 613: if(!UCONbits.SE0)
 12961  002168  BA6D               	btfsc	3949,5,c	;volatile
 12962  00216A  D007               	goto	i2l8470
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;usb_device.c: 614: {
 12966                           ;usb_device.c: 615: {UIR = 0;};
 12967  00216C  0E00               	movlw	0
 12968  00216E  6E68               	movwf	3944,c	;volatile
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 12972  002170  8069               	bsf	3945,0,c	;volatile
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 12976  002172  8869               	bsf	3945,4,c	;volatile
 12977                           
 12978                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 12979  002174  0E02               	movlw	2
 12980  002176  0100               	movlb	0	; () banked
 12981  002178  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 12982  00217A                     i2l8470:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;usb_device.c: 622: }
 12986                           ;usb_device.c: 623: }
 12987                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 12988  00217A  B468               	btfsc	3944,2,c	;volatile
 12989                           
 12990                           ; BSR set to: 0
 12991  00217C  A469               	btfss	3945,2,c	;volatile
 12992  00217E  D003               	goto	i2l8478
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;usb_device.c: 640: {
 12996                           ;usb_device.c: 641: (UIR &= 0xFB);
 12997  002180  9468               	bcf	3944,2,c	;volatile
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;usb_device.c: 645: USBWakeFromSuspend();
 13001  002182  EC6F  F01F         	call	_USBWakeFromSuspend	;wreg free
 13002  002186                     i2l8478:
 13003                           
 13004                           ;usb_device.c: 647: }
 13005                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 13006  002186  A26D               	btfss	3949,1,c	;volatile
 13007  002188  D002               	goto	i2l612
 13008                           
 13009                           ;usb_device.c: 653: {
 13010                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 13011  00218A  9AA1               	bcf	4001,5,c	;volatile
 13012                           
 13013                           ;usb_device.c: 655: return;
 13014  00218C  0012               	return	
 13015  00218E                     i2l612:
 13016                           
 13017                           ;usb_device.c: 656: }
 13018                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13019  00218E  B068               	btfsc	3944,0,c	;volatile
 13020  002190  A069               	btfss	3945,0,c	;volatile
 13021  002192  D007               	goto	i2l8492
 13022                           
 13023                           ;usb_device.c: 669: {
 13024                           ;usb_device.c: 670: USBDeviceInit();
 13025  002194  EC4E  F011         	call	i2_USBDeviceInit	;wreg free
 13026                           
 13027                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 13028  002198  8AA0               	bsf	4000,5,c	;volatile
 13029                           
 13030                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 13031  00219A  0E04               	movlw	4
 13032  00219C  0100               	movlb	0	; () banked
 13033  00219E  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;usb_device.c: 686: (UIR &= 0xFE);
 13037  0021A0  9068               	bcf	3944,0,c	;volatile
 13038  0021A2                     i2l8492:
 13039                           
 13040                           ;usb_device.c: 687: }
 13041                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13042  0021A2  B868               	btfsc	3944,4,c	;volatile
 13043  0021A4  A869               	btfss	3945,4,c	;volatile
 13044  0021A6  D003               	goto	i2l8500
 13045                           
 13046                           ;usb_device.c: 693: {
 13047                           ;usb_device.c: 698: USBSuspend();
 13048  0021A8  ECC6  F01F         	call	_USBSuspend	;wreg free
 13049                           
 13050                           ;usb_device.c: 701: (UIR &= 0xEF);
 13051  0021AC  9868               	bcf	3944,4,c	;volatile
 13052  0021AE                     i2l8500:
 13053                           
 13054                           ;usb_device.c: 702: }
 13055                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 13056  0021AE  AC68               	btfss	3944,6,c	;volatile
 13057  0021B0  D018               	goto	i2l8516
 13058                           
 13059                           ;usb_device.c: 705: {
 13060                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 13061  0021B2  AC69               	btfss	3945,6,c	;volatile
 13062  0021B4  D00E               	goto	i2l8506
 13063                           
 13064                           ;usb_device.c: 707: {
 13065                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13066  0021B6  0E00               	movlw	0
 13067  0021B8  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13068  0021BA  0E73               	movlw	115
 13069  0021BC  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13070  0021BE  0E00               	movlw	0
 13071  0021C0  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13072  0021C2  0E00               	movlw	0
 13073  0021C4  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13074  0021C6  0E00               	movlw	0
 13075  0021C8  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13076  0021CA  0E01               	movlw	1
 13077  0021CC  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13078  0021CE  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13079  0021D2                     i2l8506:
 13080                           
 13081                           ;usb_device.c: 709: }
 13082                           ;usb_device.c: 710: (UIR &= 0xBF);
 13083  0021D2  9C68               	bcf	3944,6,c	;volatile
 13084                           
 13085                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 13086  0021D4  503D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13087  0021D6  A4D8               	btfss	status,2,c
 13088                           
 13089                           ;usb_device.c: 736: {
 13090                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 13091  0021D8  063D               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13092                           
 13093                           ;usb_device.c: 738: }
 13094                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 13095  0021DA  503D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13096  0021DC  B4D8               	btfsc	status,2,c
 13097                           
 13098                           ;usb_device.c: 745: {
 13099                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 13100  0021DE  EC81  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13101  0021E2                     i2l8516:
 13102                           
 13103                           ;usb_device.c: 747: }
 13104                           ;usb_device.c: 749: }
 13105                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13106  0021E2  BA68               	btfsc	3944,5,c	;volatile
 13107  0021E4  AA69               	btfss	3945,5,c	;volatile
 13108  0021E6  D002               	goto	i2l8522
 13109                           
 13110                           ;usb_device.c: 752: {
 13111                           ;usb_device.c: 753: USBStallHandler();
 13112  0021E8  EC96  F01E         	call	_USBStallHandler	;wreg free
 13113  0021EC                     i2l8522:
 13114                           
 13115                           ;usb_device.c: 754: }
 13116                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13117  0021EC  B268               	btfsc	3944,1,c	;volatile
 13118  0021EE  A269               	btfss	3945,1,c	;volatile
 13119  0021F0  D00F               	goto	i2l8530
 13120                           
 13121                           ;usb_device.c: 757: {
 13122                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13123  0021F2  0E7F               	movlw	127
 13124  0021F4  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13125  0021F6  681E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13126  0021F8  0E00               	movlw	0
 13127  0021FA  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13128  0021FC  0E00               	movlw	0
 13129  0021FE  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13130  002200  0E00               	movlw	0
 13131  002202  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13132  002204  0E01               	movlw	1
 13133  002206  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13134  002208  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13135                           
 13136                           ;usb_device.c: 759: {UEIR = 0;};
 13137  00220C  0E00               	movlw	0
 13138  00220E  6E6A               	movwf	3946,c	;volatile
 13139  002210                     i2l8530:
 13140                           
 13141                           ;usb_device.c: 767: }
 13142                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 13143  002210  0E04               	movlw	4
 13144  002212  0100               	movlb	0	; () banked
 13145  002214  619A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 13146  002216  D002               	goto	i2l622
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;usb_device.c: 775: {
 13150                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 13151  002218  9AA1               	bcf	4001,5,c	;volatile
 13152                           
 13153                           ;usb_device.c: 777: return;
 13154  00221A  0012               	return	
 13155  00221C                     i2l622:
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;usb_device.c: 778: }
 13159                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 13160  00221C  A669               	btfss	3945,3,c	;volatile
 13161  00221E  D03C               	goto	i2l623
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;usb_device.c: 784: {
 13165                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 13166  002220  0E00               	movlw	0
 13167  002222  0100               	movlb	0	; () banked
 13168  002224  6FB8               	movwf	USBDeviceTasks@i& (0+255),b
 13169  002226                     i2l8536:
 13170                           
 13171                           ; BSR set to: 0
 13172  002226  0E03               	movlw	3
 13173  002228  0100               	movlb	0	; () banked
 13174  00222A  65B8               	cpfsgt	USBDeviceTasks@i& (0+255),b
 13175  00222C  D001               	goto	i2l624
 13176  00222E  D034               	goto	i2l623
 13177  002230                     i2l624:
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;usb_device.c: 786: {
 13181                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 13182  002230  A668               	btfss	3944,3,c	;volatile
 13183  002232  D032               	goto	i2l623
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;usb_device.c: 788: {
 13187                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 13188  002234  CF6C F04D          	movff	3948,_USTATcopy	;volatile
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 13192  002238  304D               	rrcf	_USTATcopy,w,c	;volatile
 13193  00223A  32E8               	rrcf	wreg,f,c
 13194  00223C  32E8               	rrcf	wreg,f,c
 13195  00223E  0B0F               	andlw	15
 13196  002240  6E40               	movwf	_endpoint_number,c	;volatile
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;usb_device.c: 793: (UIR &= 0xF7);
 13200  002242  9668               	bcf	3944,3,c	;volatile
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 13204  002244  B44D               	btfsc	_USTATcopy,2,c	;volatile
 13205  002246  D007               	goto	i2l8550
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;usb_device.c: 799: {
 13209                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 13210  002248  5040               	movf	_endpoint_number,w,c	;volatile
 13211  00224A  0D01               	mullw	1
 13212  00224C  0E88               	movlw	low _ep_data_out
 13213  00224E  24F3               	addwf	prodl,w,c
 13214  002250  6ED9               	movwf	fsr2l,c
 13215  002252  0E00               	movlw	high _ep_data_out
 13216  002254  D006               	goto	L6
 13217  002256                     i2l8550:
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;usb_device.c: 802: else
 13221                           ;usb_device.c: 803: {
 13222                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 13223  002256  5040               	movf	_endpoint_number,w,c	;volatile
 13224  002258  0D01               	mullw	1
 13225  00225A  0E85               	movlw	low _ep_data_in
 13226  00225C  24F3               	addwf	prodl,w,c
 13227  00225E  6ED9               	movwf	fsr2l,c
 13228  002260  0E00               	movlw	high _ep_data_in
 13229  002262                     L6:
 13230  002262  20F4               	addwfc	prodh,w,c
 13231  002264  6EDA               	movwf	fsr2h,c
 13232  002266  0100               	movlb	0	; () banked
 13233  002268  70DF               	btg	indf2,0,c
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;usb_device.c: 805: }
 13237                           ;usb_device.c: 810: if(endpoint_number == 0)
 13238                           
 13239                           ; BSR set to: 0
 13240  00226A  5040               	movf	_endpoint_number,w,c	;volatile
 13241  00226C  A4D8               	btfss	status,2,c
 13242  00226E  D003               	goto	i2l8556
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;usb_device.c: 811: {
 13246                           ;usb_device.c: 812: USBCtrlEPService();
 13247  002270  EC16  F016         	call	_USBCtrlEPService	;wreg free
 13248                           
 13249                           ;usb_device.c: 813: }
 13250  002274  D00E               	goto	i2l8558
 13251  002276                     i2l8556:
 13252                           
 13253                           ;usb_device.c: 814: else
 13254                           ;usb_device.c: 815: {
 13255                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 13256  002276  0E00               	movlw	0
 13257  002278  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13258  00227A  0E72               	movlw	114
 13259  00227C  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13260  00227E  0E4D               	movlw	low _USTATcopy
 13261  002280  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13262  002282  0E00               	movlw	high _USTATcopy
 13263  002284  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13264  002286  0E00               	movlw	0
 13265  002288  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13266  00228A  0E00               	movlw	0
 13267  00228C  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13268  00228E  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13269  002292                     i2l8558:
 13270  002292  0100               	movlb	0	; () banked
 13271  002294  2BB8               	incf	USBDeviceTasks@i& (0+255),f,b
 13272  002296  D7C7               	goto	i2l8536
 13273  002298                     i2l623:
 13274                           
 13275                           ;usb_device.c: 822: }
 13276                           ;usb_device.c: 823: }
 13277                           ;usb_device.c: 824: }
 13278                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 13279  002298  9AA1               	bcf	4001,5,c	;volatile
 13280  00229A  0012               	return		;funcret
 13281  00229C                     __end_of_USBDeviceTasks:
 13282                           	opt stack 0
 13283                           pclatu	equ	0xFFB
 13284                           pclath	equ	0xFFA
 13285                           tblptru	equ	0xFF8
 13286                           tblptrh	equ	0xFF7
 13287                           tblptrl	equ	0xFF6
 13288                           tablat	equ	0xFF5
 13289                           prodh	equ	0xFF4
 13290                           prodl	equ	0xFF3
 13291                           intcon	equ	0xFF2
 13292                           indf0	equ	0xFEF
 13293                           postinc0	equ	0xFEE
 13294                           fsr0h	equ	0xFEA
 13295                           fsr0l	equ	0xFE9
 13296                           wreg	equ	0xFE8
 13297                           indf1	equ	0xFE7
 13298                           postdec1	equ	0xFE5
 13299                           fsr1h	equ	0xFE2
 13300                           fsr1l	equ	0xFE1
 13301                           bsr	equ	0xFE0
 13302                           indf2	equ	0xFDF
 13303                           postinc2	equ	0xFDE
 13304                           postdec2	equ	0xFDD
 13305                           plusw2	equ	0xFDB
 13306                           fsr2h	equ	0xFDA
 13307                           fsr2l	equ	0xFD9
 13308                           status	equ	0xFD8
 13309                           
 13310 ;; *************** function i2_USBDeviceInit *****************
 13311 ;; Defined at:
 13312 ;;		line 298 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;		None
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;  USBDeviceIni    1   25[COMRAM] unsigned char 
 13317 ;; Return value:  Size  Location     Type
 13318 ;;		None               void
 13319 ;; Registers used:
 13320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0
 13327 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13329 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13330 ;;Total ram usage:        1 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    1
 13333 ;; This function calls:
 13334 ;;		i2_memset
 13335 ;; This function is called by:
 13336 ;;		_USBDeviceTasks
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text57
 13341  00229C                     __ptext57:
 13342                           	opt stack 0
 13343  00229C                     i2_USBDeviceInit:
 13344                           	opt stack 20
 13345                           
 13346                           ;usb_device.c: 300: uint8_t i;
 13347                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 13348                           
 13349                           ;incstack = 0
 13350  00229C  9AA0               	bcf	4000,5,c	;volatile
 13351                           
 13352                           ;usb_device.c: 305: {UEIR = 0;};
 13353  00229E  0E00               	movlw	0
 13354  0022A0  6E6A               	movwf	3946,c	;volatile
 13355                           
 13356                           ;usb_device.c: 308: {UIR = 0;};
 13357  0022A2  0E00               	movlw	0
 13358  0022A4  6E68               	movwf	3944,c	;volatile
 13359                           
 13360                           ;usb_device.c: 311: UEP0 = 0;
 13361  0022A6  0E00               	movlw	0
 13362  0022A8  6E70               	movwf	3952,c	;volatile
 13363                           
 13364                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 13365  0022AA  0E71               	movlw	113
 13366  0022AC  6E12               	movwf	i2memset@p1,c
 13367  0022AE  0E0F               	movlw	15
 13368  0022B0  6E13               	movwf	i2memset@p1+1,c
 13369  0022B2  0E00               	movlw	0
 13370  0022B4  6E15               	movwf	i2memset@c+1,c
 13371  0022B6  0E00               	movlw	0
 13372  0022B8  6E14               	movwf	i2memset@c,c
 13373  0022BA  0E00               	movlw	0
 13374  0022BC  6E17               	movwf	i2memset@n+1,c
 13375  0022BE  0E02               	movlw	2
 13376  0022C0  6E16               	movwf	i2memset@n,c
 13377  0022C2  EC86  F01F         	call	i2_memset	;wreg free
 13378                           
 13379                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13380  0022C6  0E16               	movlw	22
 13381  0022C8  6E6F               	movwf	3951,c	;volatile
 13382  0022CA  0E9F               	movlw	159
 13383  0022CC  6E6B               	movwf	3947,c	;volatile
 13384  0022CE  0E7B               	movlw	123
 13385  0022D0  6E69               	movwf	3945,c	;volatile
 13386                           
 13387                           ;usb_device.c: 318: ;
 13388                           ;usb_device.c: 321: ;
 13389                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13390  0022D2  0E00               	movlw	0
 13391  0022D4  6E1A               	movwf	i2USBDeviceInit@i,c
 13392  0022D6                     i2l8406:
 13393  0022D6  0E0B               	movlw	11
 13394  0022D8  641A               	cpfsgt	i2USBDeviceInit@i,c
 13395  0022DA  D001               	goto	i2l8410
 13396  0022DC  D00E               	goto	i2l600
 13397  0022DE                     i2l8410:
 13398                           
 13399                           ;usb_device.c: 325: {
 13400                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 13401  0022DE  501A               	movf	i2USBDeviceInit@i,w,c
 13402  0022E0  0D04               	mullw	4
 13403  0022E2  0E00               	movlw	0
 13404  0022E4  24F3               	addwf	prodl,w,c
 13405  0022E6  6ED9               	movwf	fsr2l,c
 13406  0022E8  0E04               	movlw	4
 13407  0022EA  20F4               	addwfc	prodh,w,c
 13408  0022EC  6EDA               	movwf	fsr2h,c
 13409  0022EE  6ADE               	clrf	postinc2,c
 13410  0022F0  6ADE               	clrf	postinc2,c
 13411  0022F2  6ADE               	clrf	postinc2,c
 13412  0022F4  6ADD               	clrf	postdec2,c
 13413  0022F6  2A1A               	incf	i2USBDeviceInit@i,f,c
 13414  0022F8  D7EE               	goto	i2l8406
 13415  0022FA                     i2l600:
 13416                           
 13417                           ;usb_device.c: 327: }
 13418                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 13419  0022FA  8C6D               	bsf	3949,6,c	;volatile
 13420                           
 13421                           ;usb_device.c: 333: UADDR = 0x00;
 13422  0022FC  0E00               	movlw	0
 13423  0022FE  6E6E               	movwf	3950,c	;volatile
 13424                           
 13425                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 13426  002300  986D               	bcf	3949,4,c	;volatile
 13427                           
 13428                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 13429  002302  9C6D               	bcf	3949,6,c	;volatile
 13430                           
 13431                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 13432  002304  D00C               	goto	i2l8430
 13433  002306                     i2l8422:
 13434                           
 13435                           ;usb_device.c: 343: {
 13436                           ;usb_device.c: 344: (UIR &= 0xF7);
 13437  002306  9668               	bcf	3944,3,c	;volatile
 13438                           
 13439                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 13440  002308  0E00               	movlw	0
 13441  00230A  0100               	movlb	0	; () banked
 13442  00230C  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 13446  00230E  0E00               	movlw	0
 13447  002310  0100               	movlb	0	; () banked
 13448  002312  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 13452  002314  0E00               	movlw	0
 13453  002316  0100               	movlb	0	; () banked
 13454  002318  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13455  00231A  0E00               	movlw	0
 13456  00231C  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13457  00231E                     i2l8430:
 13458  00231E  B668               	btfsc	3944,3,c	;volatile
 13459  002320  D7F2               	goto	i2l8422
 13460                           
 13461                           ;usb_device.c: 349: }
 13462                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 13463  002322  0E01               	movlw	1
 13464  002324  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13465                           
 13466                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 13467  002326  0E01               	movlw	1
 13468  002328  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13469                           
 13470                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 13471  00232A  0E00               	movlw	0
 13472  00232C  6E38               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13473                           
 13474                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 13475  00232E  0E00               	movlw	0
 13476  002330  6E39               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13477                           
 13478                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 13479  002332  0E00               	movlw	0
 13480  002334  6E37               	movwf	_USBBusIsSuspended,c	;volatile
 13481                           
 13482                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 13483  002336  0E00               	movlw	0
 13484  002338  6E1A               	movwf	i2USBDeviceInit@i,c
 13485  00233A                     i2l8434:
 13486  00233A  0E02               	movlw	2
 13487  00233C  641A               	cpfsgt	i2USBDeviceInit@i,c
 13488  00233E  D001               	goto	i2l8438
 13489  002340  D02E               	goto	i2l8444
 13490  002342                     i2l8438:
 13491                           
 13492                           ;usb_device.c: 363: {
 13493                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 13494  002342  501A               	movf	i2USBDeviceInit@i,w,c
 13495  002344  0D02               	mullw	2
 13496  002346  0E6E               	movlw	low _pBDTEntryIn
 13497  002348  24F3               	addwf	prodl,w,c
 13498  00234A  6ED9               	movwf	fsr2l,c
 13499  00234C  0E00               	movlw	high _pBDTEntryIn
 13500  00234E  20F4               	addwfc	prodh,w,c
 13501  002350  6EDA               	movwf	fsr2h,c
 13502  002352  0E00               	movlw	0
 13503  002354  6EDE               	movwf	postinc2,c
 13504  002356  0E00               	movlw	0
 13505  002358  6EDD               	movwf	postdec2,c
 13506                           
 13507                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 13508  00235A  501A               	movf	i2USBDeviceInit@i,w,c
 13509  00235C  0D02               	mullw	2
 13510  00235E  0E74               	movlw	low _pBDTEntryOut
 13511  002360  24F3               	addwf	prodl,w,c
 13512  002362  6ED9               	movwf	fsr2l,c
 13513  002364  0E00               	movlw	high _pBDTEntryOut
 13514  002366  20F4               	addwfc	prodh,w,c
 13515  002368  6EDA               	movwf	fsr2h,c
 13516  00236A  0E00               	movlw	0
 13517  00236C  6EDE               	movwf	postinc2,c
 13518  00236E  0E00               	movlw	0
 13519  002370  6EDD               	movwf	postdec2,c
 13520                           
 13521                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 13522  002372  501A               	movf	i2USBDeviceInit@i,w,c
 13523  002374  0D01               	mullw	1
 13524  002376  0E85               	movlw	low _ep_data_in
 13525  002378  24F3               	addwf	prodl,w,c
 13526  00237A  6ED9               	movwf	fsr2l,c
 13527  00237C  0E00               	movlw	high _ep_data_in
 13528  00237E  20F4               	addwfc	prodh,w,c
 13529  002380  6EDA               	movwf	fsr2h,c
 13530  002382  0E00               	movlw	0
 13531  002384  6EDF               	movwf	indf2,c
 13532                           
 13533                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 13534  002386  501A               	movf	i2USBDeviceInit@i,w,c
 13535  002388  0D01               	mullw	1
 13536  00238A  0E88               	movlw	low _ep_data_out
 13537  00238C  24F3               	addwf	prodl,w,c
 13538  00238E  6ED9               	movwf	fsr2l,c
 13539  002390  0E00               	movlw	high _ep_data_out
 13540  002392  20F4               	addwfc	prodh,w,c
 13541  002394  6EDA               	movwf	fsr2h,c
 13542  002396  0E00               	movlw	0
 13543  002398  6EDF               	movwf	indf2,c
 13544  00239A  2A1A               	incf	i2USBDeviceInit@i,f,c
 13545  00239C  D7CE               	goto	i2l8434
 13546  00239E                     i2l8444:
 13547                           
 13548                           ;usb_device.c: 368: }
 13549                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13550  00239E  0E08               	movlw	8
 13551  0023A0  0100               	movlb	0	; () banked
 13552  0023A2  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 13553  0023A4  0E04               	movlw	4
 13554  0023A6  0100               	movlb	0	; () banked
 13555  0023A8  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 13559  0023AA  0E16               	movlw	22
 13560  0023AC  6E70               	movwf	3952,c	;volatile
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13564  0023AE  0E04               	movlw	4
 13565  0023B0  0104               	movlb	4	; () banked
 13566  0023B2  6F03               	movwf	3,b	;volatile
 13567  0023B4  0E30               	movlw	48
 13568  0023B6  6F02               	movwf	2,b	;volatile
 13569                           
 13570                           ; BSR set to: 4
 13571                           ;usb_device.c: 376: BDT[0].CNT = 8;
 13572  0023B8  0E08               	movlw	8
 13573  0023BA  0104               	movlb	4	; () banked
 13574  0023BC  6F01               	movwf	1,b	;volatile
 13575                           
 13576                           ; BSR set to: 4
 13577                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 13578  0023BE  0E04               	movlw	4
 13579  0023C0  0104               	movlb	4	; () banked
 13580  0023C2  6F00               	movwf	0,b	;volatile
 13581                           
 13582                           ; BSR set to: 4
 13583                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 13584  0023C4  0104               	movlb	4	; () banked
 13585  0023C6  8F00               	bsf	0,7,b	;volatile
 13586                           
 13587                           ; BSR set to: 4
 13588                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 13589  0023C8  0E00               	movlw	0
 13590  0023CA  6E4C               	movwf	_USBActiveConfiguration,c	;volatile
 13591                           
 13592                           ; BSR set to: 4
 13593                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 13594  0023CC  0E00               	movlw	0
 13595  0023CE  0100               	movlb	0	; () banked
 13596  0023D0  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 13597                           
 13598                           ; BSR set to: 0
 13599  0023D2  0012               	return		;funcret
 13600  0023D4                     __end_ofi2_USBDeviceInit:
 13601                           	opt stack 0
 13602                           pclatu	equ	0xFFB
 13603                           pclath	equ	0xFFA
 13604                           tblptru	equ	0xFF8
 13605                           tblptrh	equ	0xFF7
 13606                           tblptrl	equ	0xFF6
 13607                           tablat	equ	0xFF5
 13608                           prodh	equ	0xFF4
 13609                           prodl	equ	0xFF3
 13610                           intcon	equ	0xFF2
 13611                           indf0	equ	0xFEF
 13612                           postinc0	equ	0xFEE
 13613                           fsr0h	equ	0xFEA
 13614                           fsr0l	equ	0xFE9
 13615                           wreg	equ	0xFE8
 13616                           indf1	equ	0xFE7
 13617                           postdec1	equ	0xFE5
 13618                           fsr1h	equ	0xFE2
 13619                           fsr1l	equ	0xFE1
 13620                           bsr	equ	0xFE0
 13621                           indf2	equ	0xFDF
 13622                           postinc2	equ	0xFDE
 13623                           postdec2	equ	0xFDD
 13624                           plusw2	equ	0xFDB
 13625                           fsr2h	equ	0xFDA
 13626                           fsr2l	equ	0xFD9
 13627                           status	equ	0xFD8
 13628                           
 13629 ;; *************** function _USBWakeFromSuspend *****************
 13630 ;; Defined at:
 13631 ;;		line 2302 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;		None               void
 13638 ;; Registers used:
 13639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13640 ;; Tracked objects:
 13641 ;;		On entry : 0/0
 13642 ;;		On exit  : 0/0
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used:    1
 13651 ;; Hardware stack levels required when called:    5
 13652 ;; This function calls:
 13653 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13654 ;; This function is called by:
 13655 ;;		_USBDeviceTasks
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659                           	psect	text58
 13660  003EDE                     __ptext58:
 13661                           	opt stack 0
 13662  003EDE                     _USBWakeFromSuspend:
 13663                           	opt stack 16
 13664                           
 13665                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;incstack = 0
 13669  003EDE  0E00               	movlw	0
 13670  003EE0  6E37               	movwf	_USBBusIsSuspended,c	;volatile
 13671                           
 13672                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13673  003EE2  0E00               	movlw	0
 13674  003EE4  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13675  003EE6  0E74               	movlw	116
 13676  003EE8  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13677  003EEA  0E00               	movlw	0
 13678  003EEC  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13679  003EEE  0E00               	movlw	0
 13680  003EF0  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13681  003EF2  0E00               	movlw	0
 13682  003EF4  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13683  003EF6  0E00               	movlw	0
 13684  003EF8  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13685  003EFA  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13686                           
 13687                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 13688  003EFE  926D               	bcf	3949,1,c	;volatile
 13689                           
 13690                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 13691  003F00  9469               	bcf	3945,2,c	;volatile
 13692                           
 13693                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 13694  003F02  D001               	goto	i2l8332
 13695  003F04                     i2l8330:
 13696                           
 13697                           ;usb_device.c: 2342: {
 13698                           ;usb_device.c: 2343: (UIR &= 0xFB);
 13699  003F04  9468               	bcf	3944,2,c	;volatile
 13700  003F06                     i2l8332:
 13701  003F06  A468               	btfss	3944,2,c	;volatile
 13702  003F08  0012               	return	
 13703  003F0A  D7FC               	goto	i2l8330
 13704  003F0C                     __end_of_USBWakeFromSuspend:
 13705                           	opt stack 0
 13706                           pclatu	equ	0xFFB
 13707                           pclath	equ	0xFFA
 13708                           tblptru	equ	0xFF8
 13709                           tblptrh	equ	0xFF7
 13710                           tblptrl	equ	0xFF6
 13711                           tablat	equ	0xFF5
 13712                           prodh	equ	0xFF4
 13713                           prodl	equ	0xFF3
 13714                           intcon	equ	0xFF2
 13715                           indf0	equ	0xFEF
 13716                           postinc0	equ	0xFEE
 13717                           fsr0h	equ	0xFEA
 13718                           fsr0l	equ	0xFE9
 13719                           wreg	equ	0xFE8
 13720                           indf1	equ	0xFE7
 13721                           postdec1	equ	0xFE5
 13722                           fsr1h	equ	0xFE2
 13723                           fsr1l	equ	0xFE1
 13724                           bsr	equ	0xFE0
 13725                           indf2	equ	0xFDF
 13726                           postinc2	equ	0xFDE
 13727                           postdec2	equ	0xFDD
 13728                           plusw2	equ	0xFDB
 13729                           fsr2h	equ	0xFDA
 13730                           fsr2l	equ	0xFD9
 13731                           status	equ	0xFD8
 13732                           
 13733 ;; *************** function _USBSuspend *****************
 13734 ;; Defined at:
 13735 ;;		line 2245 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 13736 ;; Parameters:    Size  Location     Type
 13737 ;;		None
 13738 ;; Auto vars:     Size  Location     Type
 13739 ;;		None
 13740 ;; Return value:  Size  Location     Type
 13741 ;;		None               void
 13742 ;; Registers used:
 13743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13749 ;;      Params:         0       0       0       0       0       0       0       0       0
 13750 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13752 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13753 ;;Total ram usage:        0 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:    5
 13756 ;; This function calls:
 13757 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13758 ;; This function is called by:
 13759 ;;		_USBDeviceTasks
 13760 ;; This function uses a non-reentrant model
 13761 ;;
 13762                           
 13763                           	psect	text59
 13764  003F8C                     __ptext59:
 13765                           	opt stack 0
 13766  003F8C                     _USBSuspend:
 13767                           	opt stack 16
 13768                           
 13769                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 13770                           
 13771                           ;incstack = 0
 13772  003F8C  8469               	bsf	3945,2,c	;volatile
 13773                           
 13774                           ;usb_device.c: 2271: (UIR &= 0xEF);
 13775  003F8E  9868               	bcf	3944,4,c	;volatile
 13776                           
 13777                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 13778  003F90  826D               	bsf	3949,1,c	;volatile
 13779                           
 13780                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 13781  003F92  0E01               	movlw	1
 13782  003F94  6E37               	movwf	_USBBusIsSuspended,c	;volatile
 13783                           
 13784                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 13785  003F96  0E00               	movlw	0
 13786  003F98  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13787  003F9A  0E75               	movlw	117
 13788  003F9C  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13789  003F9E  0E00               	movlw	0
 13790  003FA0  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13791  003FA2  0E00               	movlw	0
 13792  003FA4  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13793  003FA6  0E00               	movlw	0
 13794  003FA8  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13795  003FAA  0E00               	movlw	0
 13796  003FAC  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13797  003FAE  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13798  003FB2  0012               	return		;funcret
 13799  003FB4                     __end_of_USBSuspend:
 13800                           	opt stack 0
 13801                           pclatu	equ	0xFFB
 13802                           pclath	equ	0xFFA
 13803                           tblptru	equ	0xFF8
 13804                           tblptrh	equ	0xFF7
 13805                           tblptrl	equ	0xFF6
 13806                           tablat	equ	0xFF5
 13807                           prodh	equ	0xFF4
 13808                           prodl	equ	0xFF3
 13809                           intcon	equ	0xFF2
 13810                           indf0	equ	0xFEF
 13811                           postinc0	equ	0xFEE
 13812                           fsr0h	equ	0xFEA
 13813                           fsr0l	equ	0xFE9
 13814                           wreg	equ	0xFE8
 13815                           indf1	equ	0xFE7
 13816                           postdec1	equ	0xFE5
 13817                           fsr1h	equ	0xFE2
 13818                           fsr1l	equ	0xFE1
 13819                           bsr	equ	0xFE0
 13820                           indf2	equ	0xFDF
 13821                           postinc2	equ	0xFDE
 13822                           postdec2	equ	0xFDD
 13823                           plusw2	equ	0xFDB
 13824                           fsr2h	equ	0xFDA
 13825                           fsr2l	equ	0xFD9
 13826                           status	equ	0xFD8
 13827                           
 13828 ;; *************** function _USBStallHandler *****************
 13829 ;; Defined at:
 13830 ;;		line 2202 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;		None
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;		None               void
 13837 ;; Registers used:
 13838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13846 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13847 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13848 ;;Total ram usage:        1 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; This function calls:
 13851 ;;		Nothing
 13852 ;; This function is called by:
 13853 ;;		_USBDeviceTasks
 13854 ;; This function uses a non-reentrant model
 13855 ;;
 13856                           
 13857                           	psect	text60
 13858  003D2C                     __ptext60:
 13859                           	opt stack 0
 13860  003D2C                     _USBStallHandler:
 13861                           	opt stack 21
 13862                           
 13863                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 13864                           
 13865                           ;incstack = 0
 13866  003D2C  A070               	btfss	3952,0,c	;volatile
 13867  003D2E  D01D               	goto	i2l762
 13868                           
 13869                           ;usb_device.c: 2215: {
 13870                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 13871  003D30  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13872  003D34  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13873  003D38  0E80               	movlw	128
 13874  003D3A  18DE               	xorwf	postinc2,w,c
 13875  003D3C  A4D8               	btfss	status,2,c
 13876  003D3E  D014               	goto	i2l8354
 13877  003D40  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 13878  003D44  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13879  003D48  0E84               	movlw	132
 13880  003D4A  18DE               	xorwf	postinc2,w,c
 13881  003D4C  A4D8               	btfss	status,2,c
 13882  003D4E  D00C               	goto	i2l8354
 13883                           
 13884                           ;usb_device.c: 2218: {
 13885                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13886  003D50  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13887  003D54  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13888  003D58  0E0C               	movlw	12
 13889  003D5A  6EDF               	movwf	indf2,c
 13890                           
 13891                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13892  003D5C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13893  003D60  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13894  003D64  0E00               	movlw	0
 13895  003D66  8EDB               	bsf	plusw2,7,c
 13896  003D68                     i2l8354:
 13897                           
 13898                           ;usb_device.c: 2222: }
 13899                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 13900  003D68  9070               	bcf	3952,0,c	;volatile
 13901  003D6A                     i2l762:
 13902                           
 13903                           ;usb_device.c: 2224: }
 13904                           ;usb_device.c: 2226: (UIR &= 0xDF);
 13905  003D6A  9A68               	bcf	3944,5,c	;volatile
 13906  003D6C  0012               	return		;funcret
 13907  003D6E                     __end_of_USBStallHandler:
 13908                           	opt stack 0
 13909                           pclatu	equ	0xFFB
 13910                           pclath	equ	0xFFA
 13911                           tblptru	equ	0xFF8
 13912                           tblptrh	equ	0xFF7
 13913                           tblptrl	equ	0xFF6
 13914                           tablat	equ	0xFF5
 13915                           prodh	equ	0xFF4
 13916                           prodl	equ	0xFF3
 13917                           intcon	equ	0xFF2
 13918                           indf0	equ	0xFEF
 13919                           postinc0	equ	0xFEE
 13920                           fsr0h	equ	0xFEA
 13921                           fsr0l	equ	0xFE9
 13922                           wreg	equ	0xFE8
 13923                           indf1	equ	0xFE7
 13924                           postdec1	equ	0xFE5
 13925                           fsr1h	equ	0xFE2
 13926                           fsr1l	equ	0xFE1
 13927                           bsr	equ	0xFE0
 13928                           indf2	equ	0xFDF
 13929                           postinc2	equ	0xFDE
 13930                           postdec2	equ	0xFDD
 13931                           plusw2	equ	0xFDB
 13932                           fsr2h	equ	0xFDA
 13933                           fsr2l	equ	0xFD9
 13934                           status	equ	0xFD8
 13935                           
 13936 ;; *************** function _USBCtrlEPService *****************
 13937 ;; Defined at:
 13938 ;;		line 2369 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;		None
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;  setup_cnt       1   43[COMRAM] unsigned char 
 13943 ;; Return value:  Size  Location     Type
 13944 ;;		None               void
 13945 ;; Registers used:
 13946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13952 ;;      Params:         0       0       0       0       0       0       0       0       0
 13953 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13954 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13955 ;;      Totals:         1       2       0       0       0       0       0       0       0
 13956 ;;Total ram usage:        3 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; Hardware stack levels required when called:    8
 13959 ;; This function calls:
 13960 ;;		_USBCtrlTrfInHandler
 13961 ;;		_USBCtrlTrfOutHandler
 13962 ;;		_USBCtrlTrfSetupHandler
 13963 ;; This function is called by:
 13964 ;;		_USBDeviceTasks
 13965 ;; This function uses a non-reentrant model
 13966 ;;
 13967                           
 13968                           	psect	text61
 13969  002C2C                     __ptext61:
 13970                           	opt stack 0
 13971  002C2C                     _USBCtrlEPService:
 13972                           	opt stack 13
 13973                           
 13974                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 13975                           
 13976                           ;incstack = 0
 13977  002C2C  0E2D               	movlw	45
 13978  002C2E  6E3D               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 13979                           
 13980                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 13981  002C30  C04D  F0B6         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 13982  002C34  0EFD               	movlw	253
 13983  002C36  0100               	movlb	0	; () banked
 13984  002C38  17B6               	andwf	??_USBCtrlEPService& (0+255),f,b
 13985  002C3A  A4D8               	btfss	status,2,c
 13986  002C3C  D05A               	goto	i2l8388
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;usb_device.c: 2380: {
 13990                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 13991  002C3E  C04D  F0B6         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 13992  002C42  0100               	movlb	0	; () banked
 13993  002C44  90D8               	bcf	status,0,c
 13994  002C46  33B6               	rrcf	??_USBCtrlEPService& (0+255),f,b
 13995  002C48  0E3F               	movlw	63
 13996  002C4A  0100               	movlb	0	; () banked
 13997  002C4C  17B6               	andwf	??_USBCtrlEPService& (0+255),f,b
 13998  002C4E  0100               	movlb	0	; () banked
 13999  002C50  51B6               	movf	??_USBCtrlEPService& (0+255),w,b
 14000  002C52  0D04               	mullw	4
 14001  002C54  0E00               	movlw	0
 14002  002C56  24F3               	addwf	prodl,w,c
 14003  002C58  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 14004  002C5A  0E04               	movlw	4
 14005  002C5C  20F4               	addwfc	prodh,w,c
 14006  002C5E  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14010  002C60  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14011  002C64  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14015  002C68  0E04               	movlw	4
 14016  002C6A  1A31               	xorwf	_pBDTEntryEP0OutNext,f,c
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14020  002C6C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14021  002C70  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14022  002C74  30DF               	rrcf	indf2,w,c
 14023  002C76  32E8               	rrcf	wreg,f,c
 14024  002C78  0B0F               	andlw	15
 14025  002C7A  0A0D               	xorlw	13
 14026  002C7C  A4D8               	btfss	status,2,c
 14027  002C7E  D036               	goto	i2l8386
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;usb_device.c: 2397: {
 14031                           ;usb_device.c: 2398: unsigned char setup_cnt;
 14032                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14033  002C80  0E00               	movlw	0
 14034  002C82  6E2C               	movwf	USBCtrlEPService@setup_cnt,c
 14035  002C84                     i2l8370:
 14036                           
 14037                           ; BSR set to: 0
 14038  002C84  0E07               	movlw	7
 14039  002C86  642C               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14040  002C88  D001               	goto	i2l8374
 14041  002C8A  D023               	goto	i2l8382
 14042  002C8C                     i2l8374:
 14043                           
 14044                           ;usb_device.c: 2405: {
 14045                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14046  002C8C  EE20 F002          	lfsr	2,2
 14047  002C90  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14048  002C92  26D9               	addwf	fsr2l,f,c
 14049  002C94  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14050  002C96  22DA               	addwfc	fsr2h,f,c
 14051  002C98  CFDE F0B6          	movff	postinc2,??_USBCtrlEPService
 14052  002C9C  CFDD F0B7          	movff	postdec2,??_USBCtrlEPService+1
 14053  002CA0  C0B6  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14054  002CA4  C0B7  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14055  002CA8  502C               	movf	USBCtrlEPService@setup_cnt,w,c
 14056  002CAA  0D01               	mullw	1
 14057  002CAC  0E30               	movlw	48
 14058  002CAE  24F3               	addwf	prodl,w,c
 14059  002CB0  6EE1               	movwf	fsr1l,c
 14060  002CB2  0E04               	movlw	4
 14061  002CB4  20F4               	addwfc	prodh,w,c
 14062  002CB6  6EE2               	movwf	fsr1h,c
 14063  002CB8  CFDF FFE7          	movff	indf2,indf1
 14064                           
 14065                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 14066  002CBC  EE20 F002          	lfsr	2,2
 14067  002CC0  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14068  002CC2  26D9               	addwf	fsr2l,f,c
 14069  002CC4  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14070  002CC6  22DA               	addwfc	fsr2h,f,c
 14071  002CC8  2ADE               	incf	postinc2,f,c
 14072  002CCA  0E00               	movlw	0
 14073  002CCC  22DD               	addwfc	postdec2,f,c
 14074  002CCE  2A2C               	incf	USBCtrlEPService@setup_cnt,f,c
 14075  002CD0  D7D9               	goto	i2l8370
 14076  002CD2                     i2l8382:
 14077                           
 14078                           ;usb_device.c: 2408: }
 14079                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14080  002CD2  EE20 F002          	lfsr	2,2
 14081  002CD6  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14082  002CD8  26D9               	addwf	fsr2l,f,c
 14083  002CDA  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14084  002CDC  22DA               	addwfc	fsr2h,f,c
 14085  002CDE  0E30               	movlw	48
 14086  002CE0  6EDE               	movwf	postinc2,c
 14087  002CE2  0E04               	movlw	4
 14088  002CE4  6EDD               	movwf	postdec2,c
 14089                           
 14090                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 14091  002CE6  EC44  F01B         	call	_USBCtrlTrfSetupHandler	;wreg free
 14092                           
 14093                           ;usb_device.c: 2413: }
 14094  002CEA  0012               	return	
 14095  002CEC                     i2l8386:
 14096                           
 14097                           ;usb_device.c: 2414: else
 14098                           ;usb_device.c: 2415: {
 14099                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 14100  002CEC  ECCD  F01D         	call	_USBCtrlTrfOutHandler	;wreg free
 14101                           
 14102                           ;usb_device.c: 2418: }
 14103                           ;usb_device.c: 2419: }
 14104  002CF0  0012               	return	
 14105  002CF2                     i2l8388:
 14106                           
 14107                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 14108  002CF2  504D               	movf	_USTATcopy,w,c	;volatile
 14109  002CF4  0BFD               	andlw	253
 14110  002CF6  0A04               	xorlw	4
 14111  002CF8  A4D8               	btfss	status,2,c
 14112  002CFA  0012               	return	
 14113                           
 14114                           ;usb_device.c: 2421: {
 14115                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 14116  002CFC  ECE3  F018         	call	_USBCtrlTrfInHandler	;wreg free
 14117  002D00  0012               	return	
 14118  002D02                     __end_of_USBCtrlEPService:
 14119                           	opt stack 0
 14120                           pclatu	equ	0xFFB
 14121                           pclath	equ	0xFFA
 14122                           tblptru	equ	0xFF8
 14123                           tblptrh	equ	0xFF7
 14124                           tblptrl	equ	0xFF6
 14125                           tablat	equ	0xFF5
 14126                           prodh	equ	0xFF4
 14127                           prodl	equ	0xFF3
 14128                           intcon	equ	0xFF2
 14129                           indf0	equ	0xFEF
 14130                           postinc0	equ	0xFEE
 14131                           fsr0h	equ	0xFEA
 14132                           fsr0l	equ	0xFE9
 14133                           wreg	equ	0xFE8
 14134                           indf1	equ	0xFE7
 14135                           postdec1	equ	0xFE5
 14136                           fsr1h	equ	0xFE2
 14137                           fsr1l	equ	0xFE1
 14138                           bsr	equ	0xFE0
 14139                           indf2	equ	0xFDF
 14140                           postinc2	equ	0xFDE
 14141                           postdec2	equ	0xFDD
 14142                           plusw2	equ	0xFDB
 14143                           fsr2h	equ	0xFDA
 14144                           fsr2l	equ	0xFD9
 14145                           status	equ	0xFD8
 14146                           
 14147 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14148 ;; Defined at:
 14149 ;;		line 2469 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;		None
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;		None
 14154 ;; Return value:  Size  Location     Type
 14155 ;;		None               void
 14156 ;; Registers used:
 14157 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0
 14164 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14166 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14167 ;;Total ram usage:        0 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:    7
 14170 ;; This function calls:
 14171 ;;		_USBCheckStdRequest
 14172 ;;		_USBCtrlEPServiceComplete
 14173 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14174 ;; This function is called by:
 14175 ;;		_USBCtrlEPService
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           	psect	text62
 14180  003688                     __ptext62:
 14181                           	opt stack 0
 14182  003688                     _USBCtrlTrfSetupHandler:
 14183                           	opt stack 13
 14184                           
 14185                           ;usb_device.c: 2474: shortPacketStatus = 0;
 14186                           
 14187                           ;incstack = 0
 14188  003688  0E00               	movlw	0
 14189  00368A  6E41               	movwf	_shortPacketStatus,c	;volatile
 14190                           
 14191                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 14192  00368C  0E00               	movlw	0
 14193  00368E  6E3A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 14194                           
 14195                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 14196  003690  0E00               	movlw	0
 14197  003692  6E38               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14198                           
 14199                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 14200  003694  0E00               	movlw	0
 14201  003696  6E39               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14202                           
 14203                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 14204  003698  0E00               	movlw	0
 14205  00369A  6E35               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14206                           
 14207                           ;usb_device.c: 2479: controlTransferState = 0;
 14208  00369C  0E00               	movlw	0
 14209  00369E  6E3E               	movwf	_controlTransferState,c	;volatile
 14210                           
 14211                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14212  0036A0  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14213  0036A4  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14214  0036A8  0E7F               	movlw	127
 14215  0036AA  16DF               	andwf	indf2,f,c
 14216                           
 14217                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14218  0036AC  0E04               	movlw	4
 14219  0036AE  0100               	movlb	0	; () banked
 14220  0036B0  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14224  0036B2  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14225  0036B6  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14226  0036BA  0E7F               	movlw	127
 14227  0036BC  16DF               	andwf	indf2,f,c
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14231  0036BE  0E04               	movlw	4
 14232  0036C0  0100               	movlb	0	; () banked
 14233  0036C2  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 14237  0036C4  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14238  0036C8  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14239  0036CC  0E7F               	movlw	127
 14240  0036CE  16DF               	andwf	indf2,f,c
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 14244  0036D0  0E00               	movlw	0
 14245  0036D2  0100               	movlb	0	; () banked
 14246  0036D4  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 14250  0036D6  0E00               	movlw	0
 14251  0036D8  0100               	movlb	0	; () banked
 14252  0036DA  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 14253  0036DC  0E00               	movlw	0
 14254  0036DE  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 14258  0036E0  0E00               	movlw	0
 14259  0036E2  0100               	movlb	0	; () banked
 14260  0036E4  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 14264  0036E6  0E00               	movlw	0
 14265  0036E8  0100               	movlb	0	; () banked
 14266  0036EA  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14267  0036EC  0E00               	movlw	0
 14268  0036EE  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;usb_device.c: 2503: USBCheckStdRequest();
 14272  0036F0  EC76  F013         	call	_USBCheckStdRequest	;wreg free
 14273                           
 14274                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 14275  0036F4  0E00               	movlw	0
 14276  0036F6  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14277  0036F8  0E03               	movlw	3
 14278  0036FA  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14279  0036FC  0E00               	movlw	0
 14280  0036FE  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14281  003700  0E00               	movlw	0
 14282  003702  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14283  003704  0E00               	movlw	0
 14284  003706  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14285  003708  0E00               	movlw	0
 14286  00370A  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14287  00370C  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14288                           
 14289                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 14290  003710  ECFC  F012         	call	_USBCtrlEPServiceComplete	;wreg free
 14291  003714  0012               	return		;funcret
 14292  003716                     __end_of_USBCtrlTrfSetupHandler:
 14293                           	opt stack 0
 14294                           pclatu	equ	0xFFB
 14295                           pclath	equ	0xFFA
 14296                           tblptru	equ	0xFF8
 14297                           tblptrh	equ	0xFF7
 14298                           tblptrl	equ	0xFF6
 14299                           tablat	equ	0xFF5
 14300                           prodh	equ	0xFF4
 14301                           prodl	equ	0xFF3
 14302                           intcon	equ	0xFF2
 14303                           indf0	equ	0xFEF
 14304                           postinc0	equ	0xFEE
 14305                           fsr0h	equ	0xFEA
 14306                           fsr0l	equ	0xFE9
 14307                           wreg	equ	0xFE8
 14308                           indf1	equ	0xFE7
 14309                           postdec1	equ	0xFE5
 14310                           fsr1h	equ	0xFE2
 14311                           fsr1l	equ	0xFE1
 14312                           bsr	equ	0xFE0
 14313                           indf2	equ	0xFDF
 14314                           postinc2	equ	0xFDE
 14315                           postdec2	equ	0xFDD
 14316                           plusw2	equ	0xFDB
 14317                           fsr2h	equ	0xFDA
 14318                           fsr2l	equ	0xFD9
 14319                           status	equ	0xFD8
 14320                           
 14321 ;; *************** function _USBCtrlEPServiceComplete *****************
 14322 ;; Defined at:
 14323 ;;		line 1616 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;		None
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;		None
 14328 ;; Return value:  Size  Location     Type
 14329 ;;		None               void
 14330 ;; Registers used:
 14331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14332 ;; Tracked objects:
 14333 ;;		On entry : 0/0
 14334 ;;		On exit  : 0/0
 14335 ;;		Unchanged: 0/0
 14336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14337 ;;      Params:         0       0       0       0       0       0       0       0       0
 14338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14340 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14341 ;;Total ram usage:        0 bytes
 14342 ;; Hardware stack levels used:    1
 14343 ;; Hardware stack levels required when called:    2
 14344 ;; This function calls:
 14345 ;;		_USBCtrlEPAllowDataStage
 14346 ;;		_USBCtrlEPAllowStatusStage
 14347 ;; This function is called by:
 14348 ;;		_USBCtrlTrfSetupHandler
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text63
 14353  0025F8                     __ptext63:
 14354                           	opt stack 0
 14355  0025F8                     _USBCtrlEPServiceComplete:
 14356                           	opt stack 17
 14357                           
 14358                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 14359                           
 14360                           ;incstack = 0
 14361  0025F8  986D               	bcf	3949,4,c	;volatile
 14362                           
 14363                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 14364  0025FA  0100               	movlb	0	; () banked
 14365  0025FC  BF6B               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 14366  0025FE  D039               	goto	i2l686
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;usb_device.c: 1629: {
 14370                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 14371  002600  0100               	movlb	0	; () banked
 14372  002602  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 14373  002604  D00B               	goto	i2l7720
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;usb_device.c: 1631: {
 14377                           ;usb_device.c: 1632: controlTransferState = 2;
 14378  002606  0E02               	movlw	2
 14379  002608  6E3E               	movwf	_controlTransferState,c	;volatile
 14380                           
 14381                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 14382  00260A  5039               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 14383  00260C  B4D8               	btfsc	status,2,c
 14384                           
 14385                           ; BSR set to: 0
 14386                           ;usb_device.c: 1644: {
 14387                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 14388  00260E  EC5E  F01A         	call	_USBCtrlEPAllowDataStage	;wreg free
 14389                           
 14390                           ;usb_device.c: 1646: }
 14391                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 14392  002612  0E00               	movlw	0
 14393  002614  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14394                           
 14395                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 14396  002616  0E00               	movlw	0
 14397  002618  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14398                           
 14399                           ;usb_device.c: 1652: }
 14400  00261A  0012               	return	
 14401  00261C                     i2l7720:
 14402                           
 14403                           ;usb_device.c: 1653: else
 14404                           ;usb_device.c: 1654: {
 14405                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 14406  00261C  EE20 F001          	lfsr	2,1
 14407  002620  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14408  002622  26D9               	addwf	fsr2l,f,c
 14409  002624  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14410  002626  22DA               	addwfc	fsr2h,f,c
 14411  002628  0E08               	movlw	8
 14412  00262A  6EDF               	movwf	indf2,c
 14413                           
 14414                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14415  00262C  EE20 F002          	lfsr	2,2
 14416  002630  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14417  002632  26D9               	addwf	fsr2l,f,c
 14418  002634  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14419  002636  22DA               	addwfc	fsr2h,f,c
 14420  002638  0E30               	movlw	48
 14421  00263A  6EDE               	movwf	postinc2,c
 14422  00263C  0E04               	movlw	4
 14423  00263E  6EDD               	movwf	postdec2,c
 14424                           
 14425                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14426  002640  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14427  002644  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14428  002648  0E0C               	movlw	12
 14429  00264A  6EDF               	movwf	indf2,c
 14430                           
 14431                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14432  00264C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14433  002650  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14434  002654  0E00               	movlw	0
 14435  002656  8EDB               	bsf	plusw2,7,c
 14436                           
 14437                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 14438  002658  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14439  00265C  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14440  002660  0E04               	movlw	4
 14441  002662  6EDF               	movwf	indf2,c
 14442                           
 14443                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14444  002664  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14445  002668  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14446  00266C  0E00               	movlw	0
 14447  00266E  8EDB               	bsf	plusw2,7,c
 14448                           
 14449                           ;usb_device.c: 1665: }
 14450                           ;usb_device.c: 1666: }
 14451  002670  0012               	return	
 14452  002672                     i2l686:
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;usb_device.c: 1667: else
 14456                           ;usb_device.c: 1668: {
 14457                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 14458  002672  0104               	movlb	4	; () banked
 14459  002674  AF30               	btfss	48,7,b	;volatile
 14460  002676  D010               	goto	i2l7740
 14461                           
 14462                           ; BSR set to: 4
 14463                           ;usb_device.c: 1670: {
 14464                           ;usb_device.c: 1671: controlTransferState = 1;
 14465  002678  0E01               	movlw	1
 14466  00267A  6E3E               	movwf	_controlTransferState,c	;volatile
 14467                           
 14468                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 14469  00267C  5038               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 14470  00267E  B4D8               	btfsc	status,2,c
 14471                           
 14472                           ; BSR set to: 4
 14473                           ;usb_device.c: 1686: {
 14474                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 14475  002680  EC5E  F01A         	call	_USBCtrlEPAllowDataStage	;wreg free
 14476                           
 14477                           ;usb_device.c: 1688: }
 14478                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 14479  002684  0E00               	movlw	0
 14480  002686  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14481                           
 14482                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 14483  002688  0E00               	movlw	0
 14484  00268A  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14485                           
 14486                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 14487  00268C  503A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14488  00268E  A4D8               	btfss	status,2,c
 14489  002690  0012               	return	
 14490                           
 14491                           ;usb_device.c: 1713: {
 14492                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 14493  002692  EC81  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14494                           
 14495                           ;usb_device.c: 1715: }
 14496                           ;usb_device.c: 1716: }
 14497  002696  0012               	return	
 14498  002698                     i2l7740:
 14499                           
 14500                           ;usb_device.c: 1717: else
 14501                           ;usb_device.c: 1718: {
 14502                           ;usb_device.c: 1729: controlTransferState = 2;
 14503  002698  0E02               	movlw	2
 14504  00269A  6E3E               	movwf	_controlTransferState,c	;volatile
 14505                           
 14506                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 14507  00269C  EE20 F001          	lfsr	2,1
 14508  0026A0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14509  0026A2  26D9               	addwf	fsr2l,f,c
 14510  0026A4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14511  0026A6  22DA               	addwfc	fsr2h,f,c
 14512  0026A8  0E08               	movlw	8
 14513  0026AA  6EDF               	movwf	indf2,c
 14514                           
 14515                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14516  0026AC  EE20 F002          	lfsr	2,2
 14517  0026B0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14518  0026B2  26D9               	addwf	fsr2l,f,c
 14519  0026B4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14520  0026B6  22DA               	addwfc	fsr2h,f,c
 14521  0026B8  0E30               	movlw	48
 14522  0026BA  6EDE               	movwf	postinc2,c
 14523  0026BC  0E04               	movlw	4
 14524  0026BE  6EDD               	movwf	postdec2,c
 14525                           
 14526                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14527  0026C0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14528  0026C4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14529  0026C8  0E04               	movlw	4
 14530  0026CA  6EDF               	movwf	indf2,c
 14531                           
 14532                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14533  0026CC  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14534  0026D0  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14535  0026D4  0E00               	movlw	0
 14536  0026D6  8EDB               	bsf	plusw2,7,c
 14537                           
 14538                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 14539  0026D8  0E00               	movlw	0
 14540  0026DA  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14541                           
 14542                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 14543  0026DC  0E00               	movlw	0
 14544  0026DE  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14545                           
 14546                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 14547  0026E0  503A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14548  0026E2  A4D8               	btfss	status,2,c
 14549  0026E4  0012               	return	
 14550                           
 14551                           ;usb_device.c: 1741: {
 14552                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 14553  0026E6  EC81  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14554  0026EA  0012               	return	
 14555  0026EC                     __end_of_USBCtrlEPServiceComplete:
 14556                           	opt stack 0
 14557                           pclatu	equ	0xFFB
 14558                           pclath	equ	0xFFA
 14559                           tblptru	equ	0xFF8
 14560                           tblptrh	equ	0xFF7
 14561                           tblptrl	equ	0xFF6
 14562                           tablat	equ	0xFF5
 14563                           prodh	equ	0xFF4
 14564                           prodl	equ	0xFF3
 14565                           intcon	equ	0xFF2
 14566                           indf0	equ	0xFEF
 14567                           postinc0	equ	0xFEE
 14568                           fsr0h	equ	0xFEA
 14569                           fsr0l	equ	0xFE9
 14570                           wreg	equ	0xFE8
 14571                           indf1	equ	0xFE7
 14572                           postdec1	equ	0xFE5
 14573                           fsr1h	equ	0xFE2
 14574                           fsr1l	equ	0xFE1
 14575                           bsr	equ	0xFE0
 14576                           indf2	equ	0xFDF
 14577                           postinc2	equ	0xFDE
 14578                           postdec2	equ	0xFDD
 14579                           plusw2	equ	0xFDB
 14580                           fsr2h	equ	0xFDA
 14581                           fsr2l	equ	0xFD9
 14582                           status	equ	0xFD8
 14583                           
 14584 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14585 ;; Defined at:
 14586 ;;		line 1488 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;		None
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;		None               void
 14593 ;; Registers used:
 14594 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14600 ;;      Params:         0       0       0       0       0       0       0       0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14603 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14604 ;;Total ram usage:        0 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    1
 14607 ;; This function calls:
 14608 ;;		_USBCtrlTrfTxService
 14609 ;; This function is called by:
 14610 ;;		_USBCtrlEPServiceComplete
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           	psect	text64
 14615  0034BC                     __ptext64:
 14616                           	opt stack 0
 14617  0034BC                     _USBCtrlEPAllowDataStage:
 14618                           	opt stack 17
 14619                           
 14620                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 14621                           
 14622                           ;incstack = 0
 14623  0034BC  0E00               	movlw	0
 14624  0034BE  6E38               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14625                           
 14626                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 14627  0034C0  0E00               	movlw	0
 14628  0034C2  6E39               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14629                           
 14630                           ;usb_device.c: 1493: if(controlTransferState == 2)
 14631  0034C4  0E02               	movlw	2
 14632  0034C6  183E               	xorwf	_controlTransferState,w,c	;volatile
 14633  0034C8  A4D8               	btfss	status,2,c
 14634  0034CA  D01F               	goto	i2l7040
 14635                           
 14636                           ;usb_device.c: 1494: {
 14637                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 14638  0034CC  EE20 F001          	lfsr	2,1
 14639  0034D0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14640  0034D2  26D9               	addwf	fsr2l,f,c
 14641  0034D4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14642  0034D6  22DA               	addwfc	fsr2h,f,c
 14643  0034D8  0E08               	movlw	8
 14644  0034DA  6EDF               	movwf	indf2,c
 14645                           
 14646                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14647  0034DC  EE20 F002          	lfsr	2,2
 14648  0034E0  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14649  0034E2  26D9               	addwf	fsr2l,f,c
 14650  0034E4  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14651  0034E6  22DA               	addwfc	fsr2h,f,c
 14652  0034E8  0E38               	movlw	56
 14653  0034EA  6EDE               	movwf	postinc2,c
 14654  0034EC  0E04               	movlw	4
 14655  0034EE  6EDD               	movwf	postdec2,c
 14656                           
 14657                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14658  0034F0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14659  0034F4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14660  0034F8  0E48               	movlw	72
 14661  0034FA  6EDF               	movwf	indf2,c
 14662                           
 14663                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14664  0034FC  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14665  003500  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14666  003504  0E00               	movlw	0
 14667  003506  8EDB               	bsf	plusw2,7,c
 14668                           
 14669                           ;usb_device.c: 1500: }
 14670  003508  0012               	return	
 14671  00350A                     i2l7040:
 14672                           
 14673                           ;usb_device.c: 1501: else
 14674                           ;usb_device.c: 1502: {
 14675                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 14676  00350A  0100               	movlb	0	; () banked
 14677  00350C  516C               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 14678  00350E  0104               	movlb	4	; () banked
 14679  003510  5D36               	subwf	54,w,b	;volatile
 14680  003512  0100               	movlb	0	; () banked
 14681  003514  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 14682  003516  0104               	movlb	4	; () banked
 14683  003518  5937               	subwfb	55,w,b	;volatile
 14684  00351A  B0D8               	btfsc	status,0,c
 14685  00351C  D004               	goto	i2l7044
 14686                           
 14687                           ; BSR set to: 4
 14688                           ;usb_device.c: 1506: {
 14689                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 14690  00351E  C436 F06C          	movff	1078,_inPipes+4	;volatile
 14691  003522  C437 F06D          	movff	1079,_inPipes+5	;volatile
 14692  003526                     i2l7044:
 14693                           
 14694                           ; BSR set to: 4
 14695                           ;usb_device.c: 1508: }
 14696                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 14697  003526  EC81  F016         	call	_USBCtrlTrfTxService	;wreg free
 14698                           
 14699                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14700  00352A  0100               	movlb	0	; () banked
 14701  00352C  EE20 F002          	lfsr	2,2
 14702  003530  516E               	movf	_pBDTEntryIn& (0+255),w,b
 14703  003532  26D9               	addwf	fsr2l,f,c
 14704  003534  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14705  003536  22DA               	addwfc	fsr2h,f,c
 14706  003538  0E38               	movlw	56
 14707  00353A  6EDE               	movwf	postinc2,c
 14708  00353C  0E04               	movlw	4
 14709  00353E  6EDD               	movwf	postdec2,c
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14713  003540  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14714  003544  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14715  003548  0E48               	movlw	72
 14716  00354A  6EDF               	movwf	indf2,c
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14720  00354C  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 14721  003550  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14722  003554  0E00               	movlw	0
 14723  003556  8EDB               	bsf	plusw2,7,c
 14724  003558  0012               	return	
 14725  00355A                     __end_of_USBCtrlEPAllowDataStage:
 14726                           	opt stack 0
 14727                           pclatu	equ	0xFFB
 14728                           pclath	equ	0xFFA
 14729                           tblptru	equ	0xFF8
 14730                           tblptrh	equ	0xFF7
 14731                           tblptrl	equ	0xFF6
 14732                           tablat	equ	0xFF5
 14733                           prodh	equ	0xFF4
 14734                           prodl	equ	0xFF3
 14735                           intcon	equ	0xFF2
 14736                           indf0	equ	0xFEF
 14737                           postinc0	equ	0xFEE
 14738                           fsr0h	equ	0xFEA
 14739                           fsr0l	equ	0xFE9
 14740                           wreg	equ	0xFE8
 14741                           indf1	equ	0xFE7
 14742                           postdec1	equ	0xFE5
 14743                           fsr1h	equ	0xFE2
 14744                           fsr1l	equ	0xFE1
 14745                           bsr	equ	0xFE0
 14746                           indf2	equ	0xFDF
 14747                           postinc2	equ	0xFDE
 14748                           postdec2	equ	0xFDD
 14749                           plusw2	equ	0xFDB
 14750                           fsr2h	equ	0xFDA
 14751                           fsr2l	equ	0xFD9
 14752                           status	equ	0xFD8
 14753                           
 14754 ;; *************** function _USBCheckStdRequest *****************
 14755 ;; Defined at:
 14756 ;;		line 2689 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;		None
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;		None
 14761 ;; Return value:  Size  Location     Type
 14762 ;;		None               void
 14763 ;; Registers used:
 14764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0
 14771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14773 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14774 ;;Total ram usage:        0 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:    6
 14777 ;; This function calls:
 14778 ;;		_USBStdFeatureReqHandler
 14779 ;;		_USBStdGetDscHandler
 14780 ;;		_USBStdGetStatusHandler
 14781 ;;		_USBStdSetCfgHandler
 14782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14783 ;; This function is called by:
 14784 ;;		_USBCtrlTrfSetupHandler
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text65
 14789  0026EC                     __ptext65:
 14790                           	opt stack 0
 14791  0026EC                     _USBCheckStdRequest:
 14792                           	opt stack 13
 14793                           
 14794                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 14795                           
 14796                           ;incstack = 0
 14797  0026EC  0104               	movlb	4	; () banked
 14798  0026EE  3930               	swapf	48,w,b	;volatile
 14799  0026F0  32E8               	rrcf	wreg,f,c
 14800  0026F2  0B03               	andlw	3
 14801  0026F4  0900               	iorlw	0
 14802  0026F6  A4D8               	btfss	status,2,c
 14803  0026F8  0012               	return	
 14804  0026FA  D050               	goto	i2l7838
 14805  0026FC                     i2l813:
 14806                           
 14807                           ; BSR set to: 4
 14808                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 14809  0026FC  0100               	movlb	0	; () banked
 14810  0026FE  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14811                           
 14812                           ; BSR set to: 0
 14813                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 14814  002700  0E08               	movlw	8
 14815  002702  0100               	movlb	0	; () banked
 14816  002704  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 14817                           
 14818                           ;usb_device.c: 2699: break;
 14819  002706  0012               	return	
 14820  002708                     i2l7808:
 14821                           
 14822                           ;usb_device.c: 2701: USBStdGetDscHandler();
 14823  002708  EC13  F010         	call	_USBStdGetDscHandler	;wreg free
 14824                           
 14825                           ;usb_device.c: 2702: break;
 14826  00270C  0012               	return	
 14827  00270E                     i2l7810:
 14828                           
 14829                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 14830  00270E  ECF0  F013         	call	_USBStdSetCfgHandler	;wreg free
 14831                           
 14832                           ;usb_device.c: 2705: break;
 14833  002712  0012               	return	
 14834  002714                     i2l7812:
 14835                           
 14836                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14837  002714  0E4C               	movlw	low _USBActiveConfiguration
 14838  002716  0100               	movlb	0	; () banked
 14839  002718  6F68               	movwf	_inPipes& (0+255),b	;volatile
 14840  00271A  0E00               	movlw	high _USBActiveConfiguration
 14841  00271C  0100               	movlb	0	; () banked
 14842  00271E  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14846  002720  0100               	movlb	0	; () banked
 14847  002722  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 14851  002724  0E01               	movlw	1
 14852  002726  0100               	movlb	0	; () banked
 14853  002728  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 14857  00272A  0100               	movlb	0	; () banked
 14858  00272C  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14859                           
 14860                           ;usb_device.c: 2711: break;
 14861  00272E  0012               	return	
 14862  002730                     i2l7820:
 14863                           
 14864                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 14865  002730  ECA4  F019         	call	_USBStdGetStatusHandler	;wreg free
 14866                           
 14867                           ;usb_device.c: 2714: break;
 14868  002734  0012               	return	
 14869  002736                     i2l7822:
 14870                           
 14871                           ;usb_device.c: 2716: case 3:
 14872                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 14873  002736  EC8C  F008         	call	_USBStdFeatureReqHandler	;wreg free
 14874                           
 14875                           ;usb_device.c: 2718: break;
 14876  00273A  0012               	return	
 14877  00273C                     i2l7824:
 14878                           
 14879                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14880  00273C  0104               	movlb	4	; () banked
 14881  00273E  5134               	movf	52,w,b	;volatile
 14882  002740  0D01               	mullw	1
 14883  002742  0E4A               	movlw	low _USBAlternateInterface
 14884  002744  24F3               	addwf	prodl,w,c
 14885  002746  0100               	movlb	0	; () banked
 14886  002748  6F68               	movwf	_inPipes& (0+255),b	;volatile
 14887  00274A  0E00               	movlw	high _USBAlternateInterface
 14888  00274C  20F4               	addwfc	prodh,w,c
 14889  00274E  0100               	movlb	0	; () banked
 14890  002750  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14894  002752  0100               	movlb	0	; () banked
 14895  002754  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 14899  002756  0E01               	movlw	1
 14900  002758  0100               	movlb	0	; () banked
 14901  00275A  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14902                           
 14903                           ; BSR set to: 0
 14904                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 14905  00275C  0100               	movlb	0	; () banked
 14906  00275E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14907                           
 14908                           ;usb_device.c: 2724: break;
 14909  002760  0012               	return	
 14910  002762                     i2l822:
 14911                           
 14912                           ; BSR set to: 4
 14913                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 14914  002762  0100               	movlb	0	; () banked
 14915  002764  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14916                           
 14917                           ; BSR set to: 0
 14918                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14919  002766  0104               	movlb	4	; () banked
 14920  002768  5134               	movf	52,w,b	;volatile
 14921  00276A  0D01               	mullw	1
 14922  00276C  0E4A               	movlw	low _USBAlternateInterface
 14923  00276E  24F3               	addwf	prodl,w,c
 14924  002770  6ED9               	movwf	fsr2l,c
 14925  002772  0E00               	movlw	high _USBAlternateInterface
 14926  002774  20F4               	addwfc	prodh,w,c
 14927  002776  6EDA               	movwf	fsr2h,c
 14928  002778  C432 FFDF          	movff	1074,indf2	;volatile
 14929                           
 14930                           ;usb_device.c: 2728: break;
 14931  00277C  0012               	return	
 14932  00277E                     i2l7834:
 14933                           
 14934                           ; BSR set to: 4
 14935                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14936  00277E  0E00               	movlw	0
 14937  002780  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14938  002782  0E02               	movlw	2
 14939  002784  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14940  002786  0E00               	movlw	0
 14941  002788  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14942  00278A  0E00               	movlw	0
 14943  00278C  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14944  00278E  0E00               	movlw	0
 14945  002790  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14946  002792  0E00               	movlw	0
 14947  002794  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14948  002796  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14949                           
 14950                           ;usb_device.c: 2735: }
 14951                           
 14952                           ;usb_device.c: 2734: break;
 14953                           
 14954                           ;usb_device.c: 2733: default:
 14955                           
 14956                           ;usb_device.c: 2732: case 12:
 14957                           
 14958                           ;usb_device.c: 2731: break;
 14959  00279A  0012               	return	
 14960  00279C                     i2l7838:
 14961  00279C  0104               	movlb	4	; () banked
 14962  00279E  5131               	movf	49,w,b	;volatile
 14963                           
 14964                           ; Switch size 1, requested type "space"
 14965                           ; Number of cases is 11, Range of values is 0 to 12
 14966                           ; switch strategies available:
 14967                           ; Name         Instructions Cycles
 14968                           ; simple_byte           34    18 (average)
 14969                           ;	Chosen strategy is simple_byte
 14970  0027A0  0A00               	xorlw	0	; case 0
 14971  0027A2  B4D8               	btfsc	status,2,c
 14972  0027A4  D7C5               	goto	i2l7820
 14973  0027A6  0A01               	xorlw	1	; case 1
 14974  0027A8  B4D8               	btfsc	status,2,c
 14975  0027AA  D7C5               	goto	i2l7822
 14976  0027AC  0A02               	xorlw	2	; case 3
 14977  0027AE  B4D8               	btfsc	status,2,c
 14978  0027B0  D7C2               	goto	i2l7822
 14979  0027B2  0A06               	xorlw	6	; case 5
 14980  0027B4  B4D8               	btfsc	status,2,c
 14981  0027B6  D7A2               	goto	i2l813
 14982  0027B8  0A03               	xorlw	3	; case 6
 14983  0027BA  B4D8               	btfsc	status,2,c
 14984  0027BC  D7A5               	goto	i2l7808
 14985  0027BE  0A01               	xorlw	1	; case 7
 14986  0027C0  B4D8               	btfsc	status,2,c
 14987  0027C2  D7DD               	goto	i2l7834
 14988  0027C4  0A0F               	xorlw	15	; case 8
 14989  0027C6  B4D8               	btfsc	status,2,c
 14990  0027C8  D7A5               	goto	i2l7812
 14991  0027CA  0A01               	xorlw	1	; case 9
 14992  0027CC  B4D8               	btfsc	status,2,c
 14993  0027CE  D79F               	goto	i2l7810
 14994  0027D0  0A03               	xorlw	3	; case 10
 14995  0027D2  B4D8               	btfsc	status,2,c
 14996  0027D4  D7B3               	goto	i2l7824
 14997  0027D6  0A01               	xorlw	1	; case 11
 14998  0027D8  B4D8               	btfsc	status,2,c
 14999  0027DA  D7C3               	goto	i2l822
 15000  0027DC  0A07               	xorlw	7	; case 12
 15001  0027DE  0012               	return	
 15002  0027E0                     __end_of_USBCheckStdRequest:
 15003                           	opt stack 0
 15004                           pclatu	equ	0xFFB
 15005                           pclath	equ	0xFFA
 15006                           tblptru	equ	0xFF8
 15007                           tblptrh	equ	0xFF7
 15008                           tblptrl	equ	0xFF6
 15009                           tablat	equ	0xFF5
 15010                           prodh	equ	0xFF4
 15011                           prodl	equ	0xFF3
 15012                           intcon	equ	0xFF2
 15013                           indf0	equ	0xFEF
 15014                           postinc0	equ	0xFEE
 15015                           fsr0h	equ	0xFEA
 15016                           fsr0l	equ	0xFE9
 15017                           wreg	equ	0xFE8
 15018                           indf1	equ	0xFE7
 15019                           postdec1	equ	0xFE5
 15020                           fsr1h	equ	0xFE2
 15021                           fsr1l	equ	0xFE1
 15022                           bsr	equ	0xFE0
 15023                           indf2	equ	0xFDF
 15024                           postinc2	equ	0xFDE
 15025                           postdec2	equ	0xFDD
 15026                           plusw2	equ	0xFDB
 15027                           fsr2h	equ	0xFDA
 15028                           fsr2l	equ	0xFD9
 15029                           status	equ	0xFD8
 15030                           
 15031 ;; *************** function _USBStdSetCfgHandler *****************
 15032 ;; Defined at:
 15033 ;;		line 1968 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;  i               1   37[COMRAM] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;		None               void
 15040 ;; Registers used:
 15041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0
 15048 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15050 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15051 ;;Total ram usage:        1 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    5
 15054 ;; This function calls:
 15055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15056 ;;		i2_memset
 15057 ;; This function is called by:
 15058 ;;		_USBCheckStdRequest
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text66
 15063  0027E0                     __ptext66:
 15064                           	opt stack 0
 15065  0027E0                     _USBStdSetCfgHandler:
 15066                           	opt stack 13
 15067                           
 15068                           ;usb_device.c: 1970: uint8_t i;
 15069                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 15070                           
 15071                           ;incstack = 0
 15072  0027E0  0100               	movlb	0	; () banked
 15073  0027E2  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 15077  0027E4  0E71               	movlw	113
 15078  0027E6  6E12               	movwf	i2memset@p1,c
 15079  0027E8  0E0F               	movlw	15
 15080  0027EA  6E13               	movwf	i2memset@p1+1,c
 15081  0027EC  0E00               	movlw	0
 15082  0027EE  6E15               	movwf	i2memset@c+1,c
 15083  0027F0  0E00               	movlw	0
 15084  0027F2  6E14               	movwf	i2memset@c,c
 15085  0027F4  0E00               	movlw	0
 15086  0027F6  6E17               	movwf	i2memset@n+1,c
 15087  0027F8  0E02               	movlw	2
 15088  0027FA  6E16               	movwf	i2memset@n,c
 15089  0027FC  EC86  F01F         	call	i2_memset	;wreg free
 15090                           
 15091                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15092  002800  0E00               	movlw	0
 15093  002802  6E12               	movwf	i2memset@p1,c
 15094  002804  0E04               	movlw	4
 15095  002806  6E13               	movwf	i2memset@p1+1,c
 15096  002808  0E00               	movlw	0
 15097  00280A  6E15               	movwf	i2memset@c+1,c
 15098  00280C  0E00               	movlw	0
 15099  00280E  6E14               	movwf	i2memset@c,c
 15100  002810  0E00               	movlw	0
 15101  002812  6E17               	movwf	i2memset@n+1,c
 15102  002814  0E30               	movlw	48
 15103  002816  6E16               	movwf	i2memset@n,c
 15104  002818  EC86  F01F         	call	i2_memset	;wreg free
 15105                           
 15106                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 15107  00281C  8C6D               	bsf	3949,6,c	;volatile
 15108                           
 15109                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 15110  00281E  0E00               	movlw	0
 15111  002820  6E26               	movwf	USBStdSetCfgHandler@i,c
 15112  002822                     i2l7060:
 15113  002822  0E02               	movlw	2
 15114  002824  6426               	cpfsgt	USBStdSetCfgHandler@i,c
 15115  002826  D001               	goto	i2l7064
 15116  002828  D016               	goto	i2l7070
 15117  00282A                     i2l7064:
 15118                           
 15119                           ;usb_device.c: 1988: {
 15120                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 15121  00282A  5026               	movf	USBStdSetCfgHandler@i,w,c
 15122  00282C  0D01               	mullw	1
 15123  00282E  0E85               	movlw	low _ep_data_in
 15124  002830  24F3               	addwf	prodl,w,c
 15125  002832  6ED9               	movwf	fsr2l,c
 15126  002834  0E00               	movlw	high _ep_data_in
 15127  002836  20F4               	addwfc	prodh,w,c
 15128  002838  6EDA               	movwf	fsr2h,c
 15129  00283A  0E00               	movlw	0
 15130  00283C  6EDF               	movwf	indf2,c
 15131                           
 15132                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 15133  00283E  5026               	movf	USBStdSetCfgHandler@i,w,c
 15134  002840  0D01               	mullw	1
 15135  002842  0E88               	movlw	low _ep_data_out
 15136  002844  24F3               	addwf	prodl,w,c
 15137  002846  6ED9               	movwf	fsr2l,c
 15138  002848  0E00               	movlw	high _ep_data_out
 15139  00284A  20F4               	addwfc	prodh,w,c
 15140  00284C  6EDA               	movwf	fsr2h,c
 15141  00284E  0E00               	movlw	0
 15142  002850  6EDF               	movwf	indf2,c
 15143  002852  2A26               	incf	USBStdSetCfgHandler@i,f,c
 15144  002854  D7E6               	goto	i2l7060
 15145  002856                     i2l7070:
 15146                           
 15147                           ;usb_device.c: 1991: }
 15148                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 15149  002856  0E4A               	movlw	low _USBAlternateInterface
 15150  002858  6E12               	movwf	i2memset@p1,c
 15151  00285A  0E00               	movlw	high _USBAlternateInterface
 15152  00285C  6E13               	movwf	i2memset@p1+1,c
 15153  00285E  0E00               	movlw	0
 15154  002860  6E15               	movwf	i2memset@c+1,c
 15155  002862  0E00               	movlw	0
 15156  002864  6E14               	movwf	i2memset@c,c
 15157  002866  0E00               	movlw	0
 15158  002868  6E17               	movwf	i2memset@n+1,c
 15159  00286A  0E02               	movlw	2
 15160  00286C  6E16               	movwf	i2memset@n,c
 15161  00286E  EC86  F01F         	call	i2_memset	;wreg free
 15162                           
 15163                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 15164  002872  9C6D               	bcf	3949,6,c	;volatile
 15165                           
 15166                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15167  002874  0E08               	movlw	8
 15168  002876  0100               	movlb	0	; () banked
 15169  002878  6F6E               	movwf	_pBDTEntryIn& (0+255),b
 15170  00287A  0E04               	movlw	4
 15171  00287C  0100               	movlb	0	; () banked
 15172  00287E  6F6F               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15176  002880  0E00               	movlw	0
 15177  002882  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 15178  002884  0E04               	movlw	4
 15179  002886  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15183  002888  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15184  00288C  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15188  002890  C432 F04C          	movff	1074,_USBActiveConfiguration	;volatile
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 15192  002894  504C               	movf	_USBActiveConfiguration,w,c	;volatile
 15193  002896  A4D8               	btfss	status,2,c
 15194  002898  D004               	goto	i2l7086
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;usb_device.c: 2010: {
 15198                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 15199  00289A  0E10               	movlw	16
 15200  00289C  0100               	movlb	0	; () banked
 15201  00289E  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 15202                           
 15203                           ;usb_device.c: 2013: }
 15204  0028A0  0012               	return	
 15205  0028A2                     i2l7086:
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;usb_device.c: 2014: else
 15209                           ;usb_device.c: 2015: {
 15210                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 15211  0028A2  0E00               	movlw	0
 15212  0028A4  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15213  0028A6  0E01               	movlw	1
 15214  0028A8  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15215  0028AA  0E4C               	movlw	low _USBActiveConfiguration
 15216  0028AC  6E20               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15217  0028AE  0E00               	movlw	high _USBActiveConfiguration
 15218  0028B0  6E21               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15219  0028B2  0E00               	movlw	0
 15220  0028B4  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15221  0028B6  0E01               	movlw	1
 15222  0028B8  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15223  0028BA  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15224                           
 15225                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 15226  0028BE  0E20               	movlw	32
 15227  0028C0  0100               	movlb	0	; () banked
 15228  0028C2  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 15229  0028C4  0012               	return	
 15230  0028C6                     __end_of_USBStdSetCfgHandler:
 15231                           	opt stack 0
 15232                           pclatu	equ	0xFFB
 15233                           pclath	equ	0xFFA
 15234                           tblptru	equ	0xFF8
 15235                           tblptrh	equ	0xFF7
 15236                           tblptrl	equ	0xFF6
 15237                           tablat	equ	0xFF5
 15238                           prodh	equ	0xFF4
 15239                           prodl	equ	0xFF3
 15240                           intcon	equ	0xFF2
 15241                           indf0	equ	0xFEF
 15242                           postinc0	equ	0xFEE
 15243                           fsr0h	equ	0xFEA
 15244                           fsr0l	equ	0xFE9
 15245                           wreg	equ	0xFE8
 15246                           indf1	equ	0xFE7
 15247                           postdec1	equ	0xFE5
 15248                           fsr1h	equ	0xFE2
 15249                           fsr1l	equ	0xFE1
 15250                           bsr	equ	0xFE0
 15251                           indf2	equ	0xFDF
 15252                           postinc2	equ	0xFDE
 15253                           postdec2	equ	0xFDD
 15254                           plusw2	equ	0xFDB
 15255                           fsr2h	equ	0xFDA
 15256                           fsr2l	equ	0xFD9
 15257                           status	equ	0xFD8
 15258                           
 15259 ;; *************** function i2_memset *****************
 15260 ;; Defined at:
 15261 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\memset.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  p1              2   17[COMRAM] PTR void 
 15264 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15265 ;;  c               2   19[COMRAM] int 
 15266 ;;  n               2   21[COMRAM] unsigned int 
 15267 ;; Auto vars:     Size  Location     Type
 15268 ;;  memset          2   23[COMRAM] PTR unsigned char 
 15269 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15270 ;; Return value:  Size  Location     Type
 15271 ;;                  2   17[COMRAM] PTR void 
 15272 ;; Registers used:
 15273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15274 ;; Tracked objects:
 15275 ;;		On entry : 0/0
 15276 ;;		On exit  : 0/0
 15277 ;;		Unchanged: 0/0
 15278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15279 ;;      Params:         6       0       0       0       0       0       0       0       0
 15280 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15282 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15283 ;;Total ram usage:        8 bytes
 15284 ;; Hardware stack levels used:    1
 15285 ;; This function calls:
 15286 ;;		Nothing
 15287 ;; This function is called by:
 15288 ;;		_USBStdSetCfgHandler
 15289 ;;		i2_USBDeviceInit
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293                           	psect	text67
 15294  003F0C                     __ptext67:
 15295                           	opt stack 0
 15296  003F0C                     i2_memset:
 15297                           	opt stack 20
 15298                           
 15299                           ; BSR set to: 0
 15300                           ;incstack = 0
 15301  003F0C  C012  F018         	movff	i2memset@p1,i2memset@p
 15302  003F10  C013  F019         	movff	i2memset@p1+1,i2memset@p+1
 15303  003F14  D008               	goto	i2l6982
 15304  003F16                     i2l6978:
 15305  003F16  C018  FFD9         	movff	i2memset@p,fsr2l
 15306  003F1A  C019  FFDA         	movff	i2memset@p+1,fsr2h
 15307  003F1E  C014  FFDF         	movff	i2memset@c,indf2
 15308  003F22  4A18               	infsnz	i2memset@p,f,c
 15309  003F24  2A19               	incf	i2memset@p+1,f,c
 15310  003F26                     i2l6982:
 15311  003F26  0616               	decf	i2memset@n,f,c
 15312  003F28  A0D8               	btfss	status,0,c
 15313  003F2A  0617               	decf	i2memset@n+1,f,c
 15314  003F2C  2816               	incf	i2memset@n,w,c
 15315  003F2E  E1F3               	bnz	i2l6978
 15316  003F30  2817               	incf	i2memset@n+1,w,c
 15317  003F32  B4D8               	btfsc	status,2,c
 15318  003F34  0012               	return	
 15319  003F36  D7EF               	goto	i2l6978
 15320  003F38                     __end_ofi2_memset:
 15321                           	opt stack 0
 15322                           pclatu	equ	0xFFB
 15323                           pclath	equ	0xFFA
 15324                           tblptru	equ	0xFF8
 15325                           tblptrh	equ	0xFF7
 15326                           tblptrl	equ	0xFF6
 15327                           tablat	equ	0xFF5
 15328                           prodh	equ	0xFF4
 15329                           prodl	equ	0xFF3
 15330                           intcon	equ	0xFF2
 15331                           indf0	equ	0xFEF
 15332                           postinc0	equ	0xFEE
 15333                           fsr0h	equ	0xFEA
 15334                           fsr0l	equ	0xFE9
 15335                           wreg	equ	0xFE8
 15336                           indf1	equ	0xFE7
 15337                           postdec1	equ	0xFE5
 15338                           fsr1h	equ	0xFE2
 15339                           fsr1l	equ	0xFE1
 15340                           bsr	equ	0xFE0
 15341                           indf2	equ	0xFDF
 15342                           postinc2	equ	0xFDE
 15343                           postdec2	equ	0xFDD
 15344                           plusw2	equ	0xFDB
 15345                           fsr2h	equ	0xFDA
 15346                           fsr2l	equ	0xFD9
 15347                           status	equ	0xFD8
 15348                           
 15349 ;; *************** function _USBStdGetStatusHandler *****************
 15350 ;; Defined at:
 15351 ;;		line 2129 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;  p               2   18[COMRAM] PTR struct __BDT
 15356 ;;		 -> NULL(0), BDT(48), 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;		None               void
 15359 ;; Registers used:
 15360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0
 15367 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15368 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15369 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15370 ;;Total ram usage:        3 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; This function calls:
 15373 ;;		Nothing
 15374 ;; This function is called by:
 15375 ;;		_USBCheckStdRequest
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text68
 15380  003348                     __ptext68:
 15381                           	opt stack 0
 15382  003348                     _USBStdGetStatusHandler:
 15383                           	opt stack 18
 15384                           
 15385                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 15386                           
 15387                           ;incstack = 0
 15388  003348  0E00               	movlw	0
 15389  00334A  0104               	movlb	4	; () banked
 15390  00334C  6F38               	movwf	56,b	;volatile
 15391                           
 15392                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 15393  00334E  0E00               	movlw	0
 15394  003350  0104               	movlb	4	; () banked
 15395  003352  6F39               	movwf	57,b	;volatile
 15396                           
 15397                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 15398  003354  D03B               	goto	i2l7142
 15399  003356                     i2l749:
 15400                           
 15401                           ; BSR set to: 4
 15402                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 15403  003356  0100               	movlb	0	; () banked
 15404  003358  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15405                           
 15406                           ;usb_device.c: 2145: }
 15407                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 15408                           
 15409                           ; BSR set to: 4
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;usb_device.c: 2143: {
 15413                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 15414                           
 15415                           ;usb_device.c: 2142: if(0 == 1)
 15416  00335A  0436               	decf	_RemoteWakeup,w,c	;volatile
 15417  00335C  A4D8               	btfss	status,2,c
 15418  00335E  D042               	goto	i2l752
 15419                           
 15420                           ;usb_device.c: 2148: {
 15421                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 15422  003360  0104               	movlb	4	; () banked
 15423  003362  8338               	bsf	56,1,b	;volatile
 15424                           
 15425                           ; BSR set to: 4
 15426                           ;usb_device.c: 2150: }
 15427                           ;usb_device.c: 2151: break;
 15428  003364  D03F               	goto	i2l752
 15429  003366                     i2l753:
 15430                           
 15431                           ; BSR set to: 4
 15432                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 15433  003366  0100               	movlb	0	; () banked
 15434  003368  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15435                           
 15436                           ;usb_device.c: 2154: break;
 15437  00336A  D03C               	goto	i2l752
 15438  00336C                     i2l754:
 15439                           
 15440                           ; BSR set to: 4
 15441                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 15442  00336C  0100               	movlb	0	; () banked
 15443  00336E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15444                           
 15445                           ;usb_device.c: 2160: {
 15446                           ;usb_device.c: 2161: BDT_ENTRY *p;
 15447                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 15448  003370  0104               	movlb	4	; () banked
 15449  003372  BF34               	btfsc	52,7,b	;volatile
 15450  003374  D00B               	goto	i2l7132
 15451                           
 15452                           ; BSR set to: 4
 15453                           ;usb_device.c: 2164: {
 15454                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15455  003376  0104               	movlb	4	; () banked
 15456  003378  5134               	movf	52,w,b	;volatile
 15457  00337A  0B0F               	andlw	15
 15458  00337C  6E12               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15459  00337E  5012               	movf	??_USBStdGetStatusHandler,w,c
 15460  003380  0D02               	mullw	2
 15461  003382  0E74               	movlw	low _pBDTEntryOut
 15462  003384  24F3               	addwf	prodl,w,c
 15463  003386  6ED9               	movwf	fsr2l,c
 15464  003388  0E00               	movlw	high _pBDTEntryOut
 15465  00338A  D00A               	goto	L7
 15466  00338C                     i2l7132:
 15467                           
 15468                           ; BSR set to: 4
 15469                           ;usb_device.c: 2167: else
 15470                           ;usb_device.c: 2168: {
 15471                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 15472  00338C  0104               	movlb	4	; () banked
 15473  00338E  5134               	movf	52,w,b	;volatile
 15474  003390  0B0F               	andlw	15
 15475  003392  6E12               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15476  003394  5012               	movf	??_USBStdGetStatusHandler,w,c
 15477  003396  0D02               	mullw	2
 15478  003398  0E6E               	movlw	low _pBDTEntryIn
 15479  00339A  24F3               	addwf	prodl,w,c
 15480  00339C  6ED9               	movwf	fsr2l,c
 15481  00339E  0E00               	movlw	high _pBDTEntryIn
 15482  0033A0                     L7:
 15483  0033A0  20F4               	addwfc	prodh,w,c
 15484  0033A2  6EDA               	movwf	fsr2h,c
 15485  0033A4  CFDE F013          	movff	postinc2,USBStdGetStatusHandler@p
 15486  0033A8  CFDD F014          	movff	postdec2,USBStdGetStatusHandler@p+1
 15487                           
 15488                           ; BSR set to: 4
 15489                           ;usb_device.c: 2170: }
 15490                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 15491                           
 15492                           ; BSR set to: 4
 15493  0033AC  C013  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15494  0033B0  C014  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15495  0033B4  AEDF               	btfss	indf2,7,c
 15496  0033B6  D016               	goto	i2l752
 15497                           
 15498                           ; BSR set to: 4
 15499  0033B8  C013  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15500  0033BC  C014  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15501  0033C0  A4DF               	btfss	indf2,2,c
 15502  0033C2  D010               	goto	i2l752
 15503                           
 15504                           ; BSR set to: 4
 15505                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 15506  0033C4  0E01               	movlw	1
 15507  0033C6  0104               	movlb	4	; () banked
 15508  0033C8  6F38               	movwf	56,b	;volatile
 15509                           
 15510                           ; BSR set to: 4
 15511                           ;usb_device.c: 2175: }
 15512                           ;usb_device.c: 2176: }
 15513                           
 15514                           ; BSR set to: 4
 15515                           ;usb_device.c: 2174: break;
 15516  0033CA  D00C               	goto	i2l752
 15517  0033CC                     i2l7142:
 15518                           
 15519                           ; BSR set to: 4
 15520  0033CC  0104               	movlb	4	; () banked
 15521  0033CE  5130               	movf	48,w,b	;volatile
 15522  0033D0  0B1F               	andlw	31
 15523                           
 15524                           ; Switch size 1, requested type "space"
 15525                           ; Number of cases is 3, Range of values is 0 to 2
 15526                           ; switch strategies available:
 15527                           ; Name         Instructions Cycles
 15528                           ; simple_byte           10     6 (average)
 15529                           ;	Chosen strategy is simple_byte
 15530  0033D2  0A00               	xorlw	0	; case 0
 15531  0033D4  B4D8               	btfsc	status,2,c
 15532  0033D6  D7BF               	goto	i2l749
 15533  0033D8  0A01               	xorlw	1	; case 1
 15534  0033DA  B4D8               	btfsc	status,2,c
 15535  0033DC  D7C4               	goto	i2l753
 15536  0033DE  0A03               	xorlw	3	; case 2
 15537  0033E0  B4D8               	btfsc	status,2,c
 15538  0033E2  D7C4               	goto	i2l754
 15539  0033E4                     i2l752:
 15540                           
 15541                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 15542  0033E4  0100               	movlb	0	; () banked
 15543  0033E6  AF6B               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 15544  0033E8  0012               	return	
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;usb_device.c: 2179: {
 15548                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 15549  0033EA  0E38               	movlw	56
 15550  0033EC  0100               	movlb	0	; () banked
 15551  0033EE  6F68               	movwf	_inPipes& (0+255),b	;volatile
 15552  0033F0  0E04               	movlw	4
 15553  0033F2  0100               	movlb	0	; () banked
 15554  0033F4  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15558  0033F6  0100               	movlb	0	; () banked
 15559  0033F8  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 15563  0033FA  0E02               	movlw	2
 15564  0033FC  0100               	movlb	0	; () banked
 15565  0033FE  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15566  003400  0012               	return	
 15567  003402                     __end_of_USBStdGetStatusHandler:
 15568                           	opt stack 0
 15569                           pclatu	equ	0xFFB
 15570                           pclath	equ	0xFFA
 15571                           tblptru	equ	0xFF8
 15572                           tblptrh	equ	0xFF7
 15573                           tblptrl	equ	0xFF6
 15574                           tablat	equ	0xFF5
 15575                           prodh	equ	0xFF4
 15576                           prodl	equ	0xFF3
 15577                           intcon	equ	0xFF2
 15578                           indf0	equ	0xFEF
 15579                           postinc0	equ	0xFEE
 15580                           fsr0h	equ	0xFEA
 15581                           fsr0l	equ	0xFE9
 15582                           wreg	equ	0xFE8
 15583                           indf1	equ	0xFE7
 15584                           postdec1	equ	0xFE5
 15585                           fsr1h	equ	0xFE2
 15586                           fsr1l	equ	0xFE1
 15587                           bsr	equ	0xFE0
 15588                           indf2	equ	0xFDF
 15589                           postinc2	equ	0xFDE
 15590                           postdec2	equ	0xFDD
 15591                           plusw2	equ	0xFDB
 15592                           fsr2h	equ	0xFDA
 15593                           fsr2l	equ	0xFD9
 15594                           status	equ	0xFD8
 15595                           
 15596 ;; *************** function _USBStdGetDscHandler *****************
 15597 ;; Defined at:
 15598 ;;		line 2043 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;		None
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;		None
 15603 ;; Return value:  Size  Location     Type
 15604 ;;		None               void
 15605 ;; Registers used:
 15606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15607 ;; Tracked objects:
 15608 ;;		On entry : 0/0
 15609 ;;		On exit  : 0/0
 15610 ;;		Unchanged: 0/0
 15611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15612 ;;      Params:         0       0       0       0       0       0       0       0       0
 15613 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15614 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15615 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15616 ;;Total ram usage:        2 bytes
 15617 ;; Hardware stack levels used:    1
 15618 ;; This function calls:
 15619 ;;		Nothing
 15620 ;; This function is called by:
 15621 ;;		_USBCheckStdRequest
 15622 ;; This function uses a non-reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text69
 15626  002026                     __ptext69:
 15627                           	opt stack 0
 15628  002026                     _USBStdGetDscHandler:
 15629                           	opt stack 18
 15630                           
 15631                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;incstack = 0
 15635  002026  0E80               	movlw	128
 15636  002028  0104               	movlb	4	; () banked
 15637  00202A  1930               	xorwf	48,w,b	;volatile
 15638  00202C  A4D8               	btfss	status,2,c
 15639  00202E  0012               	return	
 15640                           
 15641                           ; BSR set to: 4
 15642                           ;usb_device.c: 2046: {
 15643                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15644  002030  0EC0               	movlw	192
 15645  002032  0100               	movlb	0	; () banked
 15646  002034  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15647                           
 15648                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 15649  002036  D089               	goto	i2l7120
 15650  002038                     i2l7094:
 15651                           
 15652                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15653  002038  0E17               	movlw	low _device_dsc
 15654  00203A  0100               	movlb	0	; () banked
 15655  00203C  6F68               	movwf	_inPipes& (0+255),b	;volatile
 15656  00203E  0E7E               	movlw	high _device_dsc
 15657  002040  0100               	movlb	0	; () banked
 15658  002042  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 15662  002044  0E00               	movlw	0
 15663  002046  0100               	movlb	0	; () banked
 15664  002048  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15665  00204A  0E12               	movlw	18
 15666  00204C  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15667                           
 15668                           ;usb_device.c: 2058: break;
 15669  00204E  0012               	return	
 15670  002050                     i2l7098:
 15671                           
 15672                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 15673  002050  0104               	movlb	4	; () banked
 15674  002052  5132               	movf	50,w,b	;volatile
 15675  002054  A4D8               	btfss	status,2,c
 15676  002056  D044               	goto	i2l7106
 15677                           
 15678                           ; BSR set to: 4
 15679                           ;usb_device.c: 2064: {
 15680                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 15681  002058  0104               	movlb	4	; () banked
 15682  00205A  5132               	movf	50,w,b	;volatile
 15683  00205C  0D02               	mullw	2
 15684  00205E  0E6C               	movlw	low _USB_CD_Ptr
 15685  002060  24F3               	addwf	prodl,w,c
 15686  002062  6EF6               	movwf	tblptrl,c
 15687  002064  0E7D               	movlw	high _USB_CD_Ptr
 15688  002066  20F4               	addwfc	prodh,w,c
 15689  002068  6EF7               	movwf	tblptrh,c
 15690  00206A                     	if	0	;There are less than 3 active tblptr bytes
 15691  00206A                     	endif
 15692  00206A  0009               	tblrd		*+
 15693  00206C  CFF5 F068          	movff	tablat,_inPipes	;volatile
 15694  002070  000A               	tblrd		*-
 15695  002072  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
 15696                           
 15697                           ; BSR set to: 4
 15698                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15699  002076  0E02               	movlw	2
 15700  002078  0100               	movlb	0	; () banked
 15701  00207A  2568               	addwf	_inPipes& (0+255),w,b	;volatile
 15702  00207C  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
 15703  00207E  0E00               	movlw	0
 15704  002080  0100               	movlb	0	; () banked
 15705  002082  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 15706  002084  6E13               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15707  002086  C012  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15708  00208A  C013  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15709  00208E  6AF8               	clrf	tblptru,c
 15710  002090  0E07               	movlw	(high __ramtop+-1)
 15711  002092  64F7               	cpfsgt	tblptrh,c
 15712  002094  D003               	bra	i2u696_47
 15713  002096  0008               	tblrd		*
 15714  002098  50F5               	movf	tablat,w,c
 15715  00209A  D005               	bra	i2u696_40
 15716  00209C                     i2u696_47:
 15717  00209C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15718  0020A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15719  0020A4  50EF               	movf	indf0,w,c
 15720  0020A6                     i2u696_40:
 15721  0020A6  0100               	movlb	0	; () banked
 15722  0020A8  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15723                           
 15724                           ; BSR set to: 0
 15725                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15726  0020AA  0E03               	movlw	3
 15727  0020AC  0100               	movlb	0	; () banked
 15728  0020AE  2568               	addwf	_inPipes& (0+255),w,b	;volatile
 15729  0020B0  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
 15730  0020B2  0E00               	movlw	0
 15731  0020B4  0100               	movlb	0	; () banked
 15732  0020B6  2169               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 15733  0020B8  6E13               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15734  0020BA  C012  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15735  0020BE  C013  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15736  0020C2  6AF8               	clrf	tblptru,c
 15737  0020C4  0E07               	movlw	(high __ramtop+-1)
 15738  0020C6  64F7               	cpfsgt	tblptrh,c
 15739  0020C8  D003               	bra	i2u697_47
 15740  0020CA  0008               	tblrd		*
 15741  0020CC  50F5               	movf	tablat,w,c
 15742  0020CE  D005               	bra	i2u697_40
 15743  0020D0                     i2u697_47:
 15744  0020D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15745  0020D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15746  0020D8  50EF               	movf	indf0,w,c
 15747  0020DA                     i2u697_40:
 15748  0020DA  0100               	movlb	0	; () banked
 15749  0020DC  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15750                           
 15751                           ;usb_device.c: 2076: }
 15752  0020DE  0012               	return	
 15753  0020E0                     i2l7106:
 15754                           
 15755                           ;usb_device.c: 2077: else
 15756                           ;usb_device.c: 2078: {
 15757                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 15758  0020E0  0E00               	movlw	0
 15759  0020E2  0100               	movlb	0	; () banked
 15760  0020E4  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;usb_device.c: 2080: }
 15764                           ;usb_device.c: 2081: break;
 15765  0020E6  0012               	return	
 15766  0020E8                     i2l7108:
 15767                           
 15768                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 15769  0020E8  0E03               	movlw	3
 15770  0020EA  0104               	movlb	4	; () banked
 15771  0020EC  6132               	cpfslt	50,b	;volatile
 15772  0020EE  D025               	goto	i2l7114
 15773                           
 15774                           ; BSR set to: 4
 15775                           ;usb_device.c: 2087: {
 15776                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 15777  0020F0  0104               	movlb	4	; () banked
 15778  0020F2  5132               	movf	50,w,b	;volatile
 15779  0020F4  0D02               	mullw	2
 15780  0020F6  0E62               	movlw	low _USB_SD_Ptr
 15781  0020F8  24F3               	addwf	prodl,w,c
 15782  0020FA  6EF6               	movwf	tblptrl,c
 15783  0020FC  0E7D               	movlw	high _USB_SD_Ptr
 15784  0020FE  20F4               	addwfc	prodh,w,c
 15785  002100  6EF7               	movwf	tblptrh,c
 15786  002102                     	if	0	;There are less than 3 active tblptr bytes
 15787  002102                     	endif
 15788  002102  0009               	tblrd		*+
 15789  002104  CFF5 F068          	movff	tablat,_inPipes	;volatile
 15790  002108  000A               	tblrd		*-
 15791  00210A  CFF5 F069          	movff	tablat,_inPipes+1	;volatile
 15792                           
 15793                           ; BSR set to: 4
 15794                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15795  00210E  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 15796  002112  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 15797  002116  6AF8               	clrf	tblptru,c
 15798  002118  0E07               	movlw	(high __ramtop+-1)
 15799  00211A  64F7               	cpfsgt	tblptrh,c
 15800  00211C  D003               	bra	i2u699_47
 15801  00211E  0008               	tblrd		*
 15802  002120  50F5               	movf	tablat,w,c
 15803  002122  D005               	bra	i2u699_40
 15804  002124                     i2u699_47:
 15805  002124  CFF6 FFE9          	movff	tblptrl,fsr0l
 15806  002128  CFF7 FFEA          	movff	tblptrh,fsr0h
 15807  00212C  50EF               	movf	indf0,w,c
 15808  00212E                     i2u699_40:
 15809  00212E  6E12               	movwf	??_USBStdGetDscHandler& (0+255),c
 15810  002130  5012               	movf	??_USBStdGetDscHandler,w,c
 15811  002132  0100               	movlb	0	; () banked
 15812  002134  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15813  002136  6B6D               	clrf	(_inPipes+5)& (0+255),b	;volatile
 15814                           
 15815                           ;usb_device.c: 2092: }
 15816  002138  0012               	return	
 15817  00213A                     i2l7114:
 15818                           
 15819                           ;usb_device.c: 2102: else
 15820                           ;usb_device.c: 2103: {
 15821                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 15822  00213A  0E00               	movlw	0
 15823  00213C  0100               	movlb	0	; () banked
 15824  00213E  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;usb_device.c: 2105: }
 15828                           ;usb_device.c: 2106: break;
 15829  002140  0012               	return	
 15830  002142                     i2l7116:
 15831                           
 15832                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 15833  002142  0E00               	movlw	0
 15834  002144  0100               	movlb	0	; () banked
 15835  002146  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;usb_device.c: 2110: }
 15839                           
 15840                           ;usb_device.c: 2109: break;
 15841  002148  0012               	return	
 15842  00214A                     i2l7120:
 15843                           
 15844                           ; BSR set to: 0
 15845  00214A  0104               	movlb	4	; () banked
 15846  00214C  5133               	movf	51,w,b	;volatile
 15847                           
 15848                           ; Switch size 1, requested type "space"
 15849                           ; Number of cases is 3, Range of values is 1 to 3
 15850                           ; switch strategies available:
 15851                           ; Name         Instructions Cycles
 15852                           ; simple_byte           10     6 (average)
 15853                           ;	Chosen strategy is simple_byte
 15854  00214E  0A01               	xorlw	1	; case 1
 15855  002150  B4D8               	btfsc	status,2,c
 15856  002152  D772               	goto	i2l7094
 15857  002154  0A03               	xorlw	3	; case 2
 15858  002156  B4D8               	btfsc	status,2,c
 15859  002158  D77B               	goto	i2l7098
 15860  00215A  0A01               	xorlw	1	; case 3
 15861  00215C  B4D8               	btfsc	status,2,c
 15862  00215E  D7C4               	goto	i2l7108
 15863  002160  D7F0               	goto	i2l7116
 15864  002162                     __end_of_USBStdGetDscHandler:
 15865                           	opt stack 0
 15866                           pclatu	equ	0xFFB
 15867                           pclath	equ	0xFFA
 15868                           tblptru	equ	0xFF8
 15869                           tblptrh	equ	0xFF7
 15870                           tblptrl	equ	0xFF6
 15871                           tablat	equ	0xFF5
 15872                           prodh	equ	0xFF4
 15873                           prodl	equ	0xFF3
 15874                           intcon	equ	0xFF2
 15875                           indf0	equ	0xFEF
 15876                           postinc0	equ	0xFEE
 15877                           fsr0h	equ	0xFEA
 15878                           fsr0l	equ	0xFE9
 15879                           wreg	equ	0xFE8
 15880                           indf1	equ	0xFE7
 15881                           postdec1	equ	0xFE5
 15882                           fsr1h	equ	0xFE2
 15883                           fsr1l	equ	0xFE1
 15884                           bsr	equ	0xFE0
 15885                           indf2	equ	0xFDF
 15886                           postinc2	equ	0xFDE
 15887                           postdec2	equ	0xFDD
 15888                           plusw2	equ	0xFDB
 15889                           fsr2h	equ	0xFDA
 15890                           fsr2l	equ	0xFD9
 15891                           status	equ	0xFD8
 15892                           
 15893 ;; *************** function _USBStdFeatureReqHandler *****************
 15894 ;; Defined at:
 15895 ;;		line 2757 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;		None
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;  p               2   41[COMRAM] PTR struct __BDT
 15900 ;;		 -> NULL(0), BDT(48), 
 15901 ;;  pUEP            2   38[COMRAM] PTR unsigned char 
 15902 ;;		 -> UEP0(1), 
 15903 ;;  current_ep_d    1   40[COMRAM] struct .
 15904 ;; Return value:  Size  Location     Type
 15905 ;;		None               void
 15906 ;; Registers used:
 15907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15913 ;;      Params:         0       0       0       0       0       0       0       0       0
 15914 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15915 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15916 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15917 ;;Total ram usage:        6 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:    5
 15920 ;; This function calls:
 15921 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15922 ;; This function is called by:
 15923 ;;		_USBCheckStdRequest
 15924 ;; This function uses a non-reentrant model
 15925 ;;
 15926                           
 15927                           	psect	text70
 15928  001118                     __ptext70:
 15929                           	opt stack 0
 15930  001118                     _USBStdFeatureReqHandler:
 15931                           	opt stack 13
 15932                           
 15933                           ;usb_device.c: 2759: BDT_ENTRY *p;
 15934                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 15935                           ;usb_device.c: 2764: unsigned char* pUEP;
 15936                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 15937                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 15938                           
 15939                           ;incstack = 0
 15940  001118  0104               	movlb	4	; () banked
 15941  00111A  0532               	decf	50,w,b	;volatile
 15942  00111C  A4D8               	btfss	status,2,c
 15943  00111E  D011               	goto	i2l828
 15944                           
 15945                           ; BSR set to: 4
 15946  001120  0104               	movlb	4	; () banked
 15947  001122  5130               	movf	48,w,b	;volatile
 15948  001124  0B1F               	andlw	31
 15949  001126  0900               	iorlw	0
 15950  001128  A4D8               	btfss	status,2,c
 15951  00112A  D00B               	goto	i2l828
 15952                           
 15953                           ; BSR set to: 4
 15954                           ;usb_device.c: 2804: {
 15955                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 15956  00112C  0100               	movlb	0	; () banked
 15957  00112E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 15961  001130  0E03               	movlw	3
 15962  001132  0104               	movlb	4	; () banked
 15963  001134  1931               	xorwf	49,w,b	;volatile
 15964  001136  A4D8               	btfss	status,2,c
 15965  001138  D002               	goto	i2l7160
 15966                           
 15967                           ; BSR set to: 4
 15968                           ;usb_device.c: 2807: RemoteWakeup = 1;
 15969  00113A  0E01               	movlw	1
 15970  00113C  D001               	goto	L8
 15971  00113E                     i2l7160:
 15972                           
 15973                           ; BSR set to: 4
 15974                           ;usb_device.c: 2808: else
 15975                           ;usb_device.c: 2809: RemoteWakeup = 0;
 15976  00113E  0E00               	movlw	0
 15977  001140                     L8:
 15978  001140  6E36               	movwf	_RemoteWakeup,c	;volatile
 15979  001142                     i2l828:
 15980                           
 15981                           ; BSR set to: 4
 15982                           ;usb_device.c: 2810: }
 15983                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 15984                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 15985                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 15986                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 15987  001142  0104               	movlb	4	; () banked
 15988  001144  5132               	movf	50,w,b	;volatile
 15989  001146  A4D8               	btfss	status,2,c
 15990  001148  0012               	return	
 15991                           
 15992                           ; BSR set to: 4
 15993  00114A  0104               	movlb	4	; () banked
 15994  00114C  5130               	movf	48,w,b	;volatile
 15995  00114E  0B1F               	andlw	31
 15996  001150  0A02               	xorlw	2
 15997  001152  A4D8               	btfss	status,2,c
 15998  001154  0012               	return	
 15999                           
 16000                           ; BSR set to: 4
 16001  001156  0104               	movlb	4	; () banked
 16002  001158  5134               	movf	52,w,b	;volatile
 16003  00115A  0B0F               	andlw	15
 16004  00115C  0900               	iorlw	0
 16005  00115E  B4D8               	btfsc	status,2,c
 16006  001160  0012               	return	
 16007                           
 16008                           ; BSR set to: 4
 16009  001162  0104               	movlb	4	; () banked
 16010  001164  5134               	movf	52,w,b	;volatile
 16011  001166  0B0F               	andlw	15
 16012  001168  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16013  00116A  0E03               	movlw	3
 16014  00116C  6026               	cpfslt	??_USBStdFeatureReqHandler,c
 16015  00116E  0012               	return	
 16016                           
 16017                           ; BSR set to: 4
 16018  001170  0E20               	movlw	32
 16019  001172  0100               	movlb	0	; () banked
 16020  001174  199A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 16021  001176  A4D8               	btfss	status,2,c
 16022  001178  0012               	return	
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;usb_device.c: 2817: {
 16026                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 16027  00117A  0100               	movlb	0	; () banked
 16028  00117C  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16029                           
 16030                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 16031  00117E  0104               	movlb	4	; () banked
 16032  001180  BF34               	btfsc	52,7,b	;volatile
 16033  001182  D01B               	goto	i2l7174
 16034                           
 16035                           ; BSR set to: 4
 16036                           ;usb_device.c: 2824: {
 16037                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16038  001184  0104               	movlb	4	; () banked
 16039  001186  5134               	movf	52,w,b	;volatile
 16040  001188  0B0F               	andlw	15
 16041  00118A  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16042  00118C  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16043  00118E  0D02               	mullw	2
 16044  001190  0E74               	movlw	low _pBDTEntryOut
 16045  001192  24F3               	addwf	prodl,w,c
 16046  001194  6ED9               	movwf	fsr2l,c
 16047  001196  0E00               	movlw	high _pBDTEntryOut
 16048  001198  20F4               	addwfc	prodh,w,c
 16049  00119A  6EDA               	movwf	fsr2h,c
 16050  00119C  CFDE F02A          	movff	postinc2,USBStdFeatureReqHandler@p
 16051  0011A0  CFDD F02B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16052                           
 16053                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16054  0011A4  0104               	movlb	4	; () banked
 16055  0011A6  5134               	movf	52,w,b	;volatile
 16056  0011A8  0B0F               	andlw	15
 16057  0011AA  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16058  0011AC  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16059  0011AE  0D01               	mullw	1
 16060  0011B0  0E88               	movlw	low _ep_data_out
 16061  0011B2  24F3               	addwf	prodl,w,c
 16062  0011B4  6ED9               	movwf	fsr2l,c
 16063  0011B6  0E00               	movlw	high _ep_data_out
 16064  0011B8  D01A               	goto	L9
 16065  0011BA                     i2l7174:
 16066                           
 16067                           ; BSR set to: 4
 16068                           ;usb_device.c: 2828: else
 16069                           ;usb_device.c: 2829: {
 16070                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16071  0011BA  0104               	movlb	4	; () banked
 16072  0011BC  5134               	movf	52,w,b	;volatile
 16073  0011BE  0B0F               	andlw	15
 16074  0011C0  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16075  0011C2  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16076  0011C4  0D02               	mullw	2
 16077  0011C6  0E6E               	movlw	low _pBDTEntryIn
 16078  0011C8  24F3               	addwf	prodl,w,c
 16079  0011CA  6ED9               	movwf	fsr2l,c
 16080  0011CC  0E00               	movlw	high _pBDTEntryIn
 16081  0011CE  20F4               	addwfc	prodh,w,c
 16082  0011D0  6EDA               	movwf	fsr2h,c
 16083  0011D2  CFDE F02A          	movff	postinc2,USBStdFeatureReqHandler@p
 16084  0011D6  CFDD F02B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16085                           
 16086                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16087  0011DA  0104               	movlb	4	; () banked
 16088  0011DC  5134               	movf	52,w,b	;volatile
 16089  0011DE  0B0F               	andlw	15
 16090  0011E0  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16091  0011E2  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16092  0011E4  0D01               	mullw	1
 16093  0011E6  0E85               	movlw	low _ep_data_in
 16094  0011E8  24F3               	addwf	prodl,w,c
 16095  0011EA  6ED9               	movwf	fsr2l,c
 16096  0011EC  0E00               	movlw	high _ep_data_in
 16097  0011EE                     L9:
 16098  0011EE  20F4               	addwfc	prodh,w,c
 16099  0011F0  6EDA               	movwf	fsr2h,c
 16100  0011F2  50DF               	movf	indf2,w,c
 16101  0011F4  6E29               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 16102                           
 16103                           ; BSR set to: 4
 16104                           ;usb_device.c: 2832: }
 16105                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 16106                           
 16107                           ; BSR set to: 4
 16108  0011F6  B029               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 16109  0011F8  D002               	goto	i2l7180
 16110                           
 16111                           ; BSR set to: 4
 16112                           ;usb_device.c: 2839: {
 16113                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 16114  0011FA  942A               	bcf	USBStdFeatureReqHandler@p,2,c
 16115                           
 16116                           ;usb_device.c: 2841: }
 16117  0011FC  D001               	goto	i2l7182
 16118  0011FE                     i2l7180:
 16119                           
 16120                           ; BSR set to: 4
 16121                           ;usb_device.c: 2842: else
 16122                           ;usb_device.c: 2843: {
 16123                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 16124  0011FE  842A               	bsf	USBStdFeatureReqHandler@p,2,c
 16125  001200                     i2l7182:
 16126                           
 16127                           ; BSR set to: 4
 16128                           ;usb_device.c: 2845: }
 16129                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 16130  001200  0104               	movlb	4	; () banked
 16131  001202  BF34               	btfsc	52,7,b	;volatile
 16132  001204  D00B               	goto	i2l7186
 16133                           
 16134                           ; BSR set to: 4
 16135                           ;usb_device.c: 2851: {
 16136                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16137  001206  0104               	movlb	4	; () banked
 16138  001208  5134               	movf	52,w,b	;volatile
 16139  00120A  0B0F               	andlw	15
 16140  00120C  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16141  00120E  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16142  001210  0D02               	mullw	2
 16143  001212  0E74               	movlw	low _pBDTEntryOut
 16144  001214  24F3               	addwf	prodl,w,c
 16145  001216  6ED9               	movwf	fsr2l,c
 16146  001218  0E00               	movlw	high _pBDTEntryOut
 16147  00121A  D00A               	goto	L10
 16148  00121C                     i2l7186:
 16149                           
 16150                           ; BSR set to: 4
 16151                           ;usb_device.c: 2854: else
 16152                           ;usb_device.c: 2855: {
 16153                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16154  00121C  0104               	movlb	4	; () banked
 16155  00121E  5134               	movf	52,w,b	;volatile
 16156  001220  0B0F               	andlw	15
 16157  001222  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16158  001224  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16159  001226  0D02               	mullw	2
 16160  001228  0E6E               	movlw	low _pBDTEntryIn
 16161  00122A  24F3               	addwf	prodl,w,c
 16162  00122C  6ED9               	movwf	fsr2l,c
 16163  00122E  0E00               	movlw	high _pBDTEntryIn
 16164  001230                     L10:
 16165  001230  20F4               	addwfc	prodh,w,c
 16166  001232  6EDA               	movwf	fsr2h,c
 16167  001234  C02A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16168  001238  C02B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16169                           
 16170                           ; BSR set to: 4
 16171                           ;usb_device.c: 2857: }
 16172                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 16173                           
 16174                           ; BSR set to: 4
 16175  00123C  0E03               	movlw	3
 16176  00123E  0104               	movlb	4	; () banked
 16177  001240  1931               	xorwf	49,w,b	;volatile
 16178  001242  A4D8               	btfss	status,2,c
 16179  001244  D02F               	goto	i2l7202
 16180                           
 16181                           ; BSR set to: 4
 16182                           ;usb_device.c: 2861: {
 16183                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 16184  001246  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16185  00124A  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16186  00124E  AEDF               	btfss	indf2,7,c
 16187  001250  D01C               	goto	i2l7198
 16188                           
 16189                           ; BSR set to: 4
 16190                           ;usb_device.c: 2863: {
 16191                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 16192  001252  0104               	movlb	4	; () banked
 16193  001254  BF34               	btfsc	52,7,b	;volatile
 16194  001256  D00B               	goto	i2l7196
 16195                           
 16196                           ; BSR set to: 4
 16197                           ;usb_device.c: 2867: {
 16198                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16199  001258  0104               	movlb	4	; () banked
 16200  00125A  5134               	movf	52,w,b	;volatile
 16201  00125C  0B0F               	andlw	15
 16202  00125E  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16203  001260  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16204  001262  0D01               	mullw	1
 16205  001264  0E88               	movlw	low _ep_data_out
 16206  001266  24F3               	addwf	prodl,w,c
 16207  001268  6ED9               	movwf	fsr2l,c
 16208  00126A  0E00               	movlw	high _ep_data_out
 16209  00126C  D00A               	goto	L11
 16210  00126E                     i2l7196:
 16211                           
 16212                           ;usb_device.c: 2870: else
 16213                           ;usb_device.c: 2871: {
 16214                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16215  00126E  0104               	movlb	4	; () banked
 16216  001270  5134               	movf	52,w,b	;volatile
 16217  001272  0B0F               	andlw	15
 16218  001274  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16219  001276  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16220  001278  0D01               	mullw	1
 16221  00127A  0E85               	movlw	low _ep_data_in
 16222  00127C  24F3               	addwf	prodl,w,c
 16223  00127E  6ED9               	movwf	fsr2l,c
 16224  001280  0E00               	movlw	high _ep_data_in
 16225  001282                     L11:
 16226  001282  20F4               	addwfc	prodh,w,c
 16227  001284  6EDA               	movwf	fsr2h,c
 16228  001286  0100               	movlb	0	; () banked
 16229  001288  82DF               	bsf	indf2,1,c
 16230  00128A                     i2l7198:
 16231                           
 16232                           ;usb_device.c: 2873: }
 16233                           ;usb_device.c: 2874: }
 16234                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 16235  00128A  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16236  00128E  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16237  001292  0E00               	movlw	0
 16238  001294  84DB               	bsf	plusw2,2,c
 16239                           
 16240                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 16241  001296  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16242  00129A  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16243  00129E  0E00               	movlw	0
 16244  0012A0  8EDB               	bsf	plusw2,7,c
 16245                           
 16246                           ;usb_device.c: 2879: }
 16247  0012A2  0012               	return	
 16248  0012A4                     i2l7202:
 16249                           
 16250                           ;usb_device.c: 2880: else
 16251                           ;usb_device.c: 2881: {
 16252                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16253  0012A4  0E04               	movlw	4
 16254  0012A6  1A2A               	xorwf	USBStdFeatureReqHandler@p,f,c
 16255                           
 16256                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 16257  0012A8  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16258  0012AC  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16259  0012B0  AEDF               	btfss	indf2,7,c
 16260  0012B2  D01B               	goto	i2l7212
 16261                           
 16262                           ;usb_device.c: 2888: {
 16263                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 16264  0012B4  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16265  0012B8  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16266  0012BC  0E7F               	movlw	127
 16267  0012BE  16DF               	andwf	indf2,f,c
 16268                           
 16269                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 16270  0012C0  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16271  0012C4  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16272  0012C8  0E00               	movlw	0
 16273  0012CA  8CDB               	bsf	plusw2,6,c
 16274                           
 16275                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16276  0012CC  0E00               	movlw	0
 16277  0012CE  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16278  0012D0  0E05               	movlw	5
 16279  0012D2  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16280  0012D4  C02A  F020         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16281  0012D8  C02B  F021         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16282  0012DC  0E00               	movlw	0
 16283  0012DE  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16284  0012E0  0E02               	movlw	2
 16285  0012E2  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16286  0012E4  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16287                           
 16288                           ;usb_device.c: 2894: }
 16289  0012E8  D006               	goto	i2l7214
 16290  0012EA                     i2l7212:
 16291                           
 16292                           ;usb_device.c: 2895: else
 16293                           ;usb_device.c: 2896: {
 16294                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 16295  0012EA  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16296  0012EE  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16297  0012F2  0E00               	movlw	0
 16298  0012F4  8CDB               	bsf	plusw2,6,c
 16299  0012F6                     i2l7214:
 16300                           
 16301                           ;usb_device.c: 2899: }
 16302                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16303  0012F6  0E04               	movlw	4
 16304  0012F8  1A2A               	xorwf	USBStdFeatureReqHandler@p,f,c
 16305                           
 16306                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 16307  0012FA  B229               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 16308  0012FC  D006               	goto	i2l847
 16309  0012FE  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16310  001302  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16311  001306  AEDF               	btfss	indf2,7,c
 16312  001308  D031               	goto	i2l7228
 16313  00130A                     i2l847:
 16314                           
 16315                           ;usb_device.c: 2910: {
 16316                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 16317  00130A  0104               	movlb	4	; () banked
 16318  00130C  BF34               	btfsc	52,7,b	;volatile
 16319  00130E  D00B               	goto	i2l7222
 16320                           
 16321                           ; BSR set to: 4
 16322                           ;usb_device.c: 2912: {
 16323                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16324  001310  0104               	movlb	4	; () banked
 16325  001312  5134               	movf	52,w,b	;volatile
 16326  001314  0B0F               	andlw	15
 16327  001316  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16328  001318  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16329  00131A  0D01               	mullw	1
 16330  00131C  0E88               	movlw	low _ep_data_out
 16331  00131E  24F3               	addwf	prodl,w,c
 16332  001320  6ED9               	movwf	fsr2l,c
 16333  001322  0E00               	movlw	high _ep_data_out
 16334  001324  D00A               	goto	L12
 16335  001326                     i2l7222:
 16336                           
 16337                           ;usb_device.c: 2915: else
 16338                           ;usb_device.c: 2916: {
 16339                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16340  001326  0104               	movlb	4	; () banked
 16341  001328  5134               	movf	52,w,b	;volatile
 16342  00132A  0B0F               	andlw	15
 16343  00132C  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16344  00132E  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16345  001330  0D01               	mullw	1
 16346  001332  0E85               	movlw	low _ep_data_in
 16347  001334  24F3               	addwf	prodl,w,c
 16348  001336  6ED9               	movwf	fsr2l,c
 16349  001338  0E00               	movlw	high _ep_data_in
 16350  00133A                     L12:
 16351  00133A  20F4               	addwfc	prodh,w,c
 16352  00133C  6EDA               	movwf	fsr2h,c
 16353  00133E  0100               	movlb	0	; () banked
 16354  001340  92DF               	bcf	indf2,1,c
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;usb_device.c: 2918: }
 16358                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16359                           
 16360                           ; BSR set to: 0
 16361  001342  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16362  001346  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16363  00134A  0E3B               	movlw	59
 16364  00134C  16DF               	andwf	indf2,f,c
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16368  00134E  0E00               	movlw	0
 16369  001350  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16370  001352  0E05               	movlw	5
 16371  001354  6E1E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16372  001356  C02A  F020         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16373  00135A  C02B  F021         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16374  00135E  0E00               	movlw	0
 16375  001360  6E23               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16376  001362  0E02               	movlw	2
 16377  001364  6E22               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16378  001366  EC0F  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16379                           
 16380                           ;usb_device.c: 2924: }
 16381  00136A  D006               	goto	i2l7230
 16382  00136C                     i2l7228:
 16383                           
 16384                           ;usb_device.c: 2925: else
 16385                           ;usb_device.c: 2926: {
 16386                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16387  00136C  C02A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16388  001370  C02B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16389  001374  0E3B               	movlw	59
 16390  001376  16DF               	andwf	indf2,f,c
 16391  001378                     i2l7230:
 16392                           
 16393                           ;usb_device.c: 2929: }
 16394                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 16395  001378  0104               	movlb	4	; () banked
 16396  00137A  5134               	movf	52,w,b	;volatile
 16397  00137C  0B0F               	andlw	15
 16398  00137E  6E26               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16399  001380  5026               	movf	??_USBStdFeatureReqHandler,w,c
 16400  001382  0D01               	mullw	1
 16401  001384  0E70               	movlw	112
 16402  001386  24F3               	addwf	prodl,w,c
 16403  001388  6E27               	movwf	USBStdFeatureReqHandler@pUEP,c
 16404  00138A  0E0F               	movlw	15
 16405  00138C  20F4               	addwfc	prodh,w,c
 16406  00138E  6E28               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 16407                           
 16408                           ; BSR set to: 4
 16409                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 16410  001390  C027  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 16411  001394  C028  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 16412  001398  0EFE               	movlw	254
 16413  00139A  16DF               	andwf	indf2,f,c
 16414                           
 16415                           ; BSR set to: 4
 16416  00139C  0012               	return	
 16417  00139E                     __end_of_USBStdFeatureReqHandler:
 16418                           	opt stack 0
 16419                           pclatu	equ	0xFFB
 16420                           pclath	equ	0xFFA
 16421                           tblptru	equ	0xFF8
 16422                           tblptrh	equ	0xFF7
 16423                           tblptrl	equ	0xFF6
 16424                           tablat	equ	0xFF5
 16425                           prodh	equ	0xFF4
 16426                           prodl	equ	0xFF3
 16427                           intcon	equ	0xFF2
 16428                           indf0	equ	0xFEF
 16429                           postinc0	equ	0xFEE
 16430                           fsr0h	equ	0xFEA
 16431                           fsr0l	equ	0xFE9
 16432                           wreg	equ	0xFE8
 16433                           indf1	equ	0xFE7
 16434                           postdec1	equ	0xFE5
 16435                           fsr1h	equ	0xFE2
 16436                           fsr1l	equ	0xFE1
 16437                           bsr	equ	0xFE0
 16438                           indf2	equ	0xFDF
 16439                           postinc2	equ	0xFDE
 16440                           postdec2	equ	0xFDD
 16441                           plusw2	equ	0xFDB
 16442                           fsr2h	equ	0xFDA
 16443                           fsr2l	equ	0xFD9
 16444                           status	equ	0xFD8
 16445                           
 16446 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 16447 ;; Defined at:
 16448 ;;		line 91 in file "main_cdc.c"
 16449 ;; Parameters:    Size  Location     Type
 16450 ;;  event           2   29[COMRAM] enum E4785
 16451 ;;  pdata           2   31[COMRAM] PTR void 
 16452 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 16453 ;;  size            2   33[COMRAM] unsigned int 
 16454 ;; Auto vars:     Size  Location     Type
 16455 ;;		None
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      unsigned char 
 16458 ;; Registers used:
 16459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16460 ;; Tracked objects:
 16461 ;;		On entry : 0/0
 16462 ;;		On exit  : 0/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16465 ;;      Params:         6       0       0       0       0       0       0       0       0
 16466 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16467 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16468 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16469 ;;Total ram usage:        8 bytes
 16470 ;; Hardware stack levels used:    1
 16471 ;; Hardware stack levels required when called:    4
 16472 ;; This function calls:
 16473 ;;		_APP_CustomCDCInitialize
 16474 ;;		_APP_USBCBErrorHandler
 16475 ;;		_APP_USBCBSuspend
 16476 ;;		_APP_USBCBWakeFromSuspend
 16477 ;;		_APP_USBCB_SOF_Handler
 16478 ;;		_USBCheckCDCRequest
 16479 ;; This function is called by:
 16480 ;;		_USBDeviceTasks
 16481 ;;		_USBStdSetCfgHandler
 16482 ;;		_USBSuspend
 16483 ;;		_USBWakeFromSuspend
 16484 ;;		_USBCtrlTrfSetupHandler
 16485 ;;		_USBCheckStdRequest
 16486 ;;		_USBStdFeatureReqHandler
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text71
 16491  00381E                     __ptext71:
 16492                           	opt stack 0
 16493  00381E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 16494                           	opt stack 17
 16495                           
 16496                           ;main_cdc.c: 93: switch(event)
 16497                           
 16498                           ;incstack = 0
 16499  00381E  D012               	goto	i2l6886
 16500  003820                     i2l6872:
 16501                           
 16502                           ;main_cdc.c: 99: APP_USBCB_SOF_Handler();
 16503  003820  EC56  F020         	call	_APP_USBCB_SOF_Handler	;wreg free
 16504                           
 16505                           ;main_cdc.c: 103: break;
 16506  003824  0012               	return	
 16507  003826                     i2l6874:
 16508                           
 16509                           ;main_cdc.c: 105: APP_USBCBSuspend();
 16510  003826  EC58  F020         	call	_APP_USBCBSuspend	;wreg free
 16511                           
 16512                           ;main_cdc.c: 108: break;
 16513  00382A  0012               	return	
 16514  00382C                     i2l6876:
 16515                           
 16516                           ;main_cdc.c: 110: APP_USBCBWakeFromSuspend();
 16517  00382C  EC57  F020         	call	_APP_USBCBWakeFromSuspend	;wreg free
 16518                           
 16519                           ;main_cdc.c: 113: break;
 16520  003830  0012               	return	
 16521  003832                     i2l6878:
 16522                           
 16523                           ;main_cdc.c: 118: APP_CustomCDCInitialize();
 16524  003832  EC4F  F020         	call	_APP_CustomCDCInitialize	;wreg free
 16525                           
 16526                           ;main_cdc.c: 122: break;
 16527                           
 16528                           ;main_cdc.c: 120: case EVENT_SET_DESCRIPTOR:
 16529                           
 16530                           ;main_cdc.c: 119: break;
 16531  003836  0012               	return	
 16532  003838                     i2l6880:
 16533                           
 16534                           ;main_cdc.c: 127: USBCheckCDCRequest();
 16535  003838  ECEB  F016         	call	_USBCheckCDCRequest	;wreg free
 16536                           
 16537                           ;main_cdc.c: 128: break;
 16538  00383C  0012               	return	
 16539  00383E                     i2l6882:
 16540                           
 16541                           ;main_cdc.c: 130: APP_USBCBErrorHandler();
 16542  00383E  EC59  F020         	call	_APP_USBCBErrorHandler	;wreg free
 16543                           
 16544                           ;main_cdc.c: 144: }
 16545                           
 16546                           ;main_cdc.c: 143: break;
 16547                           
 16548                           ;main_cdc.c: 142: default:
 16549                           
 16550                           ;main_cdc.c: 141: break;
 16551                           
 16552                           ;main_cdc.c: 132: case EVENT_TRANSFER_TERMINATED:
 16553                           
 16554                           ;main_cdc.c: 131: break;
 16555  003842  0012               	return	
 16556  003844                     i2l6886:
 16557  003844  C01E  F024         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16558  003848  C01F  F025         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16559                           
 16560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16561                           ; Switch size 1, requested type "space"
 16562                           ; Number of cases is 2, Range of values is 0 to 127
 16563                           ; switch strategies available:
 16564                           ; Name         Instructions Cycles
 16565                           ; simple_byte            7     4 (average)
 16566                           ;	Chosen strategy is simple_byte
 16567  00384C  5025               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16568  00384E  0A00               	xorlw	0	; case 0
 16569  003850  B4D8               	btfsc	status,2,c
 16570  003852  D004               	goto	i2l8892
 16571  003854  0A7F               	xorlw	127	; case 127
 16572  003856  A4D8               	btfss	status,2,c
 16573  003858  0012               	return	
 16574  00385A  D01A               	goto	i2l8894
 16575  00385C                     i2l8892:
 16576                           
 16577                           ; Switch size 1, requested type "space"
 16578                           ; Number of cases is 8, Range of values is 1 to 117
 16579                           ; switch strategies available:
 16580                           ; Name         Instructions Cycles
 16581                           ; simple_byte           25    13 (average)
 16582                           ;	Chosen strategy is simple_byte
 16583  00385C  5024               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16584  00385E  0A01               	xorlw	1	; case 1
 16585  003860  B4D8               	btfsc	status,2,c
 16586  003862  D7E7               	goto	i2l6878
 16587  003864  0A03               	xorlw	3	; case 2
 16588  003866  B4D8               	btfsc	status,2,c
 16589  003868  0012               	return	
 16590  00386A  0A01               	xorlw	1	; case 3
 16591  00386C  B4D8               	btfsc	status,2,c
 16592  00386E  D7E4               	goto	i2l6880
 16593  003870  0A06               	xorlw	6	; case 5
 16594  003872  B4D8               	btfsc	status,2,c
 16595  003874  0012               	return	
 16596  003876  0A77               	xorlw	119	; case 114
 16597  003878  B4D8               	btfsc	status,2,c
 16598  00387A  0012               	return	
 16599  00387C  0A01               	xorlw	1	; case 115
 16600  00387E  B4D8               	btfsc	status,2,c
 16601  003880  D7CF               	goto	i2l6872
 16602  003882  0A07               	xorlw	7	; case 116
 16603  003884  B4D8               	btfsc	status,2,c
 16604  003886  D7D2               	goto	i2l6876
 16605  003888  0A01               	xorlw	1	; case 117
 16606  00388A  A4D8               	btfss	status,2,c
 16607  00388C  0012               	return	
 16608  00388E  D7CB               	goto	i2l6874
 16609  003890                     i2l8894:
 16610                           
 16611                           ; Switch size 1, requested type "space"
 16612                           ; Number of cases is 1, Range of values is 255 to 255
 16613                           ; switch strategies available:
 16614                           ; Name         Instructions Cycles
 16615                           ; simple_byte            4     3 (average)
 16616                           ;	Chosen strategy is simple_byte
 16617  003890  5024               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16618  003892  0AFF               	xorlw	255	; case 255
 16619  003894  A4D8               	btfss	status,2,c
 16620  003896  0012               	return	
 16621  003898  D7D2               	goto	i2l6882
 16622  00389A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16623                           	opt stack 0
 16624                           pclatu	equ	0xFFB
 16625                           pclath	equ	0xFFA
 16626                           tblptru	equ	0xFF8
 16627                           tblptrh	equ	0xFF7
 16628                           tblptrl	equ	0xFF6
 16629                           tablat	equ	0xFF5
 16630                           prodh	equ	0xFF4
 16631                           prodl	equ	0xFF3
 16632                           intcon	equ	0xFF2
 16633                           indf0	equ	0xFEF
 16634                           postinc0	equ	0xFEE
 16635                           fsr0h	equ	0xFEA
 16636                           fsr0l	equ	0xFE9
 16637                           wreg	equ	0xFE8
 16638                           indf1	equ	0xFE7
 16639                           postdec1	equ	0xFE5
 16640                           fsr1h	equ	0xFE2
 16641                           fsr1l	equ	0xFE1
 16642                           bsr	equ	0xFE0
 16643                           indf2	equ	0xFDF
 16644                           postinc2	equ	0xFDE
 16645                           postdec2	equ	0xFDD
 16646                           plusw2	equ	0xFDB
 16647                           fsr2h	equ	0xFDA
 16648                           fsr2l	equ	0xFD9
 16649                           status	equ	0xFD8
 16650                           
 16651 ;; *************** function _USBCheckCDCRequest *****************
 16652 ;; Defined at:
 16653 ;;		line 212 in file "../mla/v2014_07_22/framework/usb/src/usb_device_cdc.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;		None               void
 16660 ;; Registers used:
 16661 ;;		wreg, status,2, status,0
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16677 ;;		_APP_USBCBCheckOtherReq
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text72
 16682  002DD6                     __ptext72:
 16683                           	opt stack 0
 16684  002DD6                     _USBCheckCDCRequest:
 16685                           	opt stack 20
 16686                           
 16687                           ;usb_device_cdc.c: 217: if(SetupPkt.Recipient != (0x01)) return;
 16688                           
 16689                           ;incstack = 0
 16690  002DD6  0104               	movlb	4	; () banked
 16691  002DD8  5130               	movf	48,w,b	;volatile
 16692  002DDA  0B1F               	andlw	31
 16693  002DDC  06E8               	decf	wreg,f,c
 16694  002DDE  A4D8               	btfss	status,2,c
 16695  002DE0  0012               	return	
 16696                           
 16697                           ; BSR set to: 4
 16698                           ;usb_device_cdc.c: 222: if(SetupPkt.RequestType != (0x20>>5)) return;
 16699                           
 16700                           ; BSR set to: 4
 16701                           
 16702                           ; BSR set to: 4
 16703  002DE2  0104               	movlb	4	; () banked
 16704  002DE4  3930               	swapf	48,w,b	;volatile
 16705  002DE6  32E8               	rrcf	wreg,f,c
 16706  002DE8  0B03               	andlw	3
 16707  002DEA  06E8               	decf	wreg,f,c
 16708  002DEC  A4D8               	btfss	status,2,c
 16709  002DEE  0012               	return	
 16710                           
 16711                           ; BSR set to: 4
 16712                           ;usb_device_cdc.c: 228: if((SetupPkt.bIntfID != 0x0)&&
 16713                           ;usb_device_cdc.c: 229: (SetupPkt.bIntfID != 0x01)) return;
 16714                           
 16715                           ; BSR set to: 4
 16716                           
 16717                           ; BSR set to: 4
 16718  002DF0  0104               	movlb	4	; () banked
 16719  002DF2  5134               	movf	52,w,b	;volatile
 16720  002DF4  B4D8               	btfsc	status,2,c
 16721  002DF6  D045               	goto	i2l6868
 16722                           
 16723                           ; BSR set to: 4
 16724  002DF8  0104               	movlb	4	; () banked
 16725  002DFA  0534               	decf	52,w,b	;volatile
 16726  002DFC  A4D8               	btfss	status,2,c
 16727  002DFE  0012               	return	
 16728  002E00  D040               	goto	i2l6868
 16729  002E02                     i2l6844:
 16730                           
 16731                           ; BSR set to: 4
 16732                           ;usb_device_cdc.c: 236: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 16733  002E02  0E67               	movlw	low _dummy_encapsulated_cmd_response
 16734  002E04  0100               	movlb	0	; () banked
 16735  002E06  6F68               	movwf	_inPipes& (0+255),b	;volatile
 16736  002E08  0E01               	movlw	high _dummy_encapsulated_cmd_response
 16737  002E0A  0100               	movlb	0	; () banked
 16738  002E0C  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;usb_device_cdc.c: 237: inPipes[0].wCount.Val = 0x08;
 16742  002E0E  0E00               	movlw	0
 16743  002E10  0100               	movlb	0	; () banked
 16744  002E12  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16745  002E14  0E08               	movlw	8
 16746  002E16  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;usb_device_cdc.c: 238: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16750  002E18  0100               	movlb	0	; () banked
 16751  002E1A  816B               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;usb_device_cdc.c: 239: inPipes[0].info.bits.busy = 1;
 16755  002E1C  0100               	movlb	0	; () banked
 16756  002E1E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16757                           
 16758                           ;usb_device_cdc.c: 240: break;
 16759  002E20  0012               	return	
 16760  002E22                     i2l6852:
 16761                           
 16762                           ;usb_device_cdc.c: 243: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 16763  002E22  0E67               	movlw	low _dummy_encapsulated_cmd_response
 16764  002E24  0100               	movlb	0	; () banked
 16765  002E26  6F68               	movwf	_inPipes& (0+255),b	;volatile
 16766  002E28  0E01               	movlw	high _dummy_encapsulated_cmd_response
 16767  002E2A  0100               	movlb	0	; () banked
 16768  002E2C  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16769                           
 16770                           ; BSR set to: 0
 16771                           ;usb_device_cdc.c: 244: inPipes[0].info.bits.busy = 1;
 16772  002E2E  0100               	movlb	0	; () banked
 16773  002E30  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16774                           
 16775                           ;usb_device_cdc.c: 245: break;
 16776  002E32  0012               	return	
 16777  002E34                     i2l904:
 16778                           
 16779                           ; BSR set to: 4
 16780                           ;usb_device_cdc.c: 250: outPipes[0].wCount.Val = SetupPkt.wLength;
 16781  002E34  C436 F064          	movff	1078,_outPipes+4	;volatile
 16782  002E38  C437 F065          	movff	1079,_outPipes+5	;volatile
 16783                           
 16784                           ; BSR set to: 4
 16785                           ;usb_device_cdc.c: 251: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 16786  002E3C  0E43               	movlw	low _line_coding
 16787  002E3E  0100               	movlb	0	; () banked
 16788  002E40  6F60               	movwf	_outPipes& (0+255),b	;volatile
 16789  002E42  0E00               	movlw	high _line_coding
 16790  002E44  0100               	movlb	0	; () banked
 16791  002E46  6F61               	movwf	(_outPipes+1)& (0+255),b	;volatile
 16792                           
 16793                           ;usb_device_cdc.c: 252: outPipes[0].pFunc = (0);
 16794  002E48  0E00               	movlw	0
 16795  002E4A  0100               	movlb	0	; () banked
 16796  002E4C  6F66               	movwf	(_outPipes+6)& (0+255),b	;volatile
 16797  002E4E  0E00               	movlw	0
 16798  002E50  0100               	movlb	0	; () banked
 16799  002E52  6F67               	movwf	(_outPipes+7)& (0+255),b	;volatile
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;usb_device_cdc.c: 253: outPipes[0].info.bits.busy = 1;
 16803  002E54  0100               	movlb	0	; () banked
 16804  002E56  8F63               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 16805                           
 16806                           ;usb_device_cdc.c: 254: break;
 16807  002E58  0012               	return	
 16808  002E5A                     i2l6860:
 16809                           
 16810                           ;usb_device_cdc.c: 257: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16811  002E5A  0E43               	movlw	low _line_coding
 16812  002E5C  0100               	movlb	0	; () banked
 16813  002E5E  6F68               	movwf	_inPipes& (0+255),b	;volatile
 16814  002E60  0E00               	movlw	high _line_coding
 16815  002E62  0100               	movlb	0	; () banked
 16816  002E64  6F69               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16817                           
 16818                           ; BSR set to: 0
 16819  002E66  0E00               	movlw	0
 16820  002E68  0100               	movlb	0	; () banked
 16821  002E6A  6F6D               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16822  002E6C  0E07               	movlw	7
 16823  002E6E  6F6C               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16824                           
 16825                           ; BSR set to: 0
 16826  002E70  0EC1               	movlw	193
 16827  002E72  0100               	movlb	0	; () banked
 16828  002E74  6F6B               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16829                           
 16830                           ;usb_device_cdc.c: 261: break;
 16831  002E76  0012               	return	
 16832  002E78                     i2l906:
 16833                           
 16834                           ; BSR set to: 4
 16835                           ;usb_device_cdc.c: 264: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 16836  002E78  C432 F03F          	movff	1074,_control_signal_bitmap	;volatile
 16837                           
 16838                           ;usb_device_cdc.c: 296: inPipes[0].info.bits.busy = 1;
 16839  002E7C  0100               	movlb	0	; () banked
 16840  002E7E  8F6B               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;usb_device_cdc.c: 323: }
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;usb_device_cdc.c: 322: break;
 16847                           
 16848                           ;usb_device_cdc.c: 321: default:
 16849                           
 16850                           ;usb_device_cdc.c: 297: break;
 16851  002E80  0012               	return	
 16852  002E82                     i2l6868:
 16853  002E82  0104               	movlb	4	; () banked
 16854  002E84  5131               	movf	49,w,b	;volatile
 16855                           
 16856                           ; Switch size 1, requested type "space"
 16857                           ; Number of cases is 5, Range of values is 0 to 34
 16858                           ; switch strategies available:
 16859                           ; Name         Instructions Cycles
 16860                           ; simple_byte           16     9 (average)
 16861                           ;	Chosen strategy is simple_byte
 16862  002E86  0A00               	xorlw	0	; case 0
 16863  002E88  B4D8               	btfsc	status,2,c
 16864  002E8A  D7BB               	goto	i2l6844
 16865  002E8C  0A01               	xorlw	1	; case 1
 16866  002E8E  B4D8               	btfsc	status,2,c
 16867  002E90  D7C8               	goto	i2l6852
 16868  002E92  0A21               	xorlw	33	; case 32
 16869  002E94  B4D8               	btfsc	status,2,c
 16870  002E96  D7CE               	goto	i2l904
 16871  002E98  0A01               	xorlw	1	; case 33
 16872  002E9A  B4D8               	btfsc	status,2,c
 16873  002E9C  D7DE               	goto	i2l6860
 16874  002E9E  0A03               	xorlw	3	; case 34
 16875  002EA0  A4D8               	btfss	status,2,c
 16876  002EA2  0012               	return	
 16877  002EA4  D7E9               	goto	i2l906
 16878  002EA6                     __end_of_USBCheckCDCRequest:
 16879                           	opt stack 0
 16880                           pclatu	equ	0xFFB
 16881                           pclath	equ	0xFFA
 16882                           tblptru	equ	0xFF8
 16883                           tblptrh	equ	0xFF7
 16884                           tblptrl	equ	0xFF6
 16885                           tablat	equ	0xFF5
 16886                           prodh	equ	0xFF4
 16887                           prodl	equ	0xFF3
 16888                           intcon	equ	0xFF2
 16889                           indf0	equ	0xFEF
 16890                           postinc0	equ	0xFEE
 16891                           fsr0h	equ	0xFEA
 16892                           fsr0l	equ	0xFE9
 16893                           wreg	equ	0xFE8
 16894                           indf1	equ	0xFE7
 16895                           postdec1	equ	0xFE5
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           bsr	equ	0xFE0
 16899                           indf2	equ	0xFDF
 16900                           postinc2	equ	0xFDE
 16901                           postdec2	equ	0xFDD
 16902                           plusw2	equ	0xFDB
 16903                           fsr2h	equ	0xFDA
 16904                           fsr2l	equ	0xFD9
 16905                           status	equ	0xFD8
 16906                           
 16907 ;; *************** function _APP_USBCB_SOF_Handler *****************
 16908 ;; Defined at:
 16909 ;;		line 586 in file "app_custom_cdc.c"
 16910 ;; Parameters:    Size  Location     Type
 16911 ;;		None
 16912 ;; Auto vars:     Size  Location     Type
 16913 ;;		None
 16914 ;; Return value:  Size  Location     Type
 16915 ;;		None               void
 16916 ;; Registers used:
 16917 ;;		None
 16918 ;; Tracked objects:
 16919 ;;		On entry : 0/0
 16920 ;;		On exit  : 0/0
 16921 ;;		Unchanged: 0/0
 16922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16923 ;;      Params:         0       0       0       0       0       0       0       0       0
 16924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16927 ;;Total ram usage:        0 bytes
 16928 ;; Hardware stack levels used:    1
 16929 ;; This function calls:
 16930 ;;		Nothing
 16931 ;; This function is called by:
 16932 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           	psect	text73
 16937  0040AC                     __ptext73:
 16938                           	opt stack 0
 16939  0040AC                     _APP_USBCB_SOF_Handler:
 16940                           	opt stack 20
 16941                           
 16942                           ;incstack = 0
 16943  0040AC  0012               	return		;funcret
 16944  0040AE                     __end_of_APP_USBCB_SOF_Handler:
 16945                           	opt stack 0
 16946                           pclatu	equ	0xFFB
 16947                           pclath	equ	0xFFA
 16948                           tblptru	equ	0xFF8
 16949                           tblptrh	equ	0xFF7
 16950                           tblptrl	equ	0xFF6
 16951                           tablat	equ	0xFF5
 16952                           prodh	equ	0xFF4
 16953                           prodl	equ	0xFF3
 16954                           intcon	equ	0xFF2
 16955                           indf0	equ	0xFEF
 16956                           postinc0	equ	0xFEE
 16957                           fsr0h	equ	0xFEA
 16958                           fsr0l	equ	0xFE9
 16959                           wreg	equ	0xFE8
 16960                           indf1	equ	0xFE7
 16961                           postdec1	equ	0xFE5
 16962                           fsr1h	equ	0xFE2
 16963                           fsr1l	equ	0xFE1
 16964                           bsr	equ	0xFE0
 16965                           indf2	equ	0xFDF
 16966                           postinc2	equ	0xFDE
 16967                           postdec2	equ	0xFDD
 16968                           plusw2	equ	0xFDB
 16969                           fsr2h	equ	0xFDA
 16970                           fsr2l	equ	0xFD9
 16971                           status	equ	0xFD8
 16972                           
 16973 ;; *************** function _APP_USBCBWakeFromSuspend *****************
 16974 ;; Defined at:
 16975 ;;		line 554 in file "app_custom_cdc.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;		None
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;		None
 16980 ;; Return value:  Size  Location     Type
 16981 ;;		None               void
 16982 ;; Registers used:
 16983 ;;		None
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 0/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16989 ;;      Params:         0       0       0       0       0       0       0       0       0
 16990 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16992 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16993 ;;Total ram usage:        0 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16999 ;;		_USBCBSendResume
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           	psect	text74
 17004  0040AE                     __ptext74:
 17005                           	opt stack 0
 17006  0040AE                     _APP_USBCBWakeFromSuspend:
 17007                           	opt stack 20
 17008                           
 17009                           ;incstack = 0
 17010  0040AE  0012               	return		;funcret
 17011  0040B0                     __end_of_APP_USBCBWakeFromSuspend:
 17012                           	opt stack 0
 17013                           pclatu	equ	0xFFB
 17014                           pclath	equ	0xFFA
 17015                           tblptru	equ	0xFF8
 17016                           tblptrh	equ	0xFF7
 17017                           tblptrl	equ	0xFF6
 17018                           tablat	equ	0xFF5
 17019                           prodh	equ	0xFF4
 17020                           prodl	equ	0xFF3
 17021                           intcon	equ	0xFF2
 17022                           indf0	equ	0xFEF
 17023                           postinc0	equ	0xFEE
 17024                           fsr0h	equ	0xFEA
 17025                           fsr0l	equ	0xFE9
 17026                           wreg	equ	0xFE8
 17027                           indf1	equ	0xFE7
 17028                           postdec1	equ	0xFE5
 17029                           fsr1h	equ	0xFE2
 17030                           fsr1l	equ	0xFE1
 17031                           bsr	equ	0xFE0
 17032                           indf2	equ	0xFDF
 17033                           postinc2	equ	0xFDE
 17034                           postdec2	equ	0xFDD
 17035                           plusw2	equ	0xFDB
 17036                           fsr2h	equ	0xFDA
 17037                           fsr2l	equ	0xFD9
 17038                           status	equ	0xFD8
 17039                           
 17040 ;; *************** function _APP_USBCBSuspend *****************
 17041 ;; Defined at:
 17042 ;;		line 512 in file "app_custom_cdc.c"
 17043 ;; Parameters:    Size  Location     Type
 17044 ;;		None
 17045 ;; Auto vars:     Size  Location     Type
 17046 ;;		None
 17047 ;; Return value:  Size  Location     Type
 17048 ;;		None               void
 17049 ;; Registers used:
 17050 ;;		None
 17051 ;; Tracked objects:
 17052 ;;		On entry : 0/0
 17053 ;;		On exit  : 0/0
 17054 ;;		Unchanged: 0/0
 17055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17056 ;;      Params:         0       0       0       0       0       0       0       0       0
 17057 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17059 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17060 ;;Total ram usage:        0 bytes
 17061 ;; Hardware stack levels used:    1
 17062 ;; This function calls:
 17063 ;;		Nothing
 17064 ;; This function is called by:
 17065 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text75
 17070  0040B0                     __ptext75:
 17071                           	opt stack 0
 17072  0040B0                     _APP_USBCBSuspend:
 17073                           	opt stack 20
 17074                           
 17075                           ;incstack = 0
 17076  0040B0  0012               	return		;funcret
 17077  0040B2                     __end_of_APP_USBCBSuspend:
 17078                           	opt stack 0
 17079                           pclatu	equ	0xFFB
 17080                           pclath	equ	0xFFA
 17081                           tblptru	equ	0xFF8
 17082                           tblptrh	equ	0xFF7
 17083                           tblptrl	equ	0xFF6
 17084                           tablat	equ	0xFF5
 17085                           prodh	equ	0xFF4
 17086                           prodl	equ	0xFF3
 17087                           intcon	equ	0xFF2
 17088                           indf0	equ	0xFEF
 17089                           postinc0	equ	0xFEE
 17090                           fsr0h	equ	0xFEA
 17091                           fsr0l	equ	0xFE9
 17092                           wreg	equ	0xFE8
 17093                           indf1	equ	0xFE7
 17094                           postdec1	equ	0xFE5
 17095                           fsr1h	equ	0xFE2
 17096                           fsr1l	equ	0xFE1
 17097                           bsr	equ	0xFE0
 17098                           indf2	equ	0xFDF
 17099                           postinc2	equ	0xFDE
 17100                           postdec2	equ	0xFDD
 17101                           plusw2	equ	0xFDB
 17102                           fsr2h	equ	0xFDA
 17103                           fsr2l	equ	0xFD9
 17104                           status	equ	0xFD8
 17105                           
 17106 ;; *************** function _APP_USBCBErrorHandler *****************
 17107 ;; Defined at:
 17108 ;;		line 609 in file "app_custom_cdc.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;		None
 17111 ;; Auto vars:     Size  Location     Type
 17112 ;;		None
 17113 ;; Return value:  Size  Location     Type
 17114 ;;		None               void
 17115 ;; Registers used:
 17116 ;;		None
 17117 ;; Tracked objects:
 17118 ;;		On entry : 0/0
 17119 ;;		On exit  : 0/0
 17120 ;;		Unchanged: 0/0
 17121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17122 ;;      Params:         0       0       0       0       0       0       0       0       0
 17123 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17125 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17126 ;;Total ram usage:        0 bytes
 17127 ;; Hardware stack levels used:    1
 17128 ;; This function calls:
 17129 ;;		Nothing
 17130 ;; This function is called by:
 17131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text76
 17136  0040B2                     __ptext76:
 17137                           	opt stack 0
 17138  0040B2                     _APP_USBCBErrorHandler:
 17139                           	opt stack 20
 17140                           
 17141                           ;incstack = 0
 17142  0040B2  0012               	return		;funcret
 17143  0040B4                     __end_of_APP_USBCBErrorHandler:
 17144                           	opt stack 0
 17145                           pclatu	equ	0xFFB
 17146                           pclath	equ	0xFFA
 17147                           tblptru	equ	0xFF8
 17148                           tblptrh	equ	0xFF7
 17149                           tblptrl	equ	0xFF6
 17150                           tablat	equ	0xFF5
 17151                           prodh	equ	0xFF4
 17152                           prodl	equ	0xFF3
 17153                           intcon	equ	0xFF2
 17154                           indf0	equ	0xFEF
 17155                           postinc0	equ	0xFEE
 17156                           fsr0h	equ	0xFEA
 17157                           fsr0l	equ	0xFE9
 17158                           wreg	equ	0xFE8
 17159                           indf1	equ	0xFE7
 17160                           postdec1	equ	0xFE5
 17161                           fsr1h	equ	0xFE2
 17162                           fsr1l	equ	0xFE1
 17163                           bsr	equ	0xFE0
 17164                           indf2	equ	0xFDF
 17165                           postinc2	equ	0xFDE
 17166                           postdec2	equ	0xFDD
 17167                           plusw2	equ	0xFDB
 17168                           fsr2h	equ	0xFDA
 17169                           fsr2l	equ	0xFD9
 17170                           status	equ	0xFD8
 17171                           
 17172 ;; *************** function _APP_CustomCDCInitialize *****************
 17173 ;; Defined at:
 17174 ;;		line 80 in file "app_custom_cdc.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;		None               void
 17181 ;; Registers used:
 17182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17191 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17192 ;;Total ram usage:        0 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    3
 17195 ;; This function calls:
 17196 ;;		_CDCInitEP
 17197 ;; This function is called by:
 17198 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text77
 17203  00409E                     __ptext77:
 17204                           	opt stack 0
 17205  00409E                     _APP_CustomCDCInitialize:
 17206                           	opt stack 17
 17207                           
 17208                           ;app_custom_cdc.c: 82: CDCInitEP();
 17209                           
 17210                           ;incstack = 0
 17211  00409E  EC6A  F01D         	call	_CDCInitEP	;wreg free
 17212  0040A2  0012               	return		;funcret
 17213  0040A4                     __end_of_APP_CustomCDCInitialize:
 17214                           	opt stack 0
 17215                           pclatu	equ	0xFFB
 17216                           pclath	equ	0xFFA
 17217                           tblptru	equ	0xFF8
 17218                           tblptrh	equ	0xFF7
 17219                           tblptrl	equ	0xFF6
 17220                           tablat	equ	0xFF5
 17221                           prodh	equ	0xFF4
 17222                           prodl	equ	0xFF3
 17223                           intcon	equ	0xFF2
 17224                           indf0	equ	0xFEF
 17225                           postinc0	equ	0xFEE
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postdec1	equ	0xFE5
 17231                           fsr1h	equ	0xFE2
 17232                           fsr1l	equ	0xFE1
 17233                           bsr	equ	0xFE0
 17234                           indf2	equ	0xFDF
 17235                           postinc2	equ	0xFDE
 17236                           postdec2	equ	0xFDD
 17237                           plusw2	equ	0xFDB
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function _CDCInitEP *****************
 17243 ;; Defined at:
 17244 ;;		line 359 in file "../mla/v2014_07_22/framework/usb/src/usb_device_cdc.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;		None
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;		None
 17249 ;; Return value:  Size  Location     Type
 17250 ;;		None               void
 17251 ;; Registers used:
 17252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17253 ;; Tracked objects:
 17254 ;;		On entry : 0/0
 17255 ;;		On exit  : 0/0
 17256 ;;		Unchanged: 0/0
 17257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17258 ;;      Params:         0       0       0       0       0       0       0       0       0
 17259 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17260 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17261 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17262 ;;Total ram usage:        0 bytes
 17263 ;; Hardware stack levels used:    1
 17264 ;; Hardware stack levels required when called:    2
 17265 ;; This function calls:
 17266 ;;		_USBEnableEndpoint
 17267 ;;		i2_USBTransferOnePacket
 17268 ;; This function is called by:
 17269 ;;		_APP_CustomCDCInitialize
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           	psect	text78
 17274  003AD4                     __ptext78:
 17275                           	opt stack 0
 17276  003AD4                     _CDCInitEP:
 17277                           	opt stack 17
 17278                           
 17279                           ;usb_device_cdc.c: 362: line_coding.dwDTERate = 19200;
 17280                           
 17281                           ;incstack = 0
 17282  003AD4  0E00               	movlw	0
 17283  003AD6  6E43               	movwf	_line_coding,c
 17284  003AD8  0E4B               	movlw	75
 17285  003ADA  6E44               	movwf	_line_coding+1,c
 17286  003ADC  0E00               	movlw	0
 17287  003ADE  6E45               	movwf	_line_coding+2,c
 17288  003AE0  0E00               	movlw	0
 17289  003AE2  6E46               	movwf	_line_coding+3,c
 17290                           
 17291                           ;usb_device_cdc.c: 363: line_coding.bCharFormat = 0x00;
 17292  003AE4  0E00               	movlw	0
 17293  003AE6  6E47               	movwf	_line_coding+4,c
 17294                           
 17295                           ;usb_device_cdc.c: 364: line_coding.bParityType = 0x00;
 17296  003AE8  0E00               	movlw	0
 17297  003AEA  6E48               	movwf	_line_coding+5,c
 17298                           
 17299                           ;usb_device_cdc.c: 365: line_coding.bDataBits = 0x08;
 17300  003AEC  0E08               	movlw	8
 17301  003AEE  6E49               	movwf	_line_coding+6,c
 17302                           
 17303                           ;usb_device_cdc.c: 367: cdc_rx_len = 0;
 17304  003AF0  0E00               	movlw	0
 17305  003AF2  0100               	movlb	0	; () banked
 17306  003AF4  6F9C               	movwf	_cdc_rx_len& (0+255),b
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;usb_device_cdc.c: 380: USBEnableEndpoint(1,0x02|0x10|0x08);
 17310  003AF6  0E1A               	movlw	26
 17311  003AF8  6E1A               	movwf	USBEnableEndpoint@options,c
 17312  003AFA  0E01               	movlw	1
 17313  003AFC  ECB7  F01E         	call	_USBEnableEndpoint
 17314                           
 17315                           ;usb_device_cdc.c: 381: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17316  003B00  0E1E               	movlw	30
 17317  003B02  6E1A               	movwf	USBEnableEndpoint@options,c
 17318  003B04  0E02               	movlw	2
 17319  003B06  ECB7  F01E         	call	_USBEnableEndpoint
 17320                           
 17321                           ;usb_device_cdc.c: 383: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17322  003B0A  0E00               	movlw	0
 17323  003B0C  6E12               	movwf	i2USBTransferOnePacket@dir,c
 17324  003B0E  0E40               	movlw	64
 17325  003B10  6E13               	movwf	i2USBTransferOnePacket@data,c
 17326  003B12  0E05               	movlw	5
 17327  003B14  6E14               	movwf	i2USBTransferOnePacket@data+1,c
 17328  003B16  0E40               	movlw	64
 17329  003B18  6E15               	movwf	i2USBTransferOnePacket@len,c
 17330  003B1A  0E02               	movlw	2
 17331  003B1C  EC01  F01A         	call	i2_USBTransferOnePacket
 17332  003B20  C012  F096         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17333  003B24  C013  F097         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17334                           
 17335                           ;usb_device_cdc.c: 384: CDCDataInHandle = (0);
 17336  003B28  0E00               	movlw	0
 17337  003B2A  0100               	movlb	0	; () banked
 17338  003B2C  6F94               	movwf	_CDCDataInHandle& (0+255),b
 17339  003B2E  0E00               	movlw	0
 17340  003B30  0100               	movlb	0	; () banked
 17341  003B32  6F95               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;usb_device_cdc.c: 411: cdc_trf_state = 0;
 17345  003B34  0E00               	movlw	0
 17346  003B36  0100               	movlb	0	; () banked
 17347  003B38  6F9D               	movwf	_cdc_trf_state& (0+255),b
 17348                           
 17349                           ; BSR set to: 0
 17350  003B3A  0012               	return		;funcret
 17351  003B3C                     __end_of_CDCInitEP:
 17352                           	opt stack 0
 17353                           pclatu	equ	0xFFB
 17354                           pclath	equ	0xFFA
 17355                           tblptru	equ	0xFF8
 17356                           tblptrh	equ	0xFF7
 17357                           tblptrl	equ	0xFF6
 17358                           tablat	equ	0xFF5
 17359                           prodh	equ	0xFF4
 17360                           prodl	equ	0xFF3
 17361                           intcon	equ	0xFF2
 17362                           indf0	equ	0xFEF
 17363                           postinc0	equ	0xFEE
 17364                           fsr0h	equ	0xFEA
 17365                           fsr0l	equ	0xFE9
 17366                           wreg	equ	0xFE8
 17367                           indf1	equ	0xFE7
 17368                           postdec1	equ	0xFE5
 17369                           fsr1h	equ	0xFE2
 17370                           fsr1l	equ	0xFE1
 17371                           bsr	equ	0xFE0
 17372                           indf2	equ	0xFDF
 17373                           postinc2	equ	0xFDE
 17374                           postdec2	equ	0xFDD
 17375                           plusw2	equ	0xFDB
 17376                           fsr2h	equ	0xFDA
 17377                           fsr2l	equ	0xFD9
 17378                           status	equ	0xFD8
 17379                           
 17380 ;; *************** function i2_USBTransferOnePacket *****************
 17381 ;; Defined at:
 17382 ;;		line 995 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;  ep              1    wreg     unsigned char 
 17385 ;;  dir             1   17[COMRAM] unsigned char 
 17386 ;;  data            2   18[COMRAM] PTR unsigned char 
 17387 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17388 ;;  len             1   20[COMRAM] unsigned char 
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;  ep              1   21[COMRAM] unsigned char 
 17391 ;;  USBTransferO    2   22[COMRAM] PTR volatile struct __BD
 17392 ;;		 -> NULL(0), BDT(48), 
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  2   17[COMRAM] PTR void 
 17395 ;; Registers used:
 17396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17402 ;;      Params:         4       0       0       0       0       0       0       0       0
 17403 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17405 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17406 ;;Total ram usage:        7 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; This function calls:
 17409 ;;		Nothing
 17410 ;; This function is called by:
 17411 ;;		_CDCInitEP
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           	psect	text79
 17416  003402                     __ptext79:
 17417                           	opt stack 0
 17418  003402                     i2_USBTransferOnePacket:
 17419                           	opt stack 18
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;incstack = 0
 17423                           ;i2USBTransferOnePacket@ep stored from wreg
 17424  003402  6E16               	movwf	i2USBTransferOnePacket@ep,c
 17425                           
 17426                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 17427                           ;usb_device.c: 1000: if(dir != 0)
 17428  003404  5012               	movf	i2USBTransferOnePacket@dir,w,c
 17429  003406  B4D8               	btfsc	status,2,c
 17430  003408  D007               	goto	i2l6790
 17431                           
 17432                           ;usb_device.c: 1001: {
 17433                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 17434  00340A  5016               	movf	i2USBTransferOnePacket@ep,w,c
 17435  00340C  0D02               	mullw	2
 17436  00340E  0E6E               	movlw	low _pBDTEntryIn
 17437  003410  24F3               	addwf	prodl,w,c
 17438  003412  6ED9               	movwf	fsr2l,c
 17439  003414  0E00               	movlw	high _pBDTEntryIn
 17440  003416  D006               	goto	L13
 17441  003418                     i2l6790:
 17442                           
 17443                           ;usb_device.c: 1005: else
 17444                           ;usb_device.c: 1006: {
 17445                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 17446  003418  5016               	movf	i2USBTransferOnePacket@ep,w,c
 17447  00341A  0D02               	mullw	2
 17448  00341C  0E74               	movlw	low _pBDTEntryOut
 17449  00341E  24F3               	addwf	prodl,w,c
 17450  003420  6ED9               	movwf	fsr2l,c
 17451  003422  0E00               	movlw	high _pBDTEntryOut
 17452  003424                     L13:
 17453  003424  20F4               	addwfc	prodh,w,c
 17454  003426  6EDA               	movwf	fsr2h,c
 17455  003428  CFDE F017          	movff	postinc2,i2USBTransferOnePacket@handle
 17456  00342C  CFDD F018          	movff	postdec2,i2USBTransferOnePacket@handle+1
 17457                           
 17458                           ;usb_device.c: 1009: }
 17459                           ;usb_device.c: 1013: if(handle == 0)
 17460  003430  5017               	movf	i2USBTransferOnePacket@handle,w,c
 17461  003432  1018               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 17462  003434  A4D8               	btfss	status,2,c
 17463  003436  D005               	goto	i2l6798
 17464                           
 17465                           ;usb_device.c: 1014: {
 17466                           ;usb_device.c: 1015: return 0;
 17467  003438  0E00               	movlw	0
 17468  00343A  6E12               	movwf	?i2_USBTransferOnePacket,c
 17469  00343C  0E00               	movlw	0
 17470  00343E  6E13               	movwf	?i2_USBTransferOnePacket+1,c
 17471  003440  0012               	return	
 17472  003442                     i2l6798:
 17473                           
 17474                           ;usb_device.c: 1016: }
 17475                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 17476  003442  EE20 F002          	lfsr	2,2
 17477  003446  5017               	movf	i2USBTransferOnePacket@handle,w,c
 17478  003448  26D9               	addwf	fsr2l,f,c
 17479  00344A  5018               	movf	i2USBTransferOnePacket@handle+1,w,c
 17480  00344C  22DA               	addwfc	fsr2h,f,c
 17481  00344E  C013  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 17482  003452  C014  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 17483                           
 17484                           ;usb_device.c: 1030: handle->CNT = len;
 17485  003456  EE20 F001          	lfsr	2,1
 17486  00345A  5017               	movf	i2USBTransferOnePacket@handle,w,c
 17487  00345C  26D9               	addwf	fsr2l,f,c
 17488  00345E  5018               	movf	i2USBTransferOnePacket@handle+1,w,c
 17489  003460  22DA               	addwfc	fsr2h,f,c
 17490  003462  C015  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 17491                           
 17492                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 17493  003466  C017  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17494  00346A  C018  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17495  00346E  0E40               	movlw	64
 17496  003470  16DF               	andwf	indf2,f,c
 17497                           
 17498                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 17499  003472  C017  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17500  003476  C018  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17501  00347A  0E00               	movlw	0
 17502  00347C  86DB               	bsf	plusw2,3,c
 17503                           
 17504                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 17505  00347E  C017  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17506  003482  C018  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17507  003486  0E00               	movlw	0
 17508  003488  8EDB               	bsf	plusw2,7,c
 17509                           
 17510                           ;usb_device.c: 1036: if(dir != 0)
 17511  00348A  5012               	movf	i2USBTransferOnePacket@dir,w,c
 17512  00348C  B4D8               	btfsc	status,2,c
 17513  00348E  D007               	goto	i2l6810
 17514                           
 17515                           ;usb_device.c: 1037: {
 17516                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17517  003490  5016               	movf	i2USBTransferOnePacket@ep,w,c
 17518  003492  0D02               	mullw	2
 17519  003494  0E6E               	movlw	low _pBDTEntryIn
 17520  003496  24F3               	addwf	prodl,w,c
 17521  003498  6ED9               	movwf	fsr2l,c
 17522  00349A  0E00               	movlw	high _pBDTEntryIn
 17523  00349C  D006               	goto	L14
 17524  00349E                     i2l6810:
 17525                           
 17526                           ;usb_device.c: 1041: else
 17527                           ;usb_device.c: 1042: {
 17528                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17529  00349E  5016               	movf	i2USBTransferOnePacket@ep,w,c
 17530  0034A0  0D02               	mullw	2
 17531  0034A2  0E74               	movlw	low _pBDTEntryOut
 17532  0034A4  24F3               	addwf	prodl,w,c
 17533  0034A6  6ED9               	movwf	fsr2l,c
 17534  0034A8  0E00               	movlw	high _pBDTEntryOut
 17535  0034AA                     L14:
 17536  0034AA  20F4               	addwfc	prodh,w,c
 17537  0034AC  6EDA               	movwf	fsr2h,c
 17538  0034AE  0E04               	movlw	4
 17539  0034B0  1ADF               	xorwf	indf2,f,c
 17540                           
 17541                           ;usb_device.c: 1045: }
 17542                           ;usb_device.c: 1046: return (void*)handle;
 17543  0034B2  C017  F012         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 17544  0034B6  C018  F013         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 17545  0034BA  0012               	return	
 17546  0034BC                     __end_ofi2_USBTransferOnePacket:
 17547                           	opt stack 0
 17548                           pclatu	equ	0xFFB
 17549                           pclath	equ	0xFFA
 17550                           tblptru	equ	0xFF8
 17551                           tblptrh	equ	0xFF7
 17552                           tblptrl	equ	0xFF6
 17553                           tablat	equ	0xFF5
 17554                           prodh	equ	0xFF4
 17555                           prodl	equ	0xFF3
 17556                           intcon	equ	0xFF2
 17557                           indf0	equ	0xFEF
 17558                           postinc0	equ	0xFEE
 17559                           fsr0h	equ	0xFEA
 17560                           fsr0l	equ	0xFE9
 17561                           wreg	equ	0xFE8
 17562                           indf1	equ	0xFE7
 17563                           postdec1	equ	0xFE5
 17564                           fsr1h	equ	0xFE2
 17565                           fsr1l	equ	0xFE1
 17566                           bsr	equ	0xFE0
 17567                           indf2	equ	0xFDF
 17568                           postinc2	equ	0xFDE
 17569                           postdec2	equ	0xFDD
 17570                           plusw2	equ	0xFDB
 17571                           fsr2h	equ	0xFDA
 17572                           fsr2l	equ	0xFD9
 17573                           status	equ	0xFD8
 17574                           
 17575 ;; *************** function _USBEnableEndpoint *****************
 17576 ;; Defined at:
 17577 ;;		line 878 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;  ep              1    wreg     unsigned char 
 17580 ;;  options         1   25[COMRAM] unsigned char 
 17581 ;; Auto vars:     Size  Location     Type
 17582 ;;  ep              1   28[COMRAM] unsigned char 
 17583 ;;  p               2   26[COMRAM] PTR unsigned char 
 17584 ;;		 -> UEP0(1), 
 17585 ;; Return value:  Size  Location     Type
 17586 ;;		None               void
 17587 ;; Registers used:
 17588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17589 ;; Tracked objects:
 17590 ;;		On entry : 0/0
 17591 ;;		On exit  : 0/0
 17592 ;;		Unchanged: 0/0
 17593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17594 ;;      Params:         1       0       0       0       0       0       0       0       0
 17595 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17597 ;;      Totals:         4       0       0       0       0       0       0       0       0
 17598 ;;Total ram usage:        4 bytes
 17599 ;; Hardware stack levels used:    1
 17600 ;; Hardware stack levels required when called:    1
 17601 ;; This function calls:
 17602 ;;		_USBConfigureEndpoint
 17603 ;; This function is called by:
 17604 ;;		_CDCInitEP
 17605 ;; This function uses a non-reentrant model
 17606 ;;
 17607                           
 17608                           	psect	text80
 17609  003D6E                     __ptext80:
 17610                           	opt stack 0
 17611  003D6E                     _USBEnableEndpoint:
 17612                           	opt stack 17
 17613                           
 17614                           ;incstack = 0
 17615                           ;USBEnableEndpoint@ep stored from wreg
 17616  003D6E  6E1D               	movwf	USBEnableEndpoint@ep,c
 17617                           
 17618                           ;usb_device.c: 880: unsigned char* p;
 17619                           ;usb_device.c: 884: if(options & 0x04)
 17620  003D70  A41A               	btfss	USBEnableEndpoint@options,2,c
 17621  003D72  D005               	goto	i2l6778
 17622                           
 17623                           ;usb_device.c: 885: {
 17624                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17625  003D74  0E00               	movlw	0
 17626  003D76  6E12               	movwf	USBConfigureEndpoint@direction,c
 17627  003D78  501D               	movf	USBEnableEndpoint@ep,w,c
 17628  003D7A  ECFA  F01A         	call	_USBConfigureEndpoint
 17629  003D7E                     i2l6778:
 17630                           
 17631                           ;usb_device.c: 887: }
 17632                           ;usb_device.c: 888: if(options & 0x02)
 17633  003D7E  A21A               	btfss	USBEnableEndpoint@options,1,c
 17634  003D80  D005               	goto	i2l6782
 17635                           
 17636                           ;usb_device.c: 889: {
 17637                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17638  003D82  0E01               	movlw	1
 17639  003D84  6E12               	movwf	USBConfigureEndpoint@direction,c
 17640  003D86  501D               	movf	USBEnableEndpoint@ep,w,c
 17641  003D88  ECFA  F01A         	call	_USBConfigureEndpoint
 17642  003D8C                     i2l6782:
 17643                           
 17644                           ;usb_device.c: 891: }
 17645                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17646  003D8C  501D               	movf	USBEnableEndpoint@ep,w,c
 17647  003D8E  0D01               	mullw	1
 17648  003D90  0E70               	movlw	112
 17649  003D92  24F3               	addwf	prodl,w,c
 17650  003D94  6E1B               	movwf	USBEnableEndpoint@p,c
 17651  003D96  0E0F               	movlw	15
 17652  003D98  20F4               	addwfc	prodh,w,c
 17653  003D9A  6E1C               	movwf	USBEnableEndpoint@p+1,c
 17654                           
 17655                           ;usb_device.c: 901: *p = options;
 17656  003D9C  C01B  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17657  003DA0  C01C  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17658  003DA4  C01A  FFDF         	movff	USBEnableEndpoint@options,indf2
 17659  003DA8  0012               	return		;funcret
 17660  003DAA                     __end_of_USBEnableEndpoint:
 17661                           	opt stack 0
 17662                           pclatu	equ	0xFFB
 17663                           pclath	equ	0xFFA
 17664                           tblptru	equ	0xFF8
 17665                           tblptrh	equ	0xFF7
 17666                           tblptrl	equ	0xFF6
 17667                           tablat	equ	0xFF5
 17668                           prodh	equ	0xFF4
 17669                           prodl	equ	0xFF3
 17670                           intcon	equ	0xFF2
 17671                           indf0	equ	0xFEF
 17672                           postinc0	equ	0xFEE
 17673                           fsr0h	equ	0xFEA
 17674                           fsr0l	equ	0xFE9
 17675                           wreg	equ	0xFE8
 17676                           indf1	equ	0xFE7
 17677                           postdec1	equ	0xFE5
 17678                           fsr1h	equ	0xFE2
 17679                           fsr1l	equ	0xFE1
 17680                           bsr	equ	0xFE0
 17681                           indf2	equ	0xFDF
 17682                           postinc2	equ	0xFDE
 17683                           postdec2	equ	0xFDD
 17684                           plusw2	equ	0xFDB
 17685                           fsr2h	equ	0xFDA
 17686                           fsr2l	equ	0xFD9
 17687                           status	equ	0xFD8
 17688                           
 17689 ;; *************** function _USBConfigureEndpoint *****************
 17690 ;; Defined at:
 17691 ;;		line 1543 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;  EPNum           1    wreg     unsigned char 
 17694 ;;  direction       1   17[COMRAM] unsigned char 
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;  EPNum           1   22[COMRAM] unsigned char 
 17697 ;;  handle          2   23[COMRAM] PTR volatile struct __BD
 17698 ;;		 -> BDT(48), 
 17699 ;; Return value:  Size  Location     Type
 17700 ;;		None               void
 17701 ;; Registers used:
 17702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17703 ;; Tracked objects:
 17704 ;;		On entry : 0/0
 17705 ;;		On exit  : 0/0
 17706 ;;		Unchanged: 0/0
 17707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17708 ;;      Params:         1       0       0       0       0       0       0       0       0
 17709 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17710 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17711 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17712 ;;Total ram usage:        8 bytes
 17713 ;; Hardware stack levels used:    1
 17714 ;; This function calls:
 17715 ;;		Nothing
 17716 ;; This function is called by:
 17717 ;;		_USBEnableEndpoint
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           
 17721                           	psect	text81
 17722  0035F4                     __ptext81:
 17723                           	opt stack 0
 17724  0035F4                     _USBConfigureEndpoint:
 17725                           	opt stack 17
 17726                           
 17727                           ;incstack = 0
 17728                           ;USBConfigureEndpoint@EPNum stored from wreg
 17729  0035F4  6E17               	movwf	USBConfigureEndpoint@EPNum,c
 17730                           
 17731                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 17732                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 17733  0035F6  0E00               	movlw	0
 17734  0035F8  6E18               	movwf	USBConfigureEndpoint@handle,c
 17735  0035FA  0E04               	movlw	4
 17736  0035FC  6E19               	movwf	USBConfigureEndpoint@handle+1,c
 17737                           
 17738                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 17739  0035FE  5012               	movf	USBConfigureEndpoint@direction,w,c
 17740  003600  6E13               	movwf	??_USBConfigureEndpoint& (0+255),c
 17741  003602  6A14               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17742  003604  90D8               	bcf	status,0,c
 17743  003606  3613               	rlcf	??_USBConfigureEndpoint,f,c
 17744  003608  3614               	rlcf	??_USBConfigureEndpoint+1,f,c
 17745  00360A  5017               	movf	USBConfigureEndpoint@EPNum,w,c
 17746  00360C  6E15               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17747  00360E  6A16               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17748  003610  90D8               	bcf	status,0,c
 17749  003612  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
 17750  003614  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
 17751  003616  90D8               	bcf	status,0,c
 17752  003618  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
 17753  00361A  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
 17754  00361C  5013               	movf	??_USBConfigureEndpoint,w,c
 17755  00361E  2615               	addwf	??_USBConfigureEndpoint+2,f,c
 17756  003620  5014               	movf	??_USBConfigureEndpoint+1,w,c
 17757  003622  2216               	addwfc	??_USBConfigureEndpoint+3,f,c
 17758  003624  90D8               	bcf	status,0,c
 17759  003626  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
 17760  003628  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
 17761  00362A  90D8               	bcf	status,0,c
 17762  00362C  3615               	rlcf	??_USBConfigureEndpoint+2,f,c
 17763  00362E  3616               	rlcf	??_USBConfigureEndpoint+3,f,c
 17764  003630  5015               	movf	??_USBConfigureEndpoint+2,w,c
 17765  003632  2618               	addwf	USBConfigureEndpoint@handle,f,c
 17766  003634  5016               	movf	??_USBConfigureEndpoint+3,w,c
 17767  003636  2219               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17768                           
 17769                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 17770  003638  C018  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17771  00363C  C019  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17772  003640  9EDF               	bcf	indf2,7,c
 17773                           
 17774                           ;usb_device.c: 1557: if(direction == 0)
 17775  003642  5012               	movf	USBConfigureEndpoint@direction,w,c
 17776  003644  A4D8               	btfss	status,2,c
 17777  003646  D007               	goto	i2l6768
 17778                           
 17779                           ;usb_device.c: 1558: {
 17780                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 17781  003648  5017               	movf	USBConfigureEndpoint@EPNum,w,c
 17782  00364A  0D02               	mullw	2
 17783  00364C  0E74               	movlw	low _pBDTEntryOut
 17784  00364E  24F3               	addwf	prodl,w,c
 17785  003650  6ED9               	movwf	fsr2l,c
 17786  003652  0E00               	movlw	high _pBDTEntryOut
 17787  003654  D006               	goto	L15
 17788  003656                     i2l6768:
 17789                           
 17790                           ;usb_device.c: 1561: else
 17791                           ;usb_device.c: 1562: {
 17792                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 17793  003656  5017               	movf	USBConfigureEndpoint@EPNum,w,c
 17794  003658  0D02               	mullw	2
 17795  00365A  0E6E               	movlw	low _pBDTEntryIn
 17796  00365C  24F3               	addwf	prodl,w,c
 17797  00365E  6ED9               	movwf	fsr2l,c
 17798  003660  0E00               	movlw	high _pBDTEntryIn
 17799  003662                     L15:
 17800  003662  20F4               	addwfc	prodh,w,c
 17801  003664  6EDA               	movwf	fsr2h,c
 17802  003666  C018  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17803  00366A  C019  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17804                           
 17805                           ;usb_device.c: 1564: }
 17806                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 17807  00366E  C018  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17808  003672  C019  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17809  003676  9CDF               	bcf	indf2,6,c
 17810                           
 17811                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 17812  003678  EE20 F004          	lfsr	2,4
 17813  00367C  5018               	movf	USBConfigureEndpoint@handle,w,c
 17814  00367E  26D9               	addwf	fsr2l,f,c
 17815  003680  5019               	movf	USBConfigureEndpoint@handle+1,w,c
 17816  003682  22DA               	addwfc	fsr2h,f,c
 17817  003684  8CDF               	bsf	indf2,6,c
 17818  003686  0012               	return		;funcret
 17819  003688                     __end_of_USBConfigureEndpoint:
 17820                           	opt stack 0
 17821                           pclatu	equ	0xFFB
 17822                           pclath	equ	0xFFA
 17823                           tblptru	equ	0xFF8
 17824                           tblptrh	equ	0xFF7
 17825                           tblptrl	equ	0xFF6
 17826                           tablat	equ	0xFF5
 17827                           prodh	equ	0xFF4
 17828                           prodl	equ	0xFF3
 17829                           intcon	equ	0xFF2
 17830                           indf0	equ	0xFEF
 17831                           postinc0	equ	0xFEE
 17832                           fsr0h	equ	0xFEA
 17833                           fsr0l	equ	0xFE9
 17834                           wreg	equ	0xFE8
 17835                           indf1	equ	0xFE7
 17836                           postdec1	equ	0xFE5
 17837                           fsr1h	equ	0xFE2
 17838                           fsr1l	equ	0xFE1
 17839                           bsr	equ	0xFE0
 17840                           indf2	equ	0xFDF
 17841                           postinc2	equ	0xFDE
 17842                           postdec2	equ	0xFDD
 17843                           plusw2	equ	0xFDB
 17844                           fsr2h	equ	0xFDA
 17845                           fsr2l	equ	0xFD9
 17846                           status	equ	0xFD8
 17847                           
 17848 ;; *************** function _USBCtrlTrfOutHandler *****************
 17849 ;; Defined at:
 17850 ;;		line 2541 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 17851 ;; Parameters:    Size  Location     Type
 17852 ;;		None
 17853 ;; Auto vars:     Size  Location     Type
 17854 ;;		None
 17855 ;; Return value:  Size  Location     Type
 17856 ;;		None               void
 17857 ;; Registers used:
 17858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17859 ;; Tracked objects:
 17860 ;;		On entry : 0/0
 17861 ;;		On exit  : 0/0
 17862 ;;		Unchanged: 0/0
 17863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17864 ;;      Params:         0       0       0       0       0       0       0       0       0
 17865 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17866 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17867 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17868 ;;Total ram usage:        0 bytes
 17869 ;; Hardware stack levels used:    1
 17870 ;; Hardware stack levels required when called:    2
 17871 ;; This function calls:
 17872 ;;		_USBCtrlTrfRxService
 17873 ;; This function is called by:
 17874 ;;		_USBCtrlEPService
 17875 ;; This function uses a non-reentrant model
 17876 ;;
 17877                           
 17878                           	psect	text82
 17879  003B9A                     __ptext82:
 17880                           	opt stack 0
 17881  003B9A                     _USBCtrlTrfOutHandler:
 17882                           	opt stack 18
 17883                           
 17884                           ;usb_device.c: 2543: if(controlTransferState == 2)
 17885                           
 17886                           ;incstack = 0
 17887  003B9A  0E02               	movlw	2
 17888  003B9C  183E               	xorwf	_controlTransferState,w,c	;volatile
 17889  003B9E  A4D8               	btfss	status,2,c
 17890  003BA0  D003               	goto	i2l7980
 17891                           
 17892                           ;usb_device.c: 2544: {
 17893                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 17894  003BA2  ECEA  F011         	call	_USBCtrlTrfRxService	;wreg free
 17895                           
 17896                           ;usb_device.c: 2546: }
 17897  003BA6  0012               	return	
 17898  003BA8                     i2l7980:
 17899                           
 17900                           ;usb_device.c: 2547: else
 17901                           ;usb_device.c: 2548: {
 17902                           ;usb_device.c: 2551: controlTransferState = 0;
 17903  003BA8  0E00               	movlw	0
 17904  003BAA  6E3E               	movwf	_controlTransferState,c	;volatile
 17905                           
 17906                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 17907  003BAC  5035               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 17908  003BAE  A4D8               	btfss	status,2,c
 17909  003BB0  D01F               	goto	i2l7988
 17910                           
 17911                           ;usb_device.c: 2559: {
 17912                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 17913  003BB2  EE20 F001          	lfsr	2,1
 17914  003BB6  5031               	movf	_pBDTEntryEP0OutNext,w,c
 17915  003BB8  26D9               	addwf	fsr2l,f,c
 17916  003BBA  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 17917  003BBC  22DA               	addwfc	fsr2h,f,c
 17918  003BBE  0E08               	movlw	8
 17919  003BC0  6EDF               	movwf	indf2,c
 17920                           
 17921                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17922  003BC2  EE20 F002          	lfsr	2,2
 17923  003BC6  5031               	movf	_pBDTEntryEP0OutNext,w,c
 17924  003BC8  26D9               	addwf	fsr2l,f,c
 17925  003BCA  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 17926  003BCC  22DA               	addwfc	fsr2h,f,c
 17927  003BCE  0E30               	movlw	48
 17928  003BD0  6EDE               	movwf	postinc2,c
 17929  003BD2  0E04               	movlw	4
 17930  003BD4  6EDD               	movwf	postdec2,c
 17931                           
 17932                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17933  003BD6  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17934  003BDA  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17935  003BDE  0E0C               	movlw	12
 17936  003BE0  6EDF               	movwf	indf2,c
 17937                           
 17938                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17939  003BE2  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17940  003BE6  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17941  003BEA  0E00               	movlw	0
 17942  003BEC  8EDB               	bsf	plusw2,7,c
 17943                           
 17944                           ;usb_device.c: 2564: }
 17945  003BEE  0012               	return	
 17946  003BF0                     i2l7988:
 17947                           
 17948                           ;usb_device.c: 2565: else
 17949                           ;usb_device.c: 2566: {
 17950                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 17951  003BF0  0E00               	movlw	0
 17952  003BF2  6E35               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 17953  003BF4  0012               	return	
 17954  003BF6                     __end_of_USBCtrlTrfOutHandler:
 17955                           	opt stack 0
 17956                           pclatu	equ	0xFFB
 17957                           pclath	equ	0xFFA
 17958                           tblptru	equ	0xFF8
 17959                           tblptrh	equ	0xFF7
 17960                           tblptrl	equ	0xFF6
 17961                           tablat	equ	0xFF5
 17962                           prodh	equ	0xFF4
 17963                           prodl	equ	0xFF3
 17964                           intcon	equ	0xFF2
 17965                           indf0	equ	0xFEF
 17966                           postinc0	equ	0xFEE
 17967                           fsr0h	equ	0xFEA
 17968                           fsr0l	equ	0xFE9
 17969                           wreg	equ	0xFE8
 17970                           indf1	equ	0xFE7
 17971                           postdec1	equ	0xFE5
 17972                           fsr1h	equ	0xFE2
 17973                           fsr1l	equ	0xFE1
 17974                           bsr	equ	0xFE0
 17975                           indf2	equ	0xFDF
 17976                           postinc2	equ	0xFDE
 17977                           postdec2	equ	0xFDD
 17978                           plusw2	equ	0xFDB
 17979                           fsr2h	equ	0xFDA
 17980                           fsr2l	equ	0xFD9
 17981                           status	equ	0xFD8
 17982                           
 17983 ;; *************** function _USBCtrlTrfRxService *****************
 17984 ;; Defined at:
 17985 ;;		line 1852 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 17986 ;; Parameters:    Size  Location     Type
 17987 ;;		None
 17988 ;; Auto vars:     Size  Location     Type
 17989 ;;  byteToRead      1   18[COMRAM] unsigned char 
 17990 ;;  i               1   17[COMRAM] unsigned char 
 17991 ;; Return value:  Size  Location     Type
 17992 ;;		None               void
 17993 ;; Registers used:
 17994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0
 18001 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18002 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18003 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18004 ;;Total ram usage:        2 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; Hardware stack levels required when called:    1
 18007 ;; This function calls:
 18008 ;;		_USBCtrlEPAllowStatusStage
 18009 ;; This function is called by:
 18010 ;;		_USBCtrlTrfOutHandler
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           	psect	text83
 18015  0023D4                     __ptext83:
 18016                           	opt stack 0
 18017  0023D4                     _USBCtrlTrfRxService:
 18018                           	opt stack 18
 18019                           
 18020                           ;usb_device.c: 1854: uint8_t byteToRead;
 18021                           ;usb_device.c: 1855: uint8_t i;
 18022                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18023                           
 18024                           ;incstack = 0
 18025  0023D4  EE20 F001          	lfsr	2,1
 18026  0023D8  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18027  0023DA  26D9               	addwf	fsr2l,f,c
 18028  0023DC  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18029  0023DE  22DA               	addwfc	fsr2h,f,c
 18030  0023E0  50DF               	movf	indf2,w,c
 18031  0023E2  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 18032                           
 18033                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 18034  0023E4  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18035  0023E6  0100               	movlb	0	; () banked
 18036  0023E8  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 18037  0023EA  0E00               	movlw	0
 18038  0023EC  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 18039  0023EE  A0D8               	btfss	status,0,c
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;usb_device.c: 1866: {
 18043                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 18044  0023F0  C064  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;usb_device.c: 1868: }
 18048                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 18049                           
 18050                           ; BSR set to: 0
 18051  0023F4  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18052  0023F6  0100               	movlb	0	; () banked
 18053  0023F8  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 18054  0023FA  0E00               	movlw	0
 18055  0023FC  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 18059  0023FE  0E00               	movlw	0
 18060  002400  6E12               	movwf	USBCtrlTrfRxService@i,c
 18061  002402  D012               	goto	i2l7774
 18062  002404                     i2l7768:
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;usb_device.c: 1875: {
 18066                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18067  002404  5012               	movf	USBCtrlTrfRxService@i,w,c
 18068  002406  0D01               	mullw	1
 18069  002408  0E38               	movlw	56
 18070  00240A  24F3               	addwf	prodl,w,c
 18071  00240C  6ED9               	movwf	fsr2l,c
 18072  00240E  0E04               	movlw	4
 18073  002410  20F4               	addwfc	prodh,w,c
 18074  002412  6EDA               	movwf	fsr2h,c
 18075  002414  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 18076  002418  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18077  00241C  CFDF FFE7          	movff	indf2,indf1
 18078                           
 18079                           ; BSR set to: 0
 18080  002420  0100               	movlb	0	; () banked
 18081  002422  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 18082  002424  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 18083                           
 18084                           ; BSR set to: 0
 18085  002426  2A12               	incf	USBCtrlTrfRxService@i,f,c
 18086  002428                     i2l7774:
 18087                           
 18088                           ; BSR set to: 0
 18089  002428  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18090  00242A  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 18091  00242C  A0D8               	btfss	status,0,c
 18092  00242E  D7EA               	goto	i2l7768
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;usb_device.c: 1877: }
 18096                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 18097                           
 18098                           ; BSR set to: 0
 18099  002430  0100               	movlb	0	; () banked
 18100  002432  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 18101  002434  0100               	movlb	0	; () banked
 18102  002436  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 18103  002438  B4D8               	btfsc	status,2,c
 18104  00243A  D032               	goto	i2l7790
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;usb_device.c: 1882: {
 18108                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 18109  00243C  EE20 F001          	lfsr	2,1
 18110  002440  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18111  002442  26D9               	addwf	fsr2l,f,c
 18112  002444  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18113  002446  22DA               	addwfc	fsr2h,f,c
 18114  002448  0E08               	movlw	8
 18115  00244A  6EDF               	movwf	indf2,c
 18116                           
 18117                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18118  00244C  EE20 F002          	lfsr	2,2
 18119  002450  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18120  002452  26D9               	addwf	fsr2l,f,c
 18121  002454  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18122  002456  22DA               	addwfc	fsr2h,f,c
 18123  002458  0E38               	movlw	56
 18124  00245A  6EDE               	movwf	postinc2,c
 18125  00245C  0E04               	movlw	4
 18126  00245E  6EDD               	movwf	postdec2,c
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18130  002460  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18131  002464  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18132  002468  BCDF               	btfsc	indf2,6,c
 18133  00246A  D00D               	goto	i2l7786
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;usb_device.c: 1886: {
 18137                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18138  00246C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18139  002470  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18140  002474  0E48               	movlw	72
 18141  002476  6EDF               	movwf	indf2,c
 18142                           
 18143                           ; BSR set to: 0
 18144                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18145  002478  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18146  00247C  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18147  002480  0E00               	movlw	0
 18148  002482  8EDB               	bsf	plusw2,7,c
 18149                           
 18150                           ;usb_device.c: 1889: }
 18151  002484  0012               	return	
 18152  002486                     i2l7786:
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;usb_device.c: 1890: else
 18156                           ;usb_device.c: 1891: {
 18157                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18158  002486  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18159  00248A  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18160  00248E  0E08               	movlw	8
 18161  002490  6EDF               	movwf	indf2,c
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18165  002492  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18166  002496  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18167  00249A  0E00               	movlw	0
 18168  00249C  8EDB               	bsf	plusw2,7,c
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;usb_device.c: 1894: }
 18172                           ;usb_device.c: 1895: }
 18173  00249E  0012               	return	
 18174  0024A0                     i2l7790:
 18175                           
 18176                           ; BSR set to: 0
 18177                           ;usb_device.c: 1896: else
 18178                           ;usb_device.c: 1897: {
 18179                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 18180  0024A0  EE20 F001          	lfsr	2,1
 18181  0024A4  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18182  0024A6  26D9               	addwf	fsr2l,f,c
 18183  0024A8  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18184  0024AA  22DA               	addwfc	fsr2h,f,c
 18185  0024AC  0E08               	movlw	8
 18186  0024AE  6EDF               	movwf	indf2,c
 18187                           
 18188                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18189  0024B0  EE20 F002          	lfsr	2,2
 18190  0024B4  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18191  0024B6  26D9               	addwf	fsr2l,f,c
 18192  0024B8  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18193  0024BA  22DA               	addwfc	fsr2h,f,c
 18194  0024BC  0E30               	movlw	48
 18195  0024BE  6EDE               	movwf	postinc2,c
 18196  0024C0  0E04               	movlw	4
 18197  0024C2  6EDD               	movwf	postdec2,c
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18201  0024C4  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18202  0024C8  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18203  0024CC  0E04               	movlw	4
 18204  0024CE  6EDF               	movwf	indf2,c
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18208  0024D0  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18209  0024D4  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18210  0024D8  0E00               	movlw	0
 18211  0024DA  8EDB               	bsf	plusw2,7,c
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;usb_device.c: 1926: }
 18215                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;usb_device.c: 1915: {
 18219                           ;usb_device.c: 1921: outPipes[0].pFunc();
 18220  0024DC  0100               	movlb	0	; () banked
 18221  0024DE  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 18225  0024E0  503A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18226  0024E2  A4D8               	btfss	status,2,c
 18227  0024E4  0012               	return	
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;usb_device.c: 1942: {
 18231                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 18232  0024E6  EC81  F018         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18233  0024EA  0012               	return	
 18234  0024EC                     __end_of_USBCtrlTrfRxService:
 18235                           	opt stack 0
 18236                           pclatu	equ	0xFFB
 18237                           pclath	equ	0xFFA
 18238                           tblptru	equ	0xFF8
 18239                           tblptrh	equ	0xFF7
 18240                           tblptrl	equ	0xFF6
 18241                           tablat	equ	0xFF5
 18242                           prodh	equ	0xFF4
 18243                           prodl	equ	0xFF3
 18244                           intcon	equ	0xFF2
 18245                           indf0	equ	0xFEF
 18246                           postinc0	equ	0xFEE
 18247                           fsr0h	equ	0xFEA
 18248                           fsr0l	equ	0xFE9
 18249                           wreg	equ	0xFE8
 18250                           indf1	equ	0xFE7
 18251                           postdec1	equ	0xFE5
 18252                           fsr1h	equ	0xFE2
 18253                           fsr1l	equ	0xFE1
 18254                           bsr	equ	0xFE0
 18255                           indf2	equ	0xFDF
 18256                           postinc2	equ	0xFDE
 18257                           postdec2	equ	0xFDD
 18258                           plusw2	equ	0xFDB
 18259                           fsr2h	equ	0xFDA
 18260                           fsr2l	equ	0xFD9
 18261                           status	equ	0xFD8
 18262                           
 18263 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18264 ;; Defined at:
 18265 ;;		line 1416 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;		None
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;		None
 18270 ;; Return value:  Size  Location     Type
 18271 ;;		None               void
 18272 ;; Registers used:
 18273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0
 18280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18282 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18283 ;;Total ram usage:        0 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; This function calls:
 18286 ;;		Nothing
 18287 ;; This function is called by:
 18288 ;;		_USBDeviceTasks
 18289 ;;		_USBCtrlEPServiceComplete
 18290 ;;		_USBCtrlTrfRxService
 18291 ;; This function uses a non-reentrant model
 18292 ;;
 18293                           
 18294                           	psect	text84
 18295  003102                     __ptext84:
 18296                           	opt stack 0
 18297  003102                     _USBCtrlEPAllowStatusStage:
 18298                           	opt stack 18
 18299                           
 18300                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 18301                           
 18302                           ;incstack = 0
 18303  003102  503B               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18304  003104  A4D8               	btfss	status,2,c
 18305  003106  0012               	return	
 18306                           
 18307                           ;usb_device.c: 1424: {
 18308                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 18309  003108  0E01               	movlw	1
 18310  00310A  6E3B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18311                           
 18312                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 18313  00310C  503C               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18314  00310E  A4D8               	btfss	status,2,c
 18315  003110  0012               	return	
 18316                           
 18317                           ;usb_device.c: 1427: {
 18318                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 18319  003112  0E01               	movlw	1
 18320  003114  6E3C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18321                           
 18322                           ;usb_device.c: 1432: if(controlTransferState == 2)
 18323  003116  0E02               	movlw	2
 18324  003118  183E               	xorwf	_controlTransferState,w,c	;volatile
 18325  00311A  A4D8               	btfss	status,2,c
 18326  00311C  D016               	goto	i2l7010
 18327                           
 18328                           ;usb_device.c: 1433: {
 18329                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 18330  00311E  0100               	movlb	0	; () banked
 18331  003120  EE20 F001          	lfsr	2,1
 18332  003124  516E               	movf	_pBDTEntryIn& (0+255),w,b
 18333  003126  26D9               	addwf	fsr2l,f,c
 18334  003128  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18335  00312A  22DA               	addwfc	fsr2h,f,c
 18336  00312C  0E00               	movlw	0
 18337  00312E  6EDF               	movwf	indf2,c
 18338                           
 18339                           ; BSR set to: 0
 18340                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18341  003130  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18342  003134  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18343  003138  0E48               	movlw	72
 18344  00313A  6EDF               	movwf	indf2,c
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18348  00313C  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18349  003140  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18350  003144  0E00               	movlw	0
 18351  003146  8EDB               	bsf	plusw2,7,c
 18352                           
 18353                           ;usb_device.c: 1437: }
 18354  003148  0012               	return	
 18355  00314A                     i2l7010:
 18356                           
 18357                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 18358  00314A  043E               	decf	_controlTransferState,w,c	;volatile
 18359  00314C  A4D8               	btfss	status,2,c
 18360  00314E  0012               	return	
 18361                           
 18362                           ;usb_device.c: 1439: {
 18363                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 18364  003150  0E00               	movlw	0
 18365  003152  6E35               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18366                           
 18367                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 18368  003154  EE20 F001          	lfsr	2,1
 18369  003158  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18370  00315A  26D9               	addwf	fsr2l,f,c
 18371  00315C  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18372  00315E  22DA               	addwfc	fsr2h,f,c
 18373  003160  0E08               	movlw	8
 18374  003162  6EDF               	movwf	indf2,c
 18375                           
 18376                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18377  003164  EE20 F002          	lfsr	2,2
 18378  003168  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18379  00316A  26D9               	addwf	fsr2l,f,c
 18380  00316C  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18381  00316E  22DA               	addwfc	fsr2h,f,c
 18382  003170  0E30               	movlw	48
 18383  003172  6EDE               	movwf	postinc2,c
 18384  003174  0E04               	movlw	4
 18385  003176  6EDD               	movwf	postdec2,c
 18386                           
 18387                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18388  003178  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18389  00317C  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18390  003180  0E04               	movlw	4
 18391  003182  6EDF               	movwf	indf2,c
 18392                           
 18393                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18394  003184  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18395  003188  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18396  00318C  0E00               	movlw	0
 18397  00318E  8EDB               	bsf	plusw2,7,c
 18398                           
 18399                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 18400  003190  0E01               	movlw	1
 18401  003192  6E35               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18402                           
 18403                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 18404  003194  EE20 F001          	lfsr	2,1
 18405  003198  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18406  00319A  26D9               	addwf	fsr2l,f,c
 18407  00319C  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18408  00319E  22DA               	addwfc	fsr2h,f,c
 18409  0031A0  0E08               	movlw	8
 18410  0031A2  6EDF               	movwf	indf2,c
 18411                           
 18412                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18413  0031A4  EE20 F002          	lfsr	2,2
 18414  0031A8  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18415  0031AA  26D9               	addwf	fsr2l,f,c
 18416  0031AC  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18417  0031AE  22DA               	addwfc	fsr2h,f,c
 18418  0031B0  0E30               	movlw	48
 18419  0031B2  6EDE               	movwf	postinc2,c
 18420  0031B4  0E04               	movlw	4
 18421  0031B6  6EDD               	movwf	postdec2,c
 18422                           
 18423                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18424  0031B8  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18425  0031BC  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18426  0031C0  0E80               	movlw	128
 18427  0031C2  6EDF               	movwf	indf2,c
 18428  0031C4  0012               	return	
 18429  0031C6                     __end_of_USBCtrlEPAllowStatusStage:
 18430                           	opt stack 0
 18431                           pclatu	equ	0xFFB
 18432                           pclath	equ	0xFFA
 18433                           tblptru	equ	0xFF8
 18434                           tblptrh	equ	0xFF7
 18435                           tblptrl	equ	0xFF6
 18436                           tablat	equ	0xFF5
 18437                           prodh	equ	0xFF4
 18438                           prodl	equ	0xFF3
 18439                           intcon	equ	0xFF2
 18440                           indf0	equ	0xFEF
 18441                           postinc0	equ	0xFEE
 18442                           fsr0h	equ	0xFEA
 18443                           fsr0l	equ	0xFE9
 18444                           wreg	equ	0xFE8
 18445                           indf1	equ	0xFE7
 18446                           postdec1	equ	0xFE5
 18447                           fsr1h	equ	0xFE2
 18448                           fsr1l	equ	0xFE1
 18449                           bsr	equ	0xFE0
 18450                           indf2	equ	0xFDF
 18451                           postinc2	equ	0xFDE
 18452                           postdec2	equ	0xFDD
 18453                           plusw2	equ	0xFDB
 18454                           fsr2h	equ	0xFDA
 18455                           fsr2l	equ	0xFD9
 18456                           status	equ	0xFD8
 18457                           
 18458 ;; *************** function _USBCtrlTrfInHandler *****************
 18459 ;; Defined at:
 18460 ;;		line 2595 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 18461 ;; Parameters:    Size  Location     Type
 18462 ;;		None
 18463 ;; Auto vars:     Size  Location     Type
 18464 ;;  lastDTS         1   18[COMRAM] unsigned char 
 18465 ;; Return value:  Size  Location     Type
 18466 ;;		None               void
 18467 ;; Registers used:
 18468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18469 ;; Tracked objects:
 18470 ;;		On entry : 0/0
 18471 ;;		On exit  : 0/0
 18472 ;;		Unchanged: 0/0
 18473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18474 ;;      Params:         0       0       0       0       0       0       0       0       0
 18475 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18477 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18478 ;;Total ram usage:        1 bytes
 18479 ;; Hardware stack levels used:    1
 18480 ;; Hardware stack levels required when called:    1
 18481 ;; This function calls:
 18482 ;;		_USBCtrlTrfTxService
 18483 ;; This function is called by:
 18484 ;;		_USBCtrlEPService
 18485 ;; This function uses a non-reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text85
 18489  0031C6                     __ptext85:
 18490                           	opt stack 0
 18491  0031C6                     _USBCtrlTrfInHandler:
 18492                           	opt stack 19
 18493                           
 18494                           ;usb_device.c: 2597: uint8_t lastDTS;
 18495                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 18496                           
 18497                           ;incstack = 0
 18498  0031C6  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18499  0031CA  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18500  0031CE  0E00               	movlw	0
 18501  0031D0  BCDF               	btfsc	indf2,6,c
 18502  0031D2  0E01               	movlw	1
 18503  0031D4  6E13               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18504                           
 18505                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18506  0031D6  0E04               	movlw	4
 18507  0031D8  0100               	movlb	0	; () banked
 18508  0031DA  1B6E               	xorwf	_pBDTEntryIn& (0+255),f,b
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 18512  0031DC  0E08               	movlw	8
 18513  0031DE  0100               	movlb	0	; () banked
 18514  0031E0  199A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 18515  0031E2  A4D8               	btfss	status,2,c
 18516  0031E4  D00C               	goto	i2l8004
 18517                           
 18518                           ; BSR set to: 0
 18519                           ;usb_device.c: 2608: {
 18520                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 18521  0031E6  0104               	movlb	4	; () banked
 18522  0031E8  5132               	movf	50,w,b	;volatile
 18523  0031EA  0B7F               	andlw	127
 18524  0031EC  6E6E               	movwf	3950,c	;volatile
 18525                           
 18526                           ; BSR set to: 4
 18527                           ;usb_device.c: 2610: if(UADDR != 0u)
 18528  0031EE  506E               	movf	3950,w,c	;volatile
 18529  0031F0  B4D8               	btfsc	status,2,c
 18530  0031F2  D002               	goto	i2l8002
 18531                           
 18532                           ; BSR set to: 4
 18533                           ;usb_device.c: 2611: {
 18534                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 18535  0031F4  0E10               	movlw	16
 18536  0031F6  D001               	goto	L16
 18537  0031F8                     i2l8002:
 18538                           
 18539                           ;usb_device.c: 2614: else
 18540                           ;usb_device.c: 2615: {
 18541                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 18542  0031F8  0E04               	movlw	4
 18543  0031FA                     L16:
 18544  0031FA  0100               	movlb	0	; () banked
 18545  0031FC  6F9A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18546  0031FE                     i2l8004:
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;usb_device.c: 2617: }
 18550                           ;usb_device.c: 2618: }
 18551                           ;usb_device.c: 2621: if(controlTransferState == 1)
 18552  0031FE  043E               	decf	_controlTransferState,w,c	;volatile
 18553  003200  A4D8               	btfss	status,2,c
 18554  003202  D03B               	goto	i2l799
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;usb_device.c: 2622: {
 18558                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 18559  003204  0100               	movlb	0	; () banked
 18560  003206  EE20 F002          	lfsr	2,2
 18561  00320A  516E               	movf	_pBDTEntryIn& (0+255),w,b
 18562  00320C  26D9               	addwf	fsr2l,f,c
 18563  00320E  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18564  003210  22DA               	addwfc	fsr2h,f,c
 18565  003212  0E38               	movlw	56
 18566  003214  6EDE               	movwf	postinc2,c
 18567  003216  0E04               	movlw	4
 18568  003218  6EDD               	movwf	postdec2,c
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 18572  00321A  EC81  F016         	call	_USBCtrlTrfTxService	;wreg free
 18573                           
 18574                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 18575  00321E  0E02               	movlw	2
 18576  003220  1841               	xorwf	_shortPacketStatus,w,c	;volatile
 18577  003222  A4D8               	btfss	status,2,c
 18578  003224  D00D               	goto	i2l8016
 18579                           
 18580                           ;usb_device.c: 2631: {
 18581                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 18582  003226  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18583  00322A  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18584  00322E  0E04               	movlw	4
 18585  003230  6EDF               	movwf	indf2,c
 18586                           
 18587                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18588  003232  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18589  003236  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18590  00323A  0E00               	movlw	0
 18591  00323C  8EDB               	bsf	plusw2,7,c
 18592                           
 18593                           ;usb_device.c: 2636: }
 18594  00323E  0012               	return	
 18595  003240                     i2l8016:
 18596                           
 18597                           ;usb_device.c: 2637: else
 18598                           ;usb_device.c: 2638: {
 18599                           ;usb_device.c: 2639: if(lastDTS == 0)
 18600  003240  5013               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18601  003242  A4D8               	btfss	status,2,c
 18602  003244  D00D               	goto	i2l8022
 18603                           
 18604                           ;usb_device.c: 2640: {
 18605                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18606  003246  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18607  00324A  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18608  00324E  0E48               	movlw	72
 18609  003250  6EDF               	movwf	indf2,c
 18610                           
 18611                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18612  003252  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18613  003256  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18614  00325A  0E00               	movlw	0
 18615  00325C  8EDB               	bsf	plusw2,7,c
 18616                           
 18617                           ;usb_device.c: 2643: }
 18618  00325E  0012               	return	
 18619  003260                     i2l8022:
 18620                           
 18621                           ;usb_device.c: 2644: else
 18622                           ;usb_device.c: 2645: {
 18623                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 18624  003260  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18625  003264  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18626  003268  0E08               	movlw	8
 18627  00326A  6EDF               	movwf	indf2,c
 18628                           
 18629                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18630  00326C  C06E  FFD9         	movff	_pBDTEntryIn,fsr2l
 18631  003270  C06F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18632  003274  0E00               	movlw	0
 18633  003276  8EDB               	bsf	plusw2,7,c
 18634                           
 18635                           ;usb_device.c: 2648: }
 18636                           ;usb_device.c: 2649: }
 18637                           ;usb_device.c: 2650: }
 18638  003278  0012               	return	
 18639  00327A                     i2l799:
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;usb_device.c: 2651: else
 18643                           ;usb_device.c: 2652: {
 18644                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 18645  00327A  0100               	movlb	0	; () banked
 18646  00327C  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 18647  00327E  D002               	goto	i2l8028
 18648                           
 18649                           ; BSR set to: 0
 18650                           ;usb_device.c: 2661: }
 18651                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;usb_device.c: 2659: {
 18655                           ;usb_device.c: 2660: outPipes[0].pFunc();
 18656  003280  0100               	movlb	0	; () banked
 18657  003282  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18658  003284                     i2l8028:
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;usb_device.c: 2663: }
 18662                           ;usb_device.c: 2665: controlTransferState = 0;
 18663  003284  0E00               	movlw	0
 18664  003286  6E3E               	movwf	_controlTransferState,c	;volatile
 18665  003288  0012               	return	
 18666  00328A                     __end_of_USBCtrlTrfInHandler:
 18667                           	opt stack 0
 18668                           pclatu	equ	0xFFB
 18669                           pclath	equ	0xFFA
 18670                           tblptru	equ	0xFF8
 18671                           tblptrh	equ	0xFF7
 18672                           tblptrl	equ	0xFF6
 18673                           tablat	equ	0xFF5
 18674                           prodh	equ	0xFF4
 18675                           prodl	equ	0xFF3
 18676                           intcon	equ	0xFF2
 18677                           indf0	equ	0xFEF
 18678                           postinc0	equ	0xFEE
 18679                           fsr0h	equ	0xFEA
 18680                           fsr0l	equ	0xFE9
 18681                           wreg	equ	0xFE8
 18682                           indf1	equ	0xFE7
 18683                           postdec1	equ	0xFE5
 18684                           fsr1h	equ	0xFE2
 18685                           fsr1l	equ	0xFE1
 18686                           bsr	equ	0xFE0
 18687                           indf2	equ	0xFDF
 18688                           postinc2	equ	0xFDE
 18689                           postdec2	equ	0xFDD
 18690                           plusw2	equ	0xFDB
 18691                           fsr2h	equ	0xFDA
 18692                           fsr2l	equ	0xFD9
 18693                           status	equ	0xFD8
 18694                           
 18695 ;; *************** function _USBCtrlTrfTxService *****************
 18696 ;; Defined at:
 18697 ;;		line 1771 in file "../mla/v2014_07_22/framework/usb/src/usb_device.c"
 18698 ;; Parameters:    Size  Location     Type
 18699 ;;		None
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;  byteToSend      1   17[COMRAM] unsigned char 
 18702 ;; Return value:  Size  Location     Type
 18703 ;;		None               void
 18704 ;; Registers used:
 18705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18711 ;;      Params:         0       0       0       0       0       0       0       0       0
 18712 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18713 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18714 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18715 ;;Total ram usage:        1 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; This function calls:
 18718 ;;		Nothing
 18719 ;; This function is called by:
 18720 ;;		_USBCtrlEPAllowDataStage
 18721 ;;		_USBCtrlTrfInHandler
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           	psect	text86
 18726  002D02                     __ptext86:
 18727                           	opt stack 0
 18728  002D02                     _USBCtrlTrfTxService:
 18729                           	opt stack 17
 18730                           
 18731                           ;usb_device.c: 1773: uint8_t byteToSend;
 18732                           ;usb_device.c: 1777: byteToSend = 8;
 18733                           
 18734                           ;incstack = 0
 18735  002D02  0E08               	movlw	8
 18736  002D04  6E12               	movwf	USBCtrlTrfTxService@byteToSend,c
 18737                           
 18738                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 18739  002D06  0100               	movlb	0	; () banked
 18740  002D08  516D               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 18741  002D0A  E111               	bnz	i2l6910
 18742  002D0C  0E08               	movlw	8
 18743  002D0E  0100               	movlb	0	; () banked
 18744  002D10  5D6C               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 18745  002D12  B0D8               	btfsc	status,0,c
 18746  002D14  D00C               	goto	i2l6910
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;usb_device.c: 1779: {
 18750                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 18751  002D16  C06C  F012         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 18752                           
 18753                           ; BSR set to: 0
 18754                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 18755  002D1A  5041               	movf	_shortPacketStatus,w,c	;volatile
 18756  002D1C  A4D8               	btfss	status,2,c
 18757  002D1E  D002               	goto	i2l6906
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;usb_device.c: 1788: {
 18761                           ;usb_device.c: 1789: shortPacketStatus = 1;
 18762  002D20  0E01               	movlw	1
 18763  002D22  D004               	goto	L17
 18764  002D24                     i2l6906:
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 18768  002D24  0441               	decf	_shortPacketStatus,w,c	;volatile
 18769  002D26  A4D8               	btfss	status,2,c
 18770  002D28  D002               	goto	i2l6910
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;usb_device.c: 1792: {
 18774                           ;usb_device.c: 1793: shortPacketStatus = 2;
 18775  002D2A  0E02               	movlw	2
 18776  002D2C                     L17:
 18777  002D2C  6E41               	movwf	_shortPacketStatus,c	;volatile
 18778  002D2E                     i2l6910:
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;usb_device.c: 1794: }
 18782                           ;usb_device.c: 1795: }
 18783                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 18784  002D2E  5012               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18785  002D30  0100               	movlb	0	; () banked
 18786  002D32  5F6C               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 18787  002D34  0E00               	movlw	0
 18788  002D36  5B6D               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 18792  002D38  0100               	movlb	0	; () banked
 18793  002D3A  EE20 F001          	lfsr	2,1
 18794  002D3E  516E               	movf	_pBDTEntryIn& (0+255),w,b
 18795  002D40  26D9               	addwf	fsr2l,f,c
 18796  002D42  516F               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18797  002D44  22DA               	addwfc	fsr2h,f,c
 18798  002D46  C012  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 18802  002D4A  0E38               	movlw	56
 18803  002D4C  6E33               	movwf	_pDst,c
 18804  002D4E  0E04               	movlw	4
 18805  002D50  6E34               	movwf	_pDst+1,c
 18806                           
 18807                           ; BSR set to: 0
 18808                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18809  002D52  0100               	movlb	0	; () banked
 18810  002D54  A16B               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 18811  002D56  D01C               	goto	i2l6928
 18812  002D58  D03A               	goto	i2l6938
 18813  002D5A                     i2l6920:
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;usb_device.c: 1812: {
 18817                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 18818  002D5A  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 18819  002D5E  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18820  002D62  6AF8               	clrf	tblptru,c
 18821  002D64  C033  FFD9         	movff	_pDst,fsr2l
 18822  002D68  C034  FFDA         	movff	_pDst+1,fsr2h
 18823  002D6C  0E07               	movlw	(high __ramtop+-1)
 18824  002D6E  64F7               	cpfsgt	tblptrh,c
 18825  002D70  D003               	bra	i2u671_47
 18826  002D72  0008               	tblrd		*
 18827  002D74  50F5               	movf	tablat,w,c
 18828  002D76  D005               	bra	i2u671_40
 18829  002D78                     i2u671_47:
 18830  002D78  CFF6 FFE9          	movff	tblptrl,fsr0l
 18831  002D7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18832  002D80  50EF               	movf	indf0,w,c
 18833  002D82                     i2u671_40:
 18834  002D82  6EDF               	movwf	indf2,c
 18835  002D84  0100               	movlb	0	; () banked
 18836  002D86  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 18837  002D88  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 18838                           
 18839                           ; BSR set to: 0
 18840  002D8A  4A33               	infsnz	_pDst,f,c
 18841  002D8C  2A34               	incf	_pDst+1,f,c
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;usb_device.c: 1814: byteToSend--;
 18845  002D8E  0612               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18846  002D90                     i2l6928:
 18847                           
 18848                           ; BSR set to: 0
 18849  002D90  5012               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18850  002D92  B4D8               	btfsc	status,2,c
 18851  002D94  0012               	return	
 18852  002D96  D7E1               	goto	i2l6920
 18853  002D98                     i2l6930:
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;usb_device.c: 1820: {
 18857                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 18858  002D98  C068  FFF6         	movff	_inPipes,tblptrl	;volatile
 18859  002D9C  C069  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18860  002DA0  6AF8               	clrf	tblptru,c
 18861  002DA2  C033  FFD9         	movff	_pDst,fsr2l
 18862  002DA6  C034  FFDA         	movff	_pDst+1,fsr2h
 18863  002DAA  0E07               	movlw	(high __ramtop+-1)
 18864  002DAC  64F7               	cpfsgt	tblptrh,c
 18865  002DAE  D003               	bra	i2u673_47
 18866  002DB0  0008               	tblrd		*
 18867  002DB2  50F5               	movf	tablat,w,c
 18868  002DB4  D005               	bra	i2u673_40
 18869  002DB6                     i2u673_47:
 18870  002DB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18871  002DBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18872  002DBE  50EF               	movf	indf0,w,c
 18873  002DC0                     i2u673_40:
 18874  002DC0  6EDF               	movwf	indf2,c
 18875  002DC2  0100               	movlb	0	; () banked
 18876  002DC4  4B68               	infsnz	_inPipes& (0+255),f,b	;volatile
 18877  002DC6  2B69               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 18878                           
 18879                           ; BSR set to: 0
 18880  002DC8  4A33               	infsnz	_pDst,f,c
 18881  002DCA  2A34               	incf	_pDst+1,f,c
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;usb_device.c: 1822: byteToSend--;
 18885  002DCC  0612               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18886  002DCE                     i2l6938:
 18887                           
 18888                           ; BSR set to: 0
 18889  002DCE  5012               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18890  002DD0  B4D8               	btfsc	status,2,c
 18891  002DD2  0012               	return	
 18892  002DD4  D7E1               	goto	i2l6930
 18893  002DD6                     __end_of_USBCtrlTrfTxService:
 18894                           	opt stack 0
 18895                           pclatu	equ	0xFFB
 18896                           pclath	equ	0xFFA
 18897                           tblptru	equ	0xFF8
 18898                           tblptrh	equ	0xFF7
 18899                           tblptrl	equ	0xFF6
 18900                           tablat	equ	0xFF5
 18901                           prodh	equ	0xFF4
 18902                           prodl	equ	0xFF3
 18903                           intcon	equ	0xFF2
 18904                           indf0	equ	0xFEF
 18905                           postinc0	equ	0xFEE
 18906                           fsr0h	equ	0xFEA
 18907                           fsr0l	equ	0xFE9
 18908                           wreg	equ	0xFE8
 18909                           indf1	equ	0xFE7
 18910                           postdec1	equ	0xFE5
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           bsr	equ	0xFE0
 18914                           indf2	equ	0xFDF
 18915                           postinc2	equ	0xFDE
 18916                           postdec2	equ	0xFDD
 18917                           plusw2	equ	0xFDB
 18918                           fsr2h	equ	0xFDA
 18919                           fsr2l	equ	0xFD9
 18920                           status	equ	0xFD8
 18921                           pclatu	equ	0xFFB
 18922                           pclath	equ	0xFFA
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           indf0	equ	0xFEF
 18931                           postinc0	equ	0xFEE
 18932                           fsr0h	equ	0xFEA
 18933                           fsr0l	equ	0xFE9
 18934                           wreg	equ	0xFE8
 18935                           indf1	equ	0xFE7
 18936                           postdec1	equ	0xFE5
 18937                           fsr1h	equ	0xFE2
 18938                           fsr1l	equ	0xFE1
 18939                           bsr	equ	0xFE0
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948                           	psect	rparam
 18949  0000                     pclatu	equ	0xFFB
 18950                           pclath	equ	0xFFA
 18951                           tblptru	equ	0xFF8
 18952                           tblptrh	equ	0xFF7
 18953                           tblptrl	equ	0xFF6
 18954                           tablat	equ	0xFF5
 18955                           prodh	equ	0xFF4
 18956                           prodl	equ	0xFF3
 18957                           intcon	equ	0xFF2
 18958                           indf0	equ	0xFEF
 18959                           postinc0	equ	0xFEE
 18960                           fsr0h	equ	0xFEA
 18961                           fsr0l	equ	0xFE9
 18962                           wreg	equ	0xFE8
 18963                           indf1	equ	0xFE7
 18964                           postdec1	equ	0xFE5
 18965                           fsr1h	equ	0xFE2
 18966                           fsr1l	equ	0xFE1
 18967                           bsr	equ	0xFE0
 18968                           indf2	equ	0xFDF
 18969                           postinc2	equ	0xFDE
 18970                           postdec2	equ	0xFDD
 18971                           plusw2	equ	0xFDB
 18972                           fsr2h	equ	0xFDA
 18973                           fsr2l	equ	0xFD9
 18974                           status	equ	0xFD8
 18975                           
 18976                           	psect	temp
 18977  00004E                     btemp:
 18978                           	opt stack 0
 18979  00004E                     	ds	1
 18980  0000                     int$flags	set	btemp
 18981                           pclatu	equ	0xFFB
 18982                           pclath	equ	0xFFA
 18983                           tblptru	equ	0xFF8
 18984                           tblptrh	equ	0xFF7
 18985                           tblptrl	equ	0xFF6
 18986                           tablat	equ	0xFF5
 18987                           prodh	equ	0xFF4
 18988                           prodl	equ	0xFF3
 18989                           intcon	equ	0xFF2
 18990                           indf0	equ	0xFEF
 18991                           postinc0	equ	0xFEE
 18992                           fsr0h	equ	0xFEA
 18993                           fsr0l	equ	0xFE9
 18994                           wreg	equ	0xFE8
 18995                           indf1	equ	0xFE7
 18996                           postdec1	equ	0xFE5
 18997                           fsr1h	equ	0xFE2
 18998                           fsr1l	equ	0xFE1
 18999                           bsr	equ	0xFE0
 19000                           indf2	equ	0xFDF
 19001                           postinc2	equ	0xFDE
 19002                           postdec2	equ	0xFDD
 19003                           plusw2	equ	0xFDB
 19004                           fsr2h	equ	0xFDA
 19005                           fsr2l	equ	0xFD9
 19006                           status	equ	0xFD8


Data Sizes:
    Strings     465
    Constant    254
    Data        15
    BSS         358
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      77
    BANK0           160     56     142
    BANK1           256     35     161
    BANK2           256    114     242
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_39(CODE[9]), STR_38(CODE[4]), STR_37(CODE[6]), STR_36(CODE[9]), 
		 -> STR_35(CODE[4]), STR_34(CODE[6]), STR_33(CODE[9]), STR_32(CODE[4]), 
		 -> STR_31(CODE[6]), STR_29(CODE[6]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 90
		 -> APP_CustomCDCTasks@end(BANK2[10]), battery(BANK1[90]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 90
		 -> APP_CustomCDCTasks@end(BANK2[10]), battery(BANK1[90]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_27(CODE[9]), STR_25(CODE[6]), STR_24(CODE[4]), STR_21(CODE[9]), 
		 -> STR_19(CODE[6]), STR_18(CODE[4]), STR_15(CODE[9]), STR_13(CODE[6]), 
		 -> STR_12(CODE[4]), algo_Name(BANK1[15]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 90
		 -> APP_CustomCDCTasks@end(BANK2[10]), battery.battery_type(BANK1[5]), battery(BANK1[90]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> usbInBuffer(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> usbInBuffer(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_28(CODE[19]), STR_26(CODE[22]), STR_23(CODE[24]), STR_22(CODE[20]), 
		 -> STR_20(CODE[22]), STR_17(CODE[24]), STR_16(CODE[20]), STR_14(CODE[32]), 
		 -> STR_11(CODE[34]), STR_10(CODE[20]), STR_9(CODE[30]), STR_8(CODE[27]), 
		 -> STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[18]), STR_4(CODE[19]), 
		 -> STR_3(CODE[14]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 100
		 -> APP_CustomCDCTasks@msg_Error(BANK2[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> APP_CustomCDCTasks@msg_Error(BANK2[100]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_30(CODE[33]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> usbInBuffer(BANK2[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> usbInBuffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2217_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2217_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2217_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2217_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S887$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S877$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S877$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S853$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S853$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S853$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S853$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    verifie_Ibat@end	PTR unsigned char  size(2) Largest target is 10
		 -> APP_CustomCDCTasks@end(BANK2[10]), 

    verifie_Vbat@end	PTR unsigned char  size(2) Largest target is 10
		 -> APP_CustomCDCTasks@end(BANK2[10]), 

    verifie_Precondition@end	PTR unsigned char  size(2) Largest target is 10
		 -> APP_CustomCDCTasks@end(BANK2[10]), 

    check_Precondition@precondition	PTR short  size(2) Largest target is 2
		 -> APP_CustomCDCTasks@precondition(BANK2[2]), 

    CalcPI@PIdata	PTR struct . size(2) Largest target is 23
		 -> PI(BANK0[23]), 

    V_Eval@voltage	PTR float  size(2) Largest target is 23
		 -> stop_CV@voltage(BANK1[3]), verifie_Ibat@current(BANK1[3]), verifie_Vbat@voltage(BANK1[3]), verifie_Precondition@voltage(BANK1[3]), 
		 -> check_Precondition@voltage(BANK1[3]), PI(BANK0[23]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 90
		 -> APP_CustomCDCTasks@end(BANK2[10]), battery(BANK1[90]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> APP_CustomCDCTasks@msg_Error(BANK2[100]), 

    APP_USB_send@format	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_30(CODE[33]), STR_1(CODE[3]), 

    APP_USB_send@args	PTR void [1] size(2) Largest target is 0
		 -> ?_APP_USB_send(BANK0[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 56
		 -> sd002(CODE[46]), sd001(CODE[56]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _SYS_InterruptLow in COMRAM

    None.

Critical Paths under _main in BANK0

    _USBDeviceInit->_memset
    _InitCharger->_strncpy
    _CDCTxService->_USBTransferOnePacket
    _APP_CustomCDCTasks->_APP_USB_send
    _calc_Time->___awdiv
    _CalcPI->___ftadd
    ___ftadd->___ftmul
    _check_Precondition->_APP_USB_send
    ___lwtoft->___ftpack
    ___ftge->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _APP_USB_send->_sprintf
    _sprintf->___lwdiv
    _putUSBUSART->_strlen

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _APP_CustomCDCTasks->_verifie_Ibat
    _APP_CustomCDCTasks->_verifie_Precondition
    _APP_CustomCDCTasks->_verifie_Vbat
    _verifie_Vbat->_I_V_Set
    _verifie_Precondition->_I_V_Set
    _verifie_Ibat->_I_V_Set
    _stop_CV->_V_Eval
    _start_Precondition->_I_V_Set
    _start_CV->_I_V_Set
    _start_CC->_I_V_Set
    _I_V_Set->_V_Eval
    _CalcPI->___ftdiv
    _check_Precondition->_V_Eval
    _V_Eval->___ftdiv

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_APP_CustomCDCTasks

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  443191
                 _APP_CustomCDCTasks
                       _CDCTxService
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                             25 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                             17 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0    3929
                                             25 BANK0      1     1      0
                        _InitCharger
 ---------------------------------------------------------------------------------
 (2) _InitCharger                                          0     0      0    3898
                            _OpenADC
                         _OpenTimer1
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _OpenTimer1                                           1     1      0      66
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenADC                                              5     3      2     510
                                             17 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         5     5      0    1750
                                             24 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     3      4    1589
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _APP_CustomCDCTasks                                 114   114      0  436380
                                              0 BANK2    114   114      0
                       _APP_USB_send
                         _check_Lipo
                 _check_Precondition
                         _end_Charge
                         _initialize
                        _list_Action
                       _list_Battery
                       _list_Program
                      _select_Action
                     _select_Battery
                     _select_Program
                           _start_CC
                           _start_CV
                 _start_Precondition
                            _stop_CV
                             _strcpy
                            _strncmp
                       _verifie_Ibat
               _verifie_Precondition
                       _verifie_Vbat
 ---------------------------------------------------------------------------------
 (2) _verifie_Vbat                                         7     5      2   72872
                                             28 BANK1      7     5      2
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _verifie_Precondition                                 7     5      2   72872
                                             28 BANK1      7     5      2
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _verifie_Ibat                                         7     5      2   72872
                                             28 BANK1      7     5      2
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6    3322
                                             17 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _calc_Time                                            8     4      4    1306
                                             25 BANK0      8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     861
                                             17 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6    3936
                                             17 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    3645
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _stop_CV                                             10     8      2   27419
                                             21 BANK1     10     8      2
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _start_Precondition                                   4     2      2   40724
                                             28 BANK1      4     2      2
                            _I_V_Set
 ---------------------------------------------------------------------------------
 (2) _start_CV                                             4     2      2   50569
                                             28 BANK1      4     2      2
                            _I_V_Set
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _start_CC                                             4     2      2   40724
                                             28 BANK1      4     2      2
                            _I_V_Set
 ---------------------------------------------------------------------------------
 (3) _I_V_Set                                              7     5      2   40690
                                             21 BANK1      7     5      2
                             _CalcPI
                             _V_Eval
                             ___ftge
 ---------------------------------------------------------------------------------
 (4) _CalcPI                                               5     3      2   23218
                                             15 BANK1      5     3      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     127
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5472
                                             44 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _select_Program                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _select_Battery                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _select_Action                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _list_Program                                         2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _list_Battery                                         2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _list_Action                                          2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initialize                                           2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _end_Charge                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_Precondition                                   7     5      2   38408
                                             21 BANK1      7     5      2
                       _APP_USB_send
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    4070
                                             25 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    2606
                                             44 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _V_Eval                                               6     4      2   14764
                                             15 BANK1      6     4      2
                            _BusyADC
                            _ReadADC
                     _SelChanConvADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5775
                                             29 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    4335
                                              0 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    3900
                                             25 BANK0      4     1      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3415
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SelChanConvADC                                       2     2      0      31
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_USB_send                                         9     2      7   10860
                                             49 BANK0      7     0      7
                                              0 BANK1      2     2      0
                        _putUSBUSART
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             29    23      6   10083
                                             24 BANK0     25    19      6
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7068
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     657
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     270
                                             23 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _check_Lipo                                           2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SYS_InterruptLow                                    17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _SYS_InterruptHigh                                   14    14      0   35550
                                              3 BANK0     14    14      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (9) _USBDeviceTasks                                       1     1      0   35550
                                              2 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (10) i2_USBDeviceInit                                     1     1      0     848
                                             25 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) _USBWakeFromSuspend                                  0     0      0    4679
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBSuspend                                          0     0      0    4679
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStallHandler                                     1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPService                                    3     3      0   20597
                                             43 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfSetupHandler                              0     0      0   20161
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPServiceComplete                            0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowDataStage                             0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCheckStdRequest                                  0     0      0   15346
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStdSetCfgHandler                                 1     1      0    5366
                                             37 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     557
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (13) _USBStdGetStatusHandler                              3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _USBStdGetDscHandler                                 2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _USBStdFeatureReqHandler                             6     6      0    5233
                                             37 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4679
                                             29 COMRAM     8     2      6
            _APP_CustomCDCInitialize
              _APP_USBCBErrorHandler
                   _APP_USBCBSuspend
           _APP_USBCBWakeFromSuspend
              _APP_USBCB_SOF_Handler
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_USBCB_SOF_Handler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_USBCBWakeFromSuspend                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_USBCBSuspend                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_USBCBErrorHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_CustomCDCInitialize                             0     0      0    1528
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (12) _CDCInitEP                                           0     0      0    1528
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (13) i2_USBTransferOnePacket                              7     3      4     576
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (13) _USBEnableEndpoint                                   4     3      1     952
                                             25 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (14) _USBConfigureEndpoint                                8     7      1     524
                                             17 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfOutHandler                                0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfRxService                                 2     2      0     167
                                             17 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfInHandler                                 1     1      0     170
                                             18 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0     136
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_CustomCDCTasks
     _APP_USB_send
       _putUSBUSART
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___wmul
         _isdigit
       _strlen
     _check_Lipo
     _check_Precondition
       _APP_USB_send
         _putUSBUSART
           _strlen (ARG)
         _sprintf
           ___lwdiv
           ___wmul
           _isdigit
         _strlen
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _end_Charge
     _initialize
     _list_Action
     _list_Battery
     _list_Program
     _select_Action
     _select_Battery
     _select_Program
     _start_CC
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
     _start_CV
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _start_Precondition
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
     _stop_CV
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _strcpy
     _strncmp
     _verifie_Ibat
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _calc_Time
         ___awdiv
       _strncpy
     _verifie_Precondition
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _calc_Time
         ___awdiv
       _strncpy
     _verifie_Vbat
       _I_V_Set
         _CalcPI
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
         _V_Eval
           _BusyADC
           _ReadADC
           _SelChanConvADC
           ___awtoft
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   _ReadADC (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _calc_Time
         ___awdiv
       _strncpy
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _InitCharger
       _OpenADC
       _OpenTimer1
       _strncpy
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _SYS_InterruptLow (ROOT)

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_CustomCDCInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _APP_USBCBErrorHandler
               _APP_USBCBSuspend
               _APP_USBCBWakeFromSuspend
               _APP_USBCB_SOF_Handler
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_CustomCDCInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _APP_USBCBErrorHandler
               _APP_USBCBSuspend
               _APP_USBCBWakeFromSuspend
               _APP_USBCB_SOF_Handler
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_CustomCDCInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _APP_USBCBErrorHandler
             _APP_USBCBSuspend
             _APP_USBCBWakeFromSuspend
             _APP_USBCB_SOF_Handler
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_CustomCDCInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _APP_USBCBErrorHandler
           _APP_USBCBSuspend
           _APP_USBCBWakeFromSuspend
           _APP_USBCB_SOF_Handler
           _USBCheckCDCRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_CustomCDCInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _APP_USBCBErrorHandler
         _APP_USBCBSuspend
         _APP_USBCBWakeFromSuspend
         _APP_USBCB_SOF_Handler
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_CustomCDCInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _APP_USBCBErrorHandler
         _APP_USBCBSuspend
         _APP_USBCBWakeFromSuspend
         _APP_USBCB_SOF_Handler
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_CustomCDCInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
       _APP_USBCBErrorHandler
       _APP_USBCBSuspend
       _APP_USBCBWakeFromSuspend
       _APP_USBCB_SOF_Handler
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     72      F2       9       94.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      A1       7       62.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      8E       5       88.8%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      4D       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26E      16        0.0%
DATA                 0      0     26E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 03 23:20:36 2015

                              _USB_SD_Ptr 7D62                                V_Eval@temp 0181  
                                      _PI 009F                              ___awdiv@sign 00CC  
                             __CFG_BOR$ON 000000                                        bsr 000FE0  
                           _USBDeviceInit 1D84                       ___wmul@multiplicand 00C9  
                             __CFG_BORV$3 000000                        __size_of_CDCInitEP 0068  
                          ??_APP_USB_send 00EE                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 00ED  
                            ___ftadd@exp2 00EC      USER_USB_CALLBACK_EVENT_HANDLER@event 001E  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0020                              ___ftadd@sign 00EB  
                 __size_of_select_Battery 0002               __end_of_USBStdGetDscHandler 2162  
                                     l430 3C86                                       l600 1DF2  
                                     l425 1A3E                                       l418 3C32  
                                     l437 18B6                                       l376 0F4A  
                                     l661 3E3C                                       l662 3E3A  
                                     _BDT 000400                                       l963 16C0  
                                     l958 1664                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                      _verifie_Precondition 1916  
                              _USBSuspend 3F8C                      USBStdSetCfgHandler@i 0026  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 2162                            _USBDeviceState 009A  
                   ??_USBCtrlTrfRxService 0012                  __size_ofi2_USBDeviceInit 0138  
                USBEnableEndpoint@options 001A                              __CFG_LVP$OFF 000000  
                       ?_APP_USBCBSuspend 0001                             V_Eval@channel 0180  
                            ___ftdiv@cntr 0178                              ___ftdiv@sign 017D  
                            __CFG_WDT$OFF 000000                                      l1066 381A  
                                    l1325 25C4                                      l1405 3ED0  
                 __size_of_select_Program 0002                                      l1352 1440  
                                    l1096 3E92                                      l1354 1468  
                                    l1098 3EA8                                      l1363 153E  
                                    l1099 3EAA                                      l1508 3908  
                                    l1372 1568                                      l1348 1406  
                                    l1383 1FF0                USBConfigureEndpoint@handle 0018  
                                    l6402 1DFE                                      l6410 1E16  
                                    l7300 1524                                      l6500 1710  
                                    l5460 3E94                                      l7302 1532  
                                    l6502 171C                                      l6510 1740  
                                    l6414 1E34                                      l8112 2A3E  
                                    l6520 1766                                      l6512 174A  
                                    l6424 1EA4                                      l7242 3F82  
                                    l6522 178A                                      l6418 1E3E  
                                    l7500 098E                                      l7404 1D26  
                                    l8108 29E8                                      l7308 1592  
                                    l7260 1414                                      l8060 3E52  
                                    l8212 183E                                      l8204 17DC  
                                    l6460 163A                                      l7510 09D8  
                                    l7334 1F4E                                      l7318 15E0  
                                    l8062 3E5E                                      l8230 18E8  
                                    l6518 1760                                      l6462 1644  
                                    l6390 1DD2                                      l7600 0C2A  
                                    l7512 09EE                                      l7424 3D04  
                                    l7328 1F14                                      l7408 1D44  
                                    l7432 307A                                      l7272 145E  
                                    l6472 1670                                      l7610 0C64  
                                    l7522 0A34                                      l7514 09F6  
                                    l7506 09B2                                      l7354 1FAE  
                                    l7442 30FE                                      l7290 14DC  
                                    l7282 14A0                                      l7266 144E  
                                    l8082 2EEC                                      l8170 19C6  
                                    l8162 1964                                      l6466 1654  
                                    l6386 1DC8                                      l7460 38CA  
                                    l7604 0C3C                                      l7532 0A6C  
                                    l7516 09FC                                      l7380 1C9A  
                                    l7436 30BA                                      l7292 14EA  
                                    l8308 2948                                      l6492 16EC  
                                    l6484 16C4                                      l7622 0CE8  
                                    l7526 0A5A                                      l7630 0D2A  
                                    l7374 1C60                                      l7294 14F6  
                                    l7702 10BA                                      l8318 2998  
                                    l8086 2F42                                      l8078 2EA8  
                                    l8270 1B4E                                      l8262 1AEC  
                                    l6478 16A8                                      l5870 3DFC  
                                    l7456 38B8                                      l7552 0AE6  
                                    l7536 0A7E                                      l7544 0AB6  
                                    l7528 0A64                                      l7560 0B16  
                                    l7480 08C8                                      l7288 14CE  
                                    l8248 3A5A                                      l8088 2F4E  
                                    l8280 1B9E                                      l7458 38C4  
                                    l7618 0CC2                                      l7554 0AFE  
                                    l7538 0A96                                      l7562 0B40  
                                    l7482 08DE                                      l7474 08AA  
                                    l7394 1CE8                                      l7706 1100  
                                    l8290 1BF8                                      l5954 2AD0  
                                    l5946 2A9C                                      l5866 3DEA  
                                    l7468 38FA                                      l7572 0B74  
                                    l7548 0AD4                                      l7492 0918  
                                    l7628 0D0E                                      l7636 3CA8  
                                    l8188 1A70                                      l8612 01B6  
                                    l8620 01CE                                      l7590 0BCE  
                                    l7574 0B7A                                      l7486 08E8  
                                    l7638 3CAE                                      l6950 2528  
                                    l7398 1D06                                      l8702 048C  
                                    l8630 0222                                      l8622 01E6  
                                    l8614 01BE                                      l8606 01A2  
                                    l5966 2B36                                      l7656 3FD6  
                                    l6960 25B6                                      l6952 2558  
                                    l6944 2506                                      l7664 2B7E  
                                    l7920 395A                                      l7912 391C  
                                    l8720 0558                                      l8712 051C  
                                    l8632 022A                                      l8616 01C6  
                                    l8608 01AA                                      l7594 0BE8  
                                    l7586 0BB0                                      l7674 2BAC  
                                    l7906 3798                                      l8730 05A8  
                                    l8722 0560                                      l6972 25EA  
                                    l6956 2578                                      l6948 251A  
                                    l7668 2B94                                      l7860 32DA  
                                    l7924 396C                                      l8740 0638  
                                    l8708 04E2                                      l8636 0236  
                                    l8564 4002                                      l7598 0C20  
                                    l6966 25CE                                      l6958 25A8  
                                    l7694 0EC2                                      l7686 0E06  
                                    l7862 32E6                                      l7854 32BC  
                                    l7918 394C                                      l8734 05E2  
                                    l8646 02A4                                      l8582 010E  
                                    l8574 00D2                                      l7944 3018  
                                    l7936 2FB2                                      l7928 2F7E  
                                    l7880 333E                                      l7872 331C  
                                    l7864 32EC                                      l7848 32A6  
                                    l8752 06AE                                      l8744 0672  
                                    l8680 03C6                                      l8648 02AC  
                                    l8656 0306                                      l8592 0152  
                                    l8584 0116                                      l8568 4008  
                                    l7946 302E                                      l8762 06FE  
                                    l8754 06B6                                      l8690 040A  
                                    l8666 036E                                      l8658 0326  
                                    l8594 015A                                      l7876 332A  
                                    l8772 078E                                      l8668 0376  
                                    l8766 0738                                      l8678 03BE  
                                    l8598 0166                                      l8790 0812  
                                    l8784 0804                                      l8776 07C8  
                                    l8688 0402                                      l8848 402A  
                                    l8786 080C                                      l8698 0452  
                                    STR_1 7FFB                                      STR_2 7EC9  
                                    STR_3 7FD4                                      STR_4 7F9E  
                                    STR_5 7FB1                                      STR_6 7F8B  
                                    STR_7 7F78                                      STR_8 7EAE  
                                    STR_9 7E90                                      u6220 162A  
                                    u6228 162E                                      u7251 13B4  
                                    u7261 13D2                                      u7511 1C3C  
                   ??_USBCtrlTrfTxService 0012                                      u7531 1C76  
                                    u7461 1EF0                                      _UCFG 000F6F  
                                    u6840 408E                                      u7481 1F2A  
                                    _UEP0 000F70                                      _UEP1 000F71  
                                    u8470 2EE4                                      u8490 2F0C  
                                    _UEIE 000F6B                                      u8477 2EDA  
                                    u8497 2F02                                      _UEIR 000F6A  
                                    _UCON 000F6D                        ??_APP_USBCBSuspend 0012  
                           ??_InitCharger 00CF                           _CDCDataInHandle 0094  
  USBStdFeatureReqHandler@current_ep_data 0029                                      _pDst 0033  
                                    _main 401C                              ___ftpack@arg 00C7  
                ??i2_USBTransferOnePacket 0016                              ___ftpack@exp 00CA  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 007A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 3E14                                      btemp 004E  
                         __end_of_I_V_Set 303A                                      pclat 000FFA  
             __size_of_check_Precondition 00DA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A6  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 27E0  
                  ??_USBCtrlTrfOutHandler 0014                             V_Eval@voltage 017E  
                            ___ftmul@cntr 00E0                              ___param_bank 000010  
                            ___ftmul@sign 00E1                           __end_of_BusyADC 4092  
               ??_USBStdFeatureReqHandler 0026                           __end_of_ReadADC 4046  
                         __end_of_OpenADC 381E                  ??_USBStdGetStatusHandler 0012  
                          ?_USBDeviceInit 0001                            stop_CV@voltage 018B  
                           __CFG_PLLDIV$5 000000                                     ?_main 0001  
                         __end_of___awdiv 3348                           __end_of___ftadd 1606  
                                   STR_10 7F3D                                     STR_11 7E2D  
                                   STR_12 7FF7                                     STR_20 7F11  
                                   STR_21 7FE2                                     STR_13 7FF1  
                                   STR_22 7F51                                     STR_14 7E70  
                                   STR_30 7E4F                                     STR_31 7FF1  
                                   STR_15 7FE2                                     STR_23 7EF9  
                                   STR_32 7FF7                                     STR_24 7FF7  
                                   STR_16 7F3D                                     STR_40 7FC3  
                                   STR_25 7FF1                                     STR_33 7FE2  
                                   STR_17 7EE1                                     STR_18 7FF7  
                                   STR_34 7FF1                                     STR_26 7F27  
                                   STR_35 7FF7                                     STR_19 7FF1  
                                   STR_27 7FE2                                     STR_36 7FE2  
                                   STR_28 7F65                                     STR_37 7FF1  
                                   STR_29 7FEB                                     STR_38 7FF7  
                                   STR_39 7FE2         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___ftdiv 2026                           __end_of___ftneg 3EDE  
                   ?_verifie_Precondition 018B                           __end_of___ftmul 1D84  
                         ___awdiv@divisor 00C9                                     _T1CON 000FCD  
                  __end_of_USBDeviceTasks 229C                 ?_USBCtrlEPServiceComplete 0001  
          __size_of_APP_USBCB_SOF_Handler 0002                           __end_of___lwdiv 3912  
                                   i2l600 22FA                                     i2l612 218E  
                                   i2l622 221C                                     i2l623 2298  
                                   i2l624 2230                                     i2l813 26FC  
                                   i2l822 2762                                     i2l904 2E34  
                                   i2l752 33E4                                     i2l753 3366  
                                   i2l906 2E78                                     i2l754 336C  
                                   i2l762 3D6A                                     i2l828 1142  
                                   i2l749 3356             __end_of_APP_USBCB_SOF_Handler 40AE  
                                   i2l686 2672                                     i2l847 130A  
                                   _UADDR 000F6E                           ___awdiv@counter 00CB  
                                   i2l799 327A                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                             __CFG_USBDIV$2 000000  
                                   _USTAT 000F6C                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000        __size_of_USBCtrlEPAllowStatusStage 00C4  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 355A                                     _sd000 7E29  
                                   _sd001 7DB1                                     _sd002 7DE9  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                           ___awtoft@sign 00D2                                i2memset@p1 0012  
                         __end_of_isdigit 3F8C                             ___ftpack@sign 00CB  
                 __size_of_SelChanConvADC 0022                  ?_APP_CustomCDCInitialize 0001  
                                   tablat 000FF5                  __end_of_SYS_InterruptLow 00A6  
                         __end_of_strDate 7D3E                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3B3C                           __end_of_strManu 7D6C  
                         __end_of_strMisc 7D62                                     status 000FD8  
                         __end_of_stop_CV 29A4                  _APP_USBCBWakeFromSuspend 40AE  
                         __end_of_sprintf 0D38                              ?_list_Action 00C7  
                         __end_of_strncmp 2F70                           __end_of_strncpy 3984  
                        __end_ofi2_memset 3F38               APP_CustomCDCTasks@msg_Error 0280  
                         putUSBUSART@data 00CD              __size_of_USBStdSetCfgHandler 00E6  
                          __CFG_MCLRE$OFF 000000                           __initialization 3B3C  
                     __end_of_InitCharger 35F4                              CalcPI@PIdata 017E  
                            __end_of_main 4034                     __end_of_select_Action 40AA  
                   _control_signal_bitmap 003F                 __size_of_USBCtrlEPService 00D6  
                                  ??_main 00EE                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001            APP_CustomCDCTasks@precondition 02EE  
                             ?_USBSuspend 0001                __end_of_start_Precondition 3C4A  
                         __CFG_CCP2MX$OFF 000000                              _cdc_mem_type 009B  
                 __end_of_USBDeviceAttach 3E48                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                        _CDCDataOutHandle 0096                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 00C7  
                               ??_I_V_Set 00EE                          __end_of___awtoft 3D2C  
                        __end_of___ftpack 25F8                    SYSTEM_Initialize@state 00CF  
                   __size_of_CDCTxService 0188                                _OpenTimer1 3E7C  
                                  i2l7010 314A                                    i2l7120 214A  
                                  i2l7040 350A                                    i2l8002 31F8  
                                  i2l7202 12A4                                    i2l7114 213A  
                                  i2l7106 20E0                                    i2l8004 31FE  
                                  i2l7212 12EA                                    i2l7116 2142  
                                  i2l7108 20E8                                    i2l7132 338C  
                                  i2l7060 2822                                    i2l7044 3526  
                                  i2l8022 3260                                    i2l7230 1378  
                                  i2l7222 1326                                    i2l7214 12F6  
                                  i2l7142 33CC                                    i2l7070 2856  
                                  i2l8016 3240                                    i2l7160 113E  
                                  i2l7064 282A                                    i2l8028 3284  
                                  i2l7228 136C                                    i2l7180 11FE  
                                  i2l7182 1200                                    i2l7174 11BA  
                                  i2l7094 2038                                    i2l7086 28A2  
                                  i2l6810 349E                                    i2l7186 121C  
                                  i2l7098 2050                                    i2l8330 3F04  
                                  i2l8410 22DE                                    i2l7196 126E  
                                  i2l8332 3F06                                    i2l8500 21AE  
                                  i2l6910 2D2E                                    i2l7198 128A  
                                  i2l8422 2306                                    i2l8430 231E  
                                  i2l8406 22D6                                    i2l6920 2D5A  
                                  i2l7720 261C                                    i2l6930 2D98  
                                  i2l6906 2D24                                    i2l7810 270E  
                                  i2l8370 2C84                                    i2l8354 3D68  
                                  i2l8434 233A                                    i2l8530 2210  
                                  i2l8522 21EC                                    i2l8506 21D2  
                                  i2l6860 2E5A                                    i2l6852 2E22  
                                  i2l6844 2E02                                    i2l7820 2730  
                                  i2l7812 2714                                    i2l7740 2698  
                                  i2l8444 239E                                    i2l8516 21E2  
                                  i2l6782 3D8C                                    i2l6790 3418  
                                  i2l7822 2736                                    i2l8382 2CD2  
                                  i2l8374 2C8C                                    i2l8438 2342  
                                  i2l8550 2256                                    i2l8470 217A  
                                  i2l6928 2D90                                    i2l6768 3656  
                                  i2l6880 3838                                    i2l6872 3820  
                                  i2l7824 273C                                    i2l7808 2708  
                                  i2l8536 2226                                    i2l6938 2DCE  
                                  i2l6778 3D7E                                    i2l6882 383E  
                                  i2l6874 3826                                    i2l7834 277E  
                                  i2l8386 2CEC                                    i2l6868 2E82  
                                  i2l6876 382C                                    i2l8388 2CF2  
                                  i2l8556 2276                                    i2l8492 21A2  
                                  i2l7790 24A0                                    i2l7774 2428  
                                  i2l6798 3442                                    i2l6878 3832  
                                  i2l6886 3844                                    i2l6982 3F26  
                                  i2l7838 279C                                    i2l8558 2292  
                                  i2l8478 2186                                    i2l7768 2404  
                                  i2l7786 2486                                    i2l6978 3F16  
                                  i2l7980 3BA8                                    i2l7988 3BF0  
                                  i2l8892 385C                                    i2l8894 3890  
                        __end_of___lwtoft 3F62                             CDCTxService@i 00D1  
             __size_of_APP_CustomCDCTasks 07F2                      __end_of_APP_USB_send 3AD4  
                                  _CalcPI 0D38                                 ??_BusyADC 00C7  
                i2USBTransferOnePacket@ep 0016                         ??i2_USBDeviceInit 001A  
                               ??_ReadADC 00C9           __size_ofi2_USBTransferOnePacket 00BA  
                          __CFG_VREGEN$ON 000000                                 ??_OpenADC 00C9  
                                  _V_Eval 2B56                       verifie_Vbat@voltage 018D  
                            I_V_Set@count 0189                         _shortPacketStatus 0041  
                          __CFG_XINST$OFF 000000                           USBDeviceTasks@i 00B8  
             USBStdFeatureReqHandler@pUEP 0027                  USBTransferOnePacket@data 00C8  
              USBCtrlTrfInHandler@lastDTS 0013                           ??_USBDeviceInit 00CF  
                                  ___ftge 303A                              ?_putUSBUSART 00CD  
                                  ___wmul 3DAA                                 ??___awdiv 00CB  
                               ??___ftadd 00E8                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 0175                                 ??___ftneg 00CA  
                               ??___ftmul 00D9                                 ??___lwdiv 00CB  
                       _USBEnableEndpoint 3D6E           __size_of_USBStdGetStatusHandler 00BA  
                        OpenTimer1@config 00C7                                    _memset 3DE0  
                                  clear_0 3B42                                    clear_1 3B4E  
                                  clear_2 3B5A                                    clear_3 3B66  
                        ___awdiv@quotient 00CD                    ??_verifie_Precondition 00EE  
                      ?_USBEnableEndpoint 001A                          calc_Time@initial 00CF  
                          _select_Battery 40A6                                    _strcpy 3E48  
                                  _strlen 3C9E                     ___ftmul@f3_as_product 00DD  
           __size_of_USBTransferOnePacket 00D8                                 ??_isdigit 00C7  
                            _CDCTxService 1606                              __mediumconst 7D2E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8           __end_of_APP_CustomCDCInitialize 40A4  
                     ??_USBEnableEndpoint 001B                          __end_of_start_CC 3C9E  
                        __end_of_start_CV 3A66                                 ??_stop_CV 00EE  
                          _select_Program 40A4                                 ??_sprintf 00D4  
                             _CtrlTrfData 000438                                 ??_strncmp 00CD  
                               ??_strncpy 00CD            __size_of_APP_USBCBErrorHandler 0002  
                           ?_list_Battery 00C7             __end_of_APP_USBCBErrorHandler 40B4  
                    _controlTransferState 003E                         _SYSTEM_Initialize 3FFC  
                              __accesstop 0060                   __end_of__initialization 3B8C  
                         __CFG_PBADEN$OFF 000000                               _InitCharger 355A  
                              ___ftadd@f1 00E2                                ___ftadd@f2 00E5  
                              ___ftge@ff1 00E2                                ___ftge@ff2 00E5  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___ftdiv@f1 016F                                ___ftdiv@f2 0172  
                              ___ftdiv@f3 0179                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 00C7                                ___awtoft@c 00CF  
                      __size_of_calc_Time 008C                       __size_of_USBSuspend 0028  
                           ?_list_Program 00C7                                ___ftmul@f1 00D3  
                              ___ftmul@f2 00D6                              stop_CV@v_bat 0188  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 3DAA  
                           __end_of_sd000 7E2D                             __end_of_sd001 7DE9  
                           __end_of_sd002 7E17                              __pidataBANK1 4046  
                     ??_SYSTEM_Initialize 00CF          __size_of_USBCtrlEPAllowDataStage 009E  
                  __end_of_select_Battery 40A8             __size_of_USBConfigureEndpoint 0094  
             __end_of_USBCtrlTrfInHandler 328A                                ___lwtoft@c 00CF  
                  i2_USBTransferOnePacket 3402                         _CDCTxService$2649 00CF  
                              _cdc_notice 0100                                 ?i2_memset 0012  
                              _cdc_rx_len 009C                    __end_of_select_Program 40A6  
                              _cdc_tx_len 009E                  ??_USBCtrlTrfSetupHandler 002C  
                          _SelChanConvADC 3FDA                          ?_USBDeviceAttach 0001  
               __end_of_SYSTEM_Initialize 401C                            ??_list_Battery 00C9  
                  _USBStdGetStatusHandler 3348                              sprintf@width 00E3  
                              _check_Lipo 4092                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                             ?_OpenTimer1 0001                                   ?_CalcPI 017E  
               check_Precondition@voltage 0188               __size_of_USBWakeFromSuspend 002E  
                             _pBDTEntryIn 006E                                   ?_V_Eval 017E  
                          ??_list_Program 00C9          __end_of_USBCtrlEPServiceComplete 26EC  
                              _end_Charge 40AA                      __size_of_list_Action 000C  
             __size_of_USBCheckCDCRequest 00D0                      USBCtrlTrfRxService@i 0012  
               __size_of_APP_USBCBSuspend 0002                                   ?___ftge 00E2  
                                 ?___wmul 00C7                           ?_select_Battery 0001  
                                 ?_memset 00C7                                _device_dsc 7E17  
                               ?___awtoft 00CF                                 ?___ftpack 00C7  
                        _USBCtrlEPService 2C2C                                _ep_data_in 0085  
                                 ?_strcpy 00C7                                   ?_strlen 00C7  
                               ?___lwtoft 00CF               __end_of_USBCtrlTrfRxService 24EC  
                      _USBCheckStdRequest 26EC                         _configDescriptor1 7D6E  
                              ??i2_memset 0018               __end_of_USBCtrlTrfTxService 2DD6  
                  __end_of_SelChanConvADC 3FFC                       _USBStdSetCfgHandler 27E0  
                       __end_of_calc_Time 37A2                           ?_select_Program 0001  
              ??_APP_USBCBWakeFromSuspend 0012                                _cur_Action 010A  
                     ?_USBCheckStdRequest 0001                     __size_of_APP_USB_send 006E  
            __size_of_USBStdGetDscHandler 013C                                   _UIEbits 000F69  
                                 _I_V_Set 2F70                                   _UIRbits 000F68  
              __end_of_check_Precondition 2A7E                             _cdc_trf_state 009D  
                       ?_SYS_InterruptLow 0001                                   _BusyADC 4086  
                                 _ReadADC 4034                           __size_of_CalcPI 03E0  
                      ??_SYS_InterruptLow 0001                                   _pCDCDst 008B  
                                 _pCDCSrc 008E                                   _OpenADC 37A2  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 3AD4                           __size_of_V_Eval 00D6  
                                 __Lparam 0000                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 002C                           __size_of___ftge 00C8  
           __size_of_USBCtrlTrfOutHandler 005C                                   ___awdiv 328A  
                                 ___ftadd 139E                                   ___ftdiv 1EDA  
        __size_of_APP_CustomCDCInitialize 0006                                   ___ftneg 3EAE  
                        ??_USBDeviceTasks 002D                           __size_of___wmul 0036  
                                 ___ftmul 1C26                                 ?_start_CC 018B  
                               ?_start_CV 018B                                   ___lwdiv 389A  
                       ??_USBStallHandler 0012                      __size_of_putUSBUSART 0026  
                                 __pcinit 3B3C                                ??___awtoft 00D2  
                              ??___ftpack 00CC                                   _battery 010D  
                         __size_of_memset 0034                 __end_of_configDescriptor1 7DB1  
                                 __ramtop 0800                                _initialize 407A  
                     __size_of_OpenTimer1 0032                                   __ptext0 401C  
                                 __ptext1 1D84                                   __ptext2 3DE0  
                                 __ptext3 3E14                                   __ptext4 3FFC  
                                 __ptext5 355A                                   __ptext6 3E7C  
                                 __ptext7 37A2                                   __ptext8 1606  
                                 __ptext9 2A7E                                   _inPipes 0068  
             _USBDeferOUTDataStagePackets 0039                                ??___lwtoft 00D2  
                            _APP_USB_send 3A66                           __size_of_strcpy 0034  
                         __size_of_strlen 004A                         __end_of_hexpowers 7D52  
                               _T1CONbits 000FCD                              ??_USBSuspend 0026  
                                 _isdigit 3F62                                   _seconds 007E  
                         ?_SelChanConvADC 0001                           i2_USBDeviceInit 229C  
                   _APP_USBCB_SOF_Handler 40AC                          i2USBDeviceInit@i 001A  
                                 _timeout 0098                                   _strDate 7D2F  
                                 _strManu 7D68                                   _strMisc 7D5A  
                      __end_of_USB_CD_Ptr 7D6E                                   _stop_CV 28C6  
                          OpenADC@config2 00C7                __size_of_SYSTEM_Initialize 0020  
                                 _sprintf 089C           __size_of_USBCtrlTrfSetupHandler 008E  
                       calc_Time@interval 00D5                                   _strncmp 2EA6  
                          __pintcode_body 3984                                   _strncpy 3912  
                             ?_check_Lipo 00C7                      end_of_initialization 3B8C  
                   start_Precondition@res 018D                     SelChanConvADC@channel 00C8  
                      __end_of_USB_SD_Ptr 7D68                         _precondition_Time 0091  
                     _pBDTEntryEP0OutNext 0031                                   memset@c 00C9  
                                 memset@n 00CB                                   memset@p 00CD  
                           __Lmediumconst 7D2E                                   int_func 3984  
         _dummy_encapsulated_cmd_response 0167                  ?_USBStdFeatureReqHandler 0001  
                      _start_Precondition 3BF6                     ??_USBStdSetCfgHandler 0026  
                              ?_CDCInitEP 0001                               ?_end_Charge 0001  
                      __end_of_USBSuspend 3FB4                         __end_of_strDevice 7D5A  
                 _USBCtrlEPAllowDataStage 34BC                                   postdec1 000FE5  
                                 postdec2 000FDD                       ?_start_Precondition 018B  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ??_start_CC 00EE                                ??_start_CV 00EE  
                _USBCtrlEPServiceComplete 25F8                      __end_of_list_Battery 406E  
                                 strlen@s 00C7                _USBStatusStageEnabledFlag1 003B  
              _USBStatusStageEnabledFlag2 003C                        USBEnableEndpoint@p 001B  
                    __end_of_list_Program 4062                        _BothEP0OutUOWNsSet 0035  
                    ??_start_Precondition 00EE                             ?_verifie_Ibat 018B  
                           ?_verifie_Vbat 018B                 USBConfigureEndpoint@EPNum 0017  
              __end_of_APP_CustomCDCTasks 089C                ?_USBCtrlEPAllowStatusStage 0001  
                  __size_of_select_Action 0002       USER_USB_CALLBACK_EVENT_HANDLER@size 0022  
                               _USTATcopy 004D                                _strVersion 7D3E  
                            ?_InitCharger 0001              __end_of_USBTransferOnePacket 2B56  
                             ___ftdiv@exp 017C                            __end_of_CalcPI 1118  
                       putUSBUSART@length 00CF                               ___ftmul@exp 00DC  
                          __end_of_V_Eval 2C2C                          _APP_USBCBSuspend 40B0  
                  _USBCtrlTrfSetupHandler 3688                   ?i2_USBTransferOnePacket 0012  
                   __end_of_USBDeviceInit 1EDA                            __end_of___ftge 3102  
                          __end_of___wmul 3DE0                       __size_of_check_Lipo 000C  
                             ?_initialize 00C7                   __end_ofi2_USBDeviceInit 23D4  
                               i2memset@c 0014                                 i2memset@n 0016  
                               i2memset@p 0018                            __end_of_memset 3E14  
                       _USBBusIsSuspended 0037             __size_of_verifie_Precondition 0188  
                  ?_APP_USBCB_SOF_Handler 0001                            __end_of_strcpy 3E7C  
                          __end_of_strlen 3CE8                       start_initialization 3B3C  
                 ?_USBStdGetStatusHandler 0001             USBCtrlTrfRxService@byteToRead 0013  
                     __size_of_end_Charge 0002                            ??_verifie_Ibat 00EE  
                          ??_verifie_Vbat 00EE                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 3688           __end_of_USBStdFeatureReqHandler 139E  
                            ??_OpenTimer1 00C7         __end_of_USBCtrlEPAllowStatusStage 31C6  
                             start_CC@res 018D                  __end_of_USBCtrlEPService 2D02  
                             start_CV@res 018D                     _APP_USBCBErrorHandler 40B2  
                                ??_CalcPI 0180                 ??_USBCtrlEPAllowDataStage 0013  
                                ??_V_Eval 00EE                               ??_CDCInitEP 001E  
                          USBDeviceInit@i 00CF                          ??_select_Battery 00C7  
                  _pBDTEntryEP0OutCurrent 002F                   USBTransferOnePacket@dir 00C7  
                 USBTransferOnePacket@len 00CA            __end_ofi2_USBTransferOnePacket 34BC  
                 _APP_CustomCDCInitialize 409E                                  ??___ftge 00E8  
                                ??___wmul 00CB                       _USBStdGetDscHandler 2026  
                           _select_Action 40A8                               __pdataBANK1 0192  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memset 00CD  
                        ??_select_Program 00C7                                  ??_strcpy 00CB  
                                ??_strlen 00C9                        __end_of_OpenTimer1 3EAE  
                  _USBActiveConfiguration 004C            __end_of_USBStdGetStatusHandler 3402  
                       __size_of___awtoft 0044                         __size_of___ftpack 010C  
                             __pbssCOMRAM 002D                         __size_of___lwtoft 002A  
                           __pcstackBANK0 00B6                             __pcstackBANK1 016F  
                           __pcstackBANK2 0280              __size_of_USBCtrlTrfInHandler 00C4  
                             _charge_Time 0082                              _isdigit$3312 00C8  
                    ?_USBStdGetDscHandler 0001                                  ?_I_V_Set 0184  
                               _calc_Time 3716                __end_of_USBWakeFromSuspend 3F0C  
                             sprintf@flag 00E1                             ??_list_Action 00C9  
                             sprintf@prec 00E5                           _USBStallHandler 3D2C  
                     __size_of_initialize 000C                              _pBDTEntryOut 0074  
                                ?_BusyADC 0001                                  ?_ReadADC 00C7  
              __end_of_USBCheckCDCRequest 2EA6                                 _algo_Name 0192  
                __size_of_USBDeviceAttach 0034                         OpenADC@portconfig 00C8  
                                ?_OpenADC 00C7                     __size_of_list_Battery 000C  
                        ___lwdiv@dividend 00C7                                 __pintcode 0008  
                         verifie_Ibat@end 018B                             __pmediumconst 7D2E  
                         verifie_Ibat@res 0190                            ?_select_Action 0001  
                                ?___awdiv 00C7                                  ?___ftadd 00E2  
                      _check_Precondition 29A4                                  ?___ftdiv 016F  
                                ?___ftneg 00C7                                  ?___ftmul 00D3  
                                ?___lwdiv 00C7                               __pintcodelo 0018  
               __size_of_SYS_InterruptLow 008E                          ??_SelChanConvADC 00C7  
                   __size_of_list_Program 000C                          ?i2_USBDeviceInit 0001  
              USBCBSendResume@delay_count 002D                         __size_of_start_CC 0054  
                       __size_of_start_CV 0070                          APP_USB_send@args 016F  
                     ?_check_Precondition 0184                      _USBTransferOnePacket 2A7E  
                               _cur_State 010C                                  ?_isdigit 0001  
                         verifie_Vbat@end 018B                           verifie_Vbat@res 0190  
            __end_of_USBCtrlTrfOutHandler 3BF6                                 _hexpowers 7D4A  
                   ??_USBStdGetDscHandler 0012                               _ep_data_out 0088  
                        ___lwdiv@quotient 00CC                                  ?_stop_CV 0184  
                                ?_sprintf 00CE              __size_of_USBCtrlTrfRxService 0118  
           USBConfigureEndpoint@direction 0012                                  ?_strncmp 00C7  
                            ??_check_Lipo 00C9                                  ?_strncpy 00C7  
                              ?_calc_Time 00CF                              _list_Battery 4062  
                  ?_APP_USBCBErrorHandler 0001              __size_of_USBCtrlTrfTxService 00D4  
                          ___wmul@product 00CB                             OpenADC@config 00CB  
                    ??_check_Precondition 00EE                ??_USBCtrlEPServiceComplete 0013  
                             strncpy@from 00C9                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                             strncpy@size 00CB                 ??_APP_CustomCDCInitialize 001E  
                    __size_of_InitCharger 009A                              ??_end_Charge 00C7  
       __size_of_APP_USBCBWakeFromSuspend 0002                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                 ?_APP_USBCBWakeFromSuspend 0001  
                            _list_Program 4056                                  i2u671_40 2D82  
                                i2u671_47 2D78                 USBCtrlEPService@setup_cnt 002C  
                                i2u673_40 2DC0                                  i2u673_47 2DB6  
                                i2u696_40 20A6                                  i2u696_47 209C  
                                i2u697_40 20DA                                  i2u697_47 20D0  
                                i2u699_40 212E                                  i2u699_47 2124  
                                _RCONbits 000FD0                             ??_putUSBUSART 00D0  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
                     __end_of_list_Action 407A                _USBDeferINDataStagePackets 0038  
                    __end_of_verifie_Ibat 1C26                       verifie_Ibat@current 018D  
             __size_of_USBCheckStdRequest 00F4                      __end_of_verifie_Vbat 1916  
                                _UCONbits 000F6D                      _USBConfigureEndpoint 35F4  
                               _usbOutCnt 0042                        APP_USB_send@format 00E7  
                               _strDevice 7D52          __size_of_USBStdFeatureReqHandler 0286  
                      __end_of_check_Lipo 409E                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 00C7                     ?_USBTransferOnePacket 00C7  
          check_Precondition@precondition 0184                         _SYS_InterruptHigh 0008  
                           ?_CDCTxService 0001                              _RemoteWakeup 0036  
                                i2_memset 3F0C                        ?_SYS_InterruptHigh 0001  
                             _cur_Program 010B                  __end_of_APP_USBCBSuspend 40B2  
                 __end_of_USBStallHandler 3D6E                        __end_of_end_Charge 40AC  
                               copy_data0 3B80                            I_V_Set@channel 0186  
             ??_USBCtrlEPAllowStatusStage 0012               __end_of_USBStdSetCfgHandler 28C6  
                        __size_of_I_V_Set 00CA                       ??_SYS_InterruptHigh 00B9  
                      __end_of_device_dsc 7E29                          __size_of_BusyADC 000C  
                 ?_USBCtrlTrfSetupHandler 0001                          __size_of_ReadADC 0012  
                 USBStdGetStatusHandler@p 0013                                  __Hrparam 0000  
                         ??_select_Action 00C7                          __size_of_OpenADC 007C  
                              I_V_Set@res 0187                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 00CB                        _APP_CustomCDCTasks 00AA  
                                _SetupPkt 000430               verifie_Precondition@voltage 018D  
                   ?_USBConfigureEndpoint 0012                         ??_USBDeviceAttach 00C7  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___ftdiv 014C                          __size_of___ftneg 0030  
                        __size_of___ftmul 015E                          __size_of___lwdiv 0078  
                            ??_initialize 00C9                                  ___awtoft 3CE8  
                                ___ftpack 24EC                   ??_APP_USBCB_SOF_Handler 0012  
                              stop_CV@res 0186                 __end_of_SYS_InterruptHigh 39F6  
                     ?_APP_CustomCDCTasks 0001                       __end_of_putUSBUSART 3FDA  
                             _line_coding 0043                                  ___lwtoft 3F38  
                          ??_CDCTxService 00CE                                sprintf@idx 00D8  
                              sprintf@len 00DF                                sprintf@val 00DD  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 013A  
                         ___lwdiv@divisor 00C9                           ___lwdiv@counter 00CB  
                                __ptext10 00AA                                  __ptext11 178E  
                                __ptext20 3BF6                                  __ptext12 1916  
                                __ptext21 39F6                                  __ptext13 1A9E  
                                __ptext30 4056                                  __ptext22 3C4A  
                                __ptext14 3912                                  __ptext31 4062  
                                __ptext23 2F70                                  __ptext15 3716  
                                __ptext40 1EDA                                  __ptext32 406E  
                                __ptext24 0D38                                  __ptext16 328A  
                                __ptext41 3CE8                                  __ptext33 407A  
                                __ptext25 3EAE                                  __ptext17 2EA6  
                                __ptext50 3DAA                                  __ptext42 24EC  
                                __ptext34 40AA                                  __ptext26 139E  
                                __ptext18 3E48                                  __ptext51 389A  
                                __ptext43 3FDA                                  __ptext35 29A4  
                                __ptext27 40A4                                  __ptext19 28C6  
                                __ptext60 3D2C                                  __ptext52 3FB4  
                                __ptext44 4034                                  __ptext36 3F38  
                                __ptext28 40A6                                  __ptext61 2C2C  
                                __ptext53 4092                                  __ptext45 4086  
                                __ptext37 303A                                  __ptext29 40A8  
                                __ptext70 1118                                  __ptext62 3688  
                                __ptext46 3A66                                  __ptext38 2B56  
                                __ptext71 381E                                  __ptext63 25F8  
                                __ptext47 3C9E                                  __ptext39 1C26  
                                __ptext80 3D6E                                  __ptext72 2DD6  
                                __ptext64 34BC                                  __ptext56 2162  
                                __ptext48 089C                                  __ptext81 35F4  
                                __ptext73 40AC                                  __ptext65 26EC  
                                __ptext57 229C                                  __ptext49 3F62  
                                __ptext82 3B9A                                  __ptext74 40AE  
                                __ptext66 27E0                                  __ptext58 3EDE  
                                __ptext83 23D4                                  __ptext75 40B0  
                                __ptext67 3F0C                                  __ptext59 3F8C  
                                __ptext84 3102                                  __ptext76 40B2  
                                __ptext68 3348                                  __ptext85 31C6  
                                __ptext77 409E                                  __ptext69 2026  
                                __ptext86 2D02                                  __ptext78 3AD4  
                                __ptext79 3402               __size_of_start_Precondition 0054  
                             ??_calc_Time 00D3                          __size_of_stop_CV 00DE  
                        __size_of_sprintf 049C                          __size_of_strncmp 00CA  
                        __size_of_strncpy 0072                                strcpy@from 00C9  
                    ??_APP_CustomCDCTasks 00EE            __end_of_USBCtrlTrfSetupHandler 3716  
                           __size_of_main 0018              __end_of_verifie_Precondition 1A9E  
                       ?_USBCtrlEPService 0001                               _list_Action 406E  
                              strncmp@len 00CB                        __end_of_initialize 4086  
                      ??_USBCtrlEPService 00B6                       _USBCtrlTrfInHandler 31C6  
                                _outPipes 0060                      _USBCtrlTrfOutHandler 3B9A  
                                int$flags 004E                 _USBCtrlEPAllowStatusStage 3102  
                                _start_CC 3C4A                                  _start_CV 39F6  
                        _SYS_InterruptLow 0018                    ??_USBTransferOnePacket 00CB  
                   __CFG_CPUDIV$OSC1_PLL2 000000                 _USBDeferStatusStagePacket 003A  
                CDCTxService@byte_to_send 00D2                                _INTCONbits 000FF2  
                    ?_USBCtrlTrfInHandler 0001             USBCtrlTrfTxService@byteToSend 0012  
                                isdigit@c 00C9                                  memset@p1 00C7  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 002A  
                                intlevel1 0000                                  intlevel2 0000  
                               sprintf@ap 00D9                                 sprintf@cp 00DB  
                               sprintf@sp 00CE                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 389A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 007C  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0024          ?_USER_USB_CALLBACK_EVENT_HANDLER 001E  
         _USER_USB_CALLBACK_EVENT_HANDLER 381E              i2USBTransferOnePacket@handle 0017  
                   check_Precondition@res 0186                     __size_of_verifie_Ibat 0188  
                   __size_of_verifie_Vbat 0188                                 strncmp@s1 00C7  
                               strncmp@s2 00C9                                 strncpy@cp 00CD  
                               strncpy@to 00C7                i2USBTransferOnePacket@data 0013  
                  ??_USBConfigureEndpoint 0013                     ?_USBCtrlTrfOutHandler 0001  
                             _putUSBUSART 3FB4                       _USBCtrlTrfRxService 23D4  
                      _USBWakeFromSuspend 3EDE                   _USBStdFeatureReqHandler 1118  
                             _usbInBuffer 0240                        _USBCheckCDCRequest 2DD6  
                     _USBCtrlTrfTxService 2D02                __size_of_SYS_InterruptHigh 39EE  
                 verifie_Precondition@end 018B                   verifie_Precondition@res 0190  
                           ?_APP_USB_send 00E7                                  sprintf@c 00E6  
                                sprintf@f 00D0                        __end_of_strVersion 7D4A  
                     ?_USBWakeFromSuspend 0001                     ??_USBCtrlTrfInHandler 0013  
                                strcpy@cp 00CB                                  strlen@cp 00CB  
                                strcpy@to 00C7                     _USBAlternateInterface 004A  
                   APP_CustomCDCTasks@end 02E4                       ?_USBCheckCDCRequest 0001  
                   APP_CustomCDCTasks@res 02F0                              _usbOutBuffer 0200  
               i2USBTransferOnePacket@dir 0012                 i2USBTransferOnePacket@len 0015  
                     USBEnableEndpoint@ep 001D                           _endpoint_number 0040  
                 ??_APP_USBCBErrorHandler 0012          __end_of_APP_USBCBWakeFromSuspend 40B0  
                    ?_USBCtrlTrfRxService 0001                              _verifie_Ibat 1A9E  
                            _verifie_Vbat 178E                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            _USBStatusStageTimeoutCounter 003D                      ??_USBWakeFromSuspend 0026  
              USBTransferOnePacket@handle 00CC                      __end_of_CDCTxService 178E  
                    ??_USBCheckCDCRequest 0012                                _USB_CD_Ptr 7D6C  
